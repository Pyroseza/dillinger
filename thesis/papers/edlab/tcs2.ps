%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: tcs2.dvi
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips tcs2
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1999.05.03:1247
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (tcs2.dvi)
@start /Fa 7 118 df<EA0FF0EA1FFC487EEA3C0FEA180738000380A213FF1207121FEA
7F03127812E0A3EAF007EA780F383FFFF8EA1FFDEA07F015147E9318>97
D<EA01F0EA07FCEA1FFEEA3E0F38380780EA7003A238E001C0A2B5FCA300E0C7FC1270EB
01C01238EA3E07381FFF8000071300EA01F812147D9318>101 D<38F9C1C038FFF7F013
FF383E3E38EA3C3CA2EA3838AB38FE3E3EEB7E7EEB3E3E1714809318>109
D<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAB387FC7FC38FFE7FE387FC7FC17
14809318>I<EA07F7EA3FFF5AEA780FEAE007A3007CC7FCEA7FE0EA1FFCEA03FEEA001F
38600780EAE003A212F038F80F00B5FC13FCEAE7F011147D9318>115
D<487E1203A4387FFFC0B5FCA238038000A9144014E0A33801C1C013FF6C1380EB3E0013
197F9818>I<387E07E0EAFE0FEA7E07EA0E00AC1301EA0F033807FFFC6C13FE3801FCFC
1714809318>I E /Fb 2 51 df<1218127812981218AC12FF08107D8F0F>49
D<121FEA6180EA40C0EA806012C01200A213C0EA0180EA030012065AEA10201220EA7FC0
12FF0B107F8F0F>I E /Fc 13 118 df<903803F80290381FFF0690387E03863901F000
CE4848133ED80780131E48C7FC48140E001E1406123E123C007C1402A2127800F81400A8
1278007C1402A2123C123E001E1404121F6C14086C6C1318D803E013306C6C136039007E
03C090381FFF00EB03FC1F247CA227>67 D<B612F0A238078001EC0070153015101518A2
1508A21410A21500A214301470EBFFF0A2EB807014301410A491C7FCA8EAFFFEA21D227D
A123>70 D<007FB6FCA2397801E00F0060140381124000C01580A200801400A400001500
B3A290B512C0A221227DA127>84 D<1304130EA3131FA2EB2F801327A2EB43C0A2EBC3E0
1381A248C67EA2487F13FF38020078487FA3487F1218003C131F00FEEB7FE01B1A7F991F
>97 D<B57E381E01E0EB0070808080A280A21580A81500A25C140E5C5C5C495AB5128019
1A7E991F>100 D<B512F8381E007814181408140C1404A3EB0200A31306EA1FFEEA1E06
1302A3EB0002A314061404A2140C143CB512FC171A7E991C>I<EAFFC0EA1E00B3A6EAFF
C00A1A7E990F>105 D<EAFFE0001FC7FC121EAF1410A314301420146014E01301B5FC14
1A7E991A>108 D<00FEEB3F80001FEB0E00EB80041217EA13C0EA11E013F01210137813
7C133C131E130F14841307EB03C4EB01E4A2EB00F4147CA2143C141C140C123800FE1304
191A7E991F>110 D<EB7F803801C0E038070038000E7F487F003C130F00387F00781480
00701303A200F014C0A70078EB0780A200381400003C5B001C130E6C5B6C5B3801C0E038
007F801A1A7E9920>I<EAFFFE381E03C0EB00E0801478A55C5CEB03C0D81FFEC7FC381E
0380EB01E0130080A615401470EC388039FFC01F001A1A7E991E>114
D<EA07E1EA181BEA3007487EA2EAE001A36CC7FC12FCEA7F80EA3FF86C7E6C7EC67E131F
EB0780A2EA8003A300C013005BEAE006EADC0CEA83F0111A7E9917>I<39FFC03F80391E
000E001404B2000E5B120F6C5B6C6C5A3800E0C0013FC7FC191A7E991F>117
D E /Fd 1 4 df<120CA2EACCC012EDEA7F80EA0C00EA7F80EAEDC012CCEA0C00A20A0B
7D8B10>3 D E /Fe 1 83 df<B512F814FF391870378090386018C015606E7E81A55DA2
EC18E0EC37C0D97FFFC7FC14F8EB6618136380EB618CEB60C614C31463EC61806E7EA2EC
1860816E7E1406150E3AFFFE03FF808021227EA127>82 D E /Ff
1 83 df<B512F014FE3938C07F800018EB19C0EC0C601530A41560EC18E0EC3FC090B512
0014F8EBCC6013C680EBC31880EBC18C1486EBC0C3ECC1801461EC60C0EC30601530EC18
18EA38E039FFFC0FFE14071F1F7F9E26>82 D E /Fg 4 104 df<127012F8A312700505
7C8D0D>1 D<0040148000C01301B3A20060EB0300A26C1306001C131C000F13783803FF
E0C61380191C7E9A1E>91 D<130F1338136013E0EA01C0AFEA0380EA0700121E12F8121E
1207EA0380EA01C0AFEA00E013601338130F102D7DA117>102 D<12F8121E1207EA0380
EA01C0AFEA00E013601338130F1338136013E0EA01C0AFEA0380EA0700121E12F8102D7D
A117>I E /Fh 2 60 df<137CEA0180EA0700120E5A123C12381278A2EA7FF0EAF000A3
1270A312301238EA0C18EA07E00E147E9312>15 D<127012F012F8A212781208A31210A3
1220A21240050E7C840D>59 D E /Fi 4 79 df<1306130C131813301370136013C01201
1380120313005A1206120E120C121CA212181238A312301270A65AB21270A612301238A3
1218121CA2120C120E120612077E1380120113C012001360137013301318130C13060F4A
788119>16 D<12C012607E7E121C120C7E12077E1380120113C0120013E013601370A213
301338A31318131CA6130EB2131CA613181338A313301370A2136013E013C01201138012
0313005A12065A121C12185A5A5A0F4A7F8119>I<EDFFC0020F13FC023F13FF9139FF0E
3FC0D903F0EB03F0D90FC0EB00FCD91F00143E013C150F496F7E496F7E48486F7E48486F
7E4848167890C71538000E83A24883A24883A248EF0380A448EF01C0A3BAFCA300E0C700
0EC71201A40070EF0380A46CEF0700A26C170EA26C5FA26C5F6D16786C6C5E6C6C4B5A6C
6C4B5A01784B5A6D4BC7FC011F153ED90FC014FCD903F0EB03F0D900FFEB3FC0023FB5C8
FC020F13FC020013C03A3A7E7F3F>77 D<ECFF80010713F0011F13FC90387F007F01F8EB
0F80D801E0EB03C048486D7E48486D7E486C497E486C497ED81CF0EB079CD83878EB0F0E
6D131E486C497E6D137890380780F0903803C1E03BE001E3C00380903800F780EC7F0014
3EA2147FECF780903801E3C03B7003C1E0070090380780F090380F0078011E133C6C48EB
1E0E49130F6C48EB079CD81FE0EB03FC6C486D5A6C486D5A6C6C495A6C6C495AD800F8EB
0F80017F017FC7FC90381FFFFC010713F001001380292A7E7F2E>I
E /Fj 4 113 df<EA0780EA18005A5A127F12C0A212401260EA3080EA1F00090B7E8A0D>
15 D<1204120C1200A5123012581298A21230A212601264A21268123006127E910B>105
D<EA07C0EA1820EA3030EA60101318EAC030A21320EA4060EA2180EA1F000D0B7E8A0F>
111 D<EA1C70EA278CEA260413061206EA0C0CA31318EA1E30EA19C0EA1800A25AA212FC
0F10808A10>I E /Fk 18 122 df<EA07C0EA1C0012305AA2B4FC12C0A51240EA20C0EA
1F000A0E7E8D0E>15 D<130813181330A31360A313C0A3EA0180A3EA0300A21206A35AA3
5AA35AA35AA35AA20D217E9812>61 D<EB1F81EBF062380180163807000E120E4813045A
123012700060130012E0A338C007FEEB0070A27E14E012601270EA3001380C06C03803F8
4018177E961B>71 D<D807F0EB0FE00000EC1E0013B8152E154ED80138135C159CEC011C
131C0002EB02381404A214080004495A130E1420144000085C1480EB0F007F39180601C0
39FE040FF823177F9622>77 D<EA0710EA18F0EA30701260136012C0A3EA80C013C4A212
C1EA46C8EA38700E0E7E8D13>97 D<127C1218A45AA4EA6780EA68C0EA7040EA606012C0
A4EA80C0A2EA8180EAC1001246123C0B177E960F>I<EA07C0EA0C20EA10701220EA6000
5AA35AA2EAC0101320EA60C0EA3F000C0E7E8D0F>I<133E130CA41318A4EA0730EA18F0
EA30701260136012C0A3EA80C013C4A212C1EA46C8EA38700F177E9612>I<1203138013
00C7FCA6121C12241246A25A120C5AA31231A21232A2121C09177F960C>105
D<1318133813101300A6EA01C0EA0220EA0430A2EA08601200A313C0A4EA0180A4EA6300
12E312C612780D1D80960E>I<EA383CEA44C6EA47021246EA8E06120CA3485A14401318
1480EA3009EB0E00120E7F8D15>110 D<EA07C0EA0C20EA1010EA2018126012C0A3EA80
30A2EAC06013C0EA6180EA3E000D0E7E8D11>I<EA1C3CEA2246EA2382130312461206A3
EA0C06A2130C1308EA1A30EA19E0EA1800A25AA312FC1014808D12>I<EA07C0EA0C20EA
1870A2EA3800121EEA0FC0EA03E0EA0060126012E0EAC0C0EAC180EA3F000C0E7E8D10>
115 D<EA1C04EA26061246A2EA8604120CA3EA1808A213101320EA0C60EA07800F0E7F8D
11>118 D<381C0204382606061246A238860C04120CA338181808A214101208380C2C20
3803C7C0170E7F8D19>I<EA0F1F3811A180EA20C31400EA41801201A348C7FC130212C3
EAE704EAC508EA78F0110E7F8D14>I<EA1C02EA26061246A2EA860C120CA3EA1818A313
38EA0C70EA07B0EA00301360127013C0EA2180EA1E000F147F8D11>I
E /Fl 6 104 df<B512F0A214027D881B>0 D<1202A3EAC218EAF278EA3AE0EA0F80A2EA
3AE0EAF278EAC218EA0200A30D0E7E8E12>3 D<13FC3807038038080040481320002813
5000241390004413883842010838810204EA808413481330A213481384EA810238420108
384400880024139000281350001013206C1340380703803800FC0016187E931B>10
D<1206120FA2120E121EA2121C123C1238A212301270A2126012E012C0124008117F910A
>48 D<137813C0EA0180EA0300AB12065A12F0120C7E7EABEA0180EA00C013780D217E98
12>102 D<12F0120C7E7EABEA0180EA00C0137813C0EA0180EA0300AB12065A12F00D21
7E9812>I E /Fm 18 107 df<B612FCA21E027C8C27>0 D<127012F8A3127005057C8E0E
>I<EB0FF0EB708E39018081803902008040481420481410481408A2481404A2481402A3
481401A3B7FC3980008001A400401402A36C1404A26C1408A26C14106C14206C14403901
8081803900708E00EB0FF020227D9C27>8 D<EB0FF0EB700E39018001800002C7124048
1420000C143000121448001114883920800104A23940400202EB2004EB10083980081001
EB0420EB0240EB0180A2EB0240EB0420EB08103940100802EB2004EB40023920800104A2
0011C7128800121448000C1430000414206C144039018001803900700E00EB0FF020227D
9C27>10 D<EA03F0EA0FFCEA1C0EEA300338600180A238C000C0A838600180A238300300
EA1C0EEA0FFCEA03F012147D9519>14 D<EA03F0EA0FFC487E487E481380A2B512C0A86C
1380A26C13006C5A6C5AEA03F012147D9519>I<1360A45BA2485A48CAFCA2120E5A5AB8
12C0A20038CAFC7E7E1203A26C7E6C7EA21360A42A1A7C9832>32
D<4B7EA46F7EA2166082A2161C8282B812E0A2C9EA0700160E5E1630A25E5EA24B5AA42B
1A7D9832>I<156081A281A2818181B77E16E0C91270161CEE0F80EE03E0EE0780EE1E00
16381660B75A5EC80003C7FC15065D5DA25DA25D2B1C7D9932>41
D<D803F8EB01F8D807FEEB0FFE3A1E3F801C033B3807C03001803A2003E06000486C6C48
1340903800F98000C0017FC71220487F143E806E7E141F6F13600040D933E01340EC61F0
6CD9C0F813803A3001807C033B1807003F8F00D80FFEEB0FFCD803F0EB03F82B157D9432
>49 D<EB1FFF137F3801E000EA03800006C7FC5A5A5AA25AA35AA2B6FCA200C0C7FCA212
60A37EA27E7E7E6C7EEA01E038007FFF131F181E7C9A21>I<1403A21406A2140CA21418
A21430A21460A214C0A3EB0180A2EB0300A21306A25BA25BA25BA25BA25BA2485AA248C7
FCA31206A25AA25AA25AA25AA25A1240183079A300>54 D<12C0A812E0A212C0A803127D
9400>I<0040144000C014C0B3A40060EB0180A26CEB03006C1306000E131C3807807838
01FFE038007F801A1F7D9D21>91 D<130CA2131EA31333A2EB6180A2EBC0C0A338018060
A248487EA300067FA2487FA3487FA2487FA248EB0180A348EB00C015401A1F7D9D21>94
D<EB03C0EB1E0013385B5BB1485A485A000FC7FC12F8120FEA03806C7E6C7EB113707F13
1EEB03C012317DA419>102 D<12F8120FEA03806C7E6C7EB113707F131EEB03C0EB1E00
13385B5BB1485A485A000FC7FC12F812317DA419>I<12C0B3B3AD02317AA40E>106
D E /Fn 29 125 df<1230127812FCA212781230060676851A>46
D<126012F87E127E6C7EEA0FC06C7EEA03F8C67E137EEB3F80EB0FC0EB07E0A2EB0FC0EB
3F80EB7E005BEA03F8EA07E0485AEA3F80007EC7FC5A5A1260131A7D9B1A>62
D<1338137CA2136C13EEA313C6A2EA01C7A3138300031380A4380701C0A213FFA24813E0
EA0E00A3001E13F0001C1370387F01FC38FF83FE387F01FC171E7F9D1A>65
D<EAFFFEEBFF8014C0381C03E0130014F01470A414E01301EB07C0381FFF80A214C0381C
01E0EB00F014701438A5147814F01301B512E014C01400151E7E9D1A>I<EB7C38EA01FF
000713F8EA0F83EA1E00001C13785A14385AA214005AA812701438A27EA26C1370001E13
F0380F83E03807FFC00001138038007C00151E7E9D1A>I<B512F8A3381C0038A41400A3
1307A3EA1FFFA3EA1C07A390C7FCA8EAFFC0A3151E7E9D1A>70 D<00FC137E6C13FEA238
3B01B8A31383A200391338A213C7A2EA38C613EEA2136CA2137C1338A21300A700FE13FE
A3171E7F9D1A>77 D<3803F8E0EA0FFEEA1FFFEA3C07EA780112F0EAE000A31400127012
78EA3F80EA1FF8EA07FF38007FC0EB07E0EB00F014701438A2126012E0A214706C13F038
FE01E0B512C000EF138038E1FE00151E7E9D1A>83 D<387FFFFEB5FCA238E0380EA40000
1300B3A23803FF80A3171E7F9D1A>I<EA1FF0EA3FFC487EEA780FEA300738000380A213
7FEA07FF121FEA3F83EA7803127012E0A3EA7007EA780F383FFFFCEA1FFDEA07F016157D
941A>97 D<127E12FE127E120EA6133EEBFF80000F13E0EBC1F0EB8070EB0038120E141C
A7000F13381478EB80F0EBC1E0EBFFC0000E138038063E00161E7F9D1A>I<EBFF800003
13C0000F13E0EA1F01383C00C04813001270A25AA51270A2007813707E381F01F0380FFF
E0000313C03800FE0014157D941A>I<EA01F8EA07FF481380381E07C0EA3C01387800E0
1270481370A2B512F0A300E0C7FC1270A2007813707E381F01F0380FFFE0000313803800
FE0014157D941A>101 D<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4387FFFF0B5FC
A23800E000AF383FFF804813C06C1380151E7F9D1A>I<3801F87C3807FFFE5A381E078C
381C0380383801C0A5381C0380EA1E07381FFF005BEA39F80038C7FCA27E381FFF8014E0
4813F83878007C0070131C48130EA40070131C0078133C003E13F8381FFFF0000713C000
01130017217F941A>I<127E12FE127E120EA6133EEBFF80000F13C013C1EB80E0130012
0EAC387FC3FC38FFE7FE387FC3FC171E7F9D1A>I<13C0487EA26C5A90C7FCA6EA7FE0A3
1200AF387FFF80B512C06C1380121F7C9E1A>I<EA7FE012FF127F1200B3A6387FFFC0B5
12E06C13C0131E7D9D1A>108 D<387CE0E038FFFBF8EA7FFF381F1F1CEA1E1EA2EA1C1C
AC387F1F1F39FFBFBF80397F1F1F00191580941A>I<EA7E3E38FEFF80007F13C0EA0FC1
EB80E01300120EAC387FC3FC38FFE7FE387FC3FC17157F941A>I<EA01F0EA07FCEA1FFF
383E0F80EA3C07387803C0EA700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F
381FFF00EA07FCEA01F013157D941A>I<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB
0038120E141CA7000F13381478EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC0
487E6C5A16207F941A>I<387F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5B
AAEA7FFFB5FC7E17157F941A>114 D<3807FB80EA1FFF127FEA7807EAE003A30078C7FC
EA7FC0EA1FFCEA07FE38003F801307386001C012E0A2EAF00338FC0780B51200EAEFFEEA
E3F812157C941A>I<487E1203A6387FFFE0B5FCA238038000AA1470A43801C1E013FF6C
1380EB3F00141C7F9B1A>I<387E07E0EAFE0FEA7E07EA0E00AD1301EA0F033807FFFC6C
13FE3800FCFC17157F941A>I<387FC7F8EBCFFCEBC7F8380703C038038380EBC700EA01
EFEA00FE137C13781338137C13EE120113C738038380000713C0EA0F01387FC7FC00FF13
FE007F13FC17157F941A>120 D<387F83FC38FFC7FE387F83FC380E00E0A27EEB01C0A2
EA0381EB838013C31201EBC700EA00E7A213E61366136E133CA31338A35BA2EA30F0EA78
E01271EA7FC06C5A001EC7FC17207F941A>I<126012F0B3B31260042775A21A>124
D E /Fo 39 122 df<137EEA0380EA0700120E5A5A12781270EAFFF0EAF000A25AA51270
A2EA3806EA1C18EA07E00F157D9414>15 D<EA03806C7E6C7E7F1370A213781338A2133C
131CA2131E130EA2130F7FA21480A2130FEB1BC013311361EBC1E0EA01C0EA0380EA0700
000E13705A5A007813784813385A48131C16237DA21C>21 D<EB07C0EB1860EB3030EB60
3813C03801803C1203A2EA0700A3000E1378A314F04813E0EB01C0121EEB0300EA390EEA
38F890C7FCA25AA45AA45A16207F9419>26 D<127012F8A3127005057C840E>58
D<127012F812FCA212741204A41208A21210A212201240060F7C840E>I<14801301A2EB
0300A31306A35BA35BA35BA35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA3
11317DA418>61 D<12C012F0123C120FEA03C0EA00F0133EEB0F80EB01E0EB0078141EEC
0780EC01E0EC0078A2EC01E0EC0780EC1E001478EB01E0EB0F80013EC7FC13F0EA03C000
0FC8FC123C12F012C01D1C7C9926>I<8114018114031407A2140BA2141314331423EC43
E0A21481EB0101A21302A213041308A201107FEB1FFFEB20005BA25BA248C7FC12028148
1478120C001E14F83AFF800FFF8021237EA225>65 D<90B512F090380F001E81ED078001
1E1303A216C0A24914801507A2ED0F0049131E5D5DEC03E090B55A9038F000F015788148
5A151C151EA248485BA35D485A5D4A5AEC0380000F010FC7FCB512F822227DA125>I<02
7F138090390380810090380E00630138132749131F49130E485A485A48C7FC481404120E
121E5A5D4891C7FCA35AA55A1520A25DA26C5C12704AC7FC6C130200185B001C5B000613
30380381C0D800FEC8FC21247DA223>I<90B6128090380F00071501A2131EA21600A25B
A2140192C7FCEB7802A21406140EEBFFFCEBF00CA33801E008A21502EC0004485AA25D15
184848131015305D15E0000F1307B65A21227DA124>69 D<90B6128090380F00071501A2
131EA21600A25BA2140192C7FCEB7802A21406140EEBFFFCEBF00CA33801E008A391C8FC
485AA4485AA4120FEAFFFC21227DA120>I<027F1340903903C0C08090380E0021491313
0170130F49EB0700485A485A48C7FC481402120E121E5A5D4891C7FCA35AA4EC3FFF48EB
00F0A34A5A7EA212704A5A7E001813076C13096CEB1180380380E0D8007FC8FC22247DA2
26>I<9039FFF801FF010FC71278166016C0011EEB010015025D5D4913205D5D0202C7FC
495A5C141C147CEBF0BEEBF11E13F2EBF80FEA01F001E07F1407A248486C7EA36E7EEA07
80811400A2000F497E39FFF80FFF28227DA129>75 D<D9FF80EB03FE010FEC07C0160BA2
D913C0EB1780A2162716470123EC4F00168FA2ED010F0143EB021EEB41E0150415080181
5C1510A21520D80101495AEB00F01580ECF10000025D14F2A214F4489038F801E0A21470
120C001EEB60033AFFC0403FFE2F227DA12F>77 D<147F90380381C090380E0060013813
385B49131C4848131E4848130E48C7FC48140F120E5A123CA25AA348141EA3153CA34814
78A215F06C14E01401EC03C00070EB0780007814000038130E6C13386C5B380783C0D800
FEC7FC20247DA225>79 D<90B512E090380F0038151E150E011E1307A449130FA3151E5B
153C157815E09038F003C09038FFFE0001F0C7FCA2485AA4485AA4485AA4120FEAFFF820
227DA11F>I<147F90380381C090380E0060013813385B49131C4848131E4848130E48C7
FC48140F120E121E5AA25AA348141EA3151C153C5A1578A215F015E06C130190381E03C0
D87021138039784087000038138E001C13B8000E13F03907C1C0203800FE801300010113
4015C0ECC08014C3ECFF007F5C1478202D7DA227>I<903803F81090380E042090381802
6090382001E0EB400001C013C05B1201A200031480A21500A27FEA01F013FE3800FFE06D
7EEB1FF8EB01FCEB003C141C80A30020130CA3140800601318141000705B5C00C85BD8C6
03C7FCEA81FC1C247DA21E>83 D<001FB512FE391E01E00E001814061230382003C0A200
401404A2EB07801280A20000140049C7FCA4131EA45BA45BA45BA41201387FFFC01F227E
A11D>I<D8FFF0EB3FC0D80F80EB0F0090C7120C1508A25D6D5B12075D5DA24AC7FC5CEB
C0025C12035C5CA25C5C13E000015B13E191C8FC13E2A213E413F8A26C5A5BA25BA22223
7DA11C>86 D<EB78603801C4E0EA0302380601C0120E121C123C383803801278A338F007
00A31408EB0E101270131E38302620EA18C6380F03C015157E941A>97
D<EA03C0EA3F801203A348C7FCA4120EA45A137CEA1D86EA1E03003C1380123814C0A212
70A438E00780A3EB0F00130EEA601CA2EA3030EA18E0EA0F8012237EA215>I<141E14FC
141CA31438A41470A414E01378EA01C4EA0302380601C0120E121C123C383803801278A3
38F00700A31408EB0E101270131E38302620EA18C6380F03C017237EA219>100
D<137EEA038138070080120E5A5A38780100EA7006EAFFF800F0C7FCA25AA41480A23870
0300EA3004EA1838EA0FC011157D9417>I<141EEC638014C71301ECC30014801303A449
C7FCA4EBFFF8010EC7FCA65BA55BA55BA4136013E0A25BA21271EAF18090C8FC1262123C
192D7EA218>I<13E0A21201EA00C01300A9121E1223EA4380A21283EA8700A21207120E
A35AA3EA38201340127013801230EA3100121E0B227EA111>105
D<13F0EA0FE01200A3485AA4485AA448C7FC1478EB0184EB021C380E0C3C1310EB2018EB
4000485A001FC7FC13E0EA1C38487EA27F140838701C10A3EB0C20EAE006386003C01623
7EA219>107 D<383C07C038461860384720303887403813801300A2000E1370A44813E0
A2EB01C014C1003813C2EB03821484130100701388383000F018157E941D>110
D<133EEBC180380380C0380700E0120E4813F0123CA25AA338F001E0A214C01303007013
80EB07001306EA381C6C5AEA07E014157E9417>I<3803C0F03804631CEB740EEA0878EB
7007A2140FEA00E0A43801C01EA3143C38038038A2EBC07014E038072180EB1E0090C7FC
A2120EA45AA3B47E181F819418>I<EB7C103801C2303803017000071360380E00E05A12
3C383801C01278A338F00380A4EB070012705BEA3017EA186EEA0F8EEA000EA25BA45BA3
3803FF80141F7E9416>I<137E138138030080EA0201EA0603140090C7FC120713F0EA03
FC6CB4FCEA003FEB07801303127000F01300A2EAE002EA4004EA3018EA0FE011157E9417
>115 D<136013E0A4EA01C0A4EA0380EAFFFCEA0380A2EA0700A4120EA45AA31308EA38
10A21320EA184013C0EA0F000E1F7F9E12>I<001E131800231338EA438014701283A2EA
8700000713E0120EA3381C01C0A314C2EB0384A21307380C0988EA0E113803E0F017157E
941C>I<001E13E0EA2301384381F01380008313701430EA870000071320120EA3481340
A21480A2EB0100A21302EA0C04EA0618EA03E014157E9418>I<001EEB181C0023EB383C
D84380133EEC701E0083140E1506EA87000007EBE004120EA3391C01C008A31510A21520
01031340EA0C0439070861803901F03E001F157E9423>I<3801E0F03806310C38081A1C
0010133CEA201C14181400C65AA45BA314083860E01012F0142038E1704038423080383C
1F0016157E941C>I<001E131800231338EA438014701283EA8700A2000713E0120EA338
1C01C0A4EB0380A21307EA0C0B380E1700EA03E7EA0007A2130E1260EAF01C1318485AEA
8060EA41C0003FC7FC151F7E9418>I E /Fp 22 122 df<13181338EA01F8EA0E701200
A513E0A6EA01C0A6EA0380A6EA07001380EAFFFC0E1E7B9D17>49
D<137F380183C0380201E0EA0400000713F05A1301A2000013E0A2EB03C0EB0780140013
1CEA01F8EA000E7F148014C0130313071230127812F8A200F0138038800F00EA400E6C5A
EA1078EA0FE0141F7D9D17>51 D<137EEA01C338030180000613C0120EEA1C00003C13E0
A213011278A41303A2003813C01307EA1C0BEA0C133803E380EA0007A214005BEA600EEA
F01C1318485AEA8060EA41C0003FC7FC131F7C9D17>57 D<0007B512FC3900F8007C0178
131C150C5B1504A414043901E00800A31438EBFFF8EBE0383803C010A4EC00081510485A
A21520A2156015C0380F00011407B612801E1F7E9E1F>69 D<D807F8EC7FE00000ED7C00
017814BCA2019C495AA21502A2018E13041508D8010E5C1510A26D1320A215400002EC41
E09038038081EC8101A21482A23A0401C403C0A214C8A2EB00F0000C13E04B5A001E01C0
7FD8FFC0EB7FFC2B1F7E9E2A>77 D<0007B5FC3900F803C090387800F015785B157CA415
78484813F815F0EC01E0EC03C0EC0F00EBFFFCD803C0C7FCA6485AA648C8FC7FEAFFF81E
1F7E9E1F>80 D<EA07F8EA0C0CEA1E061307121C1200A313FFEA07C7EA1E07EA3C0E1278
00F01310A3131EEB2E2038784F40381F878014147D9317>97 D<1207123F120F7EA2120E
A65A137CEA1D83381E0180001C13C0EB00E05A14F0A5387001E0A214C013031480EB0700
EAE80EEACC38EA83E014207B9F19>I<1438EB01F8EB00781438A21470A614E013FCEA03
82EA0601121CEA3C00383801C0127812F0A438E00380A412F0EA700738380F00381C3780
3807C7E015207D9F19>100 D<13F8EA070EEA0E07121C383803801278127012F0A2B5FC
00F0C7FC5AA46C5AEA7002EA3004EA1C18EA07E011147D9314>I<EA01C0EA03E0A213C0
EA0180C7FCA6EA0380121F12071203A2EA0700A6120EA65A121EEAFF800B1F7F9E0C>
105 D<13E0120712011200A2EA01C0A6EA0380A6EA0700A6120EA65A121EEAFF800B207F
9F0C>108 D<390387C07C391F9861863907A072073903C03403EB80380007EB7807EB00
70A5000EEBE00EA64848485A001EEBE01E3AFFCFFCFFC022147E9326>I<38038F80381F
90E0EA07A03803C0601380000713E01300A5380E01C0A6381C0380001E13C038FF8FF014
147E9319>I<13FCEA0387380E0180381C00C04813E0A24813F012F0A438E001E0A214C0
130300F0138038700700EA380E6C5AEA07E014147D9317>I<EBE3E03807EC383800F01C
497E140F48487E1580A53903800F00A2140E141E141C5C38074070EB61C0011FC7FC90C8
FCA3120EA4121EEAFFC0191D809319>I<EA038E381FB380EA07C71203EB8300EA078090
C7FCA5120EA65A121EEAFFC011147E9312>114 D<EA01F9EA0607EA080312181301EA38
02EA3C00121F13F0EA07FCEA01FEEA001FEA40071303A212601306EAF004EAC818EA87E0
10147F9312>I<1380EA0100A35A5A5A121EEAFFF8EA0E00A45AA65A1310A41320A2EA18
40EA0F800D1C7C9B12>I<381C0380EAFC1FEA3C07EA1C03A238380700A6EA700EA4131E
A25BEA305E381F9F8011147B9319>I<38FF83F8381E00E0001C13C01480121E380E0100
5B13025B12075BA25BEA039013A013E05B5B120190C7FC15147C9318>I<390FF83F8039
01E00E00EBC00C140813E000005B143014205C13705CA20171C7FC1339133A133E133C13
3813181310A25BA25BEA70C0EAF08000F1C8FC12E61278191D809318>121
D E /Fq 42 123 df<EC0FF0EC380CEC600EECC01E1301EC801C01031300A349C7FCA590
B512F090380E0070A215E0A25BA2EC01C0A31338EC0380A315889038700710A4EC032090
38E001C091C7FCA25BA21201EA718012F100F3C8FC1262123C1F2D82A21B>12
D<EAFFF0A213E00C037C8B11>45 D<127012F8A212F012E005057A840F>I<13011303A2
1306131E132EEA03CEEA001CA41338A41370A413E0A4EA01C0A4EA0380A41207EAFFFC10
217AA019>49 D<EB0FC0EB1060EB6038EB8018141CEA01003802201E13101204A3380820
3CA2EB40381478EB80F0380700E0380001C0EB030013061318132013C048C7FC12024813
10481330481320481360385F80C0EA63FF0040138038807F00131E17227CA019>I<EB0F
C0EB3070EBC0183801001C120248130CEB401CEA0820A3EB403813C038070070C71260EB
01C0EB070013FC1307EB0380A2EB01C0A31303126012F01480EAE00700801300130E5BEA
4038EA20F0EA1F8016227BA019>I<14181438A21470A314E0A314C01301148013031400
A21306A25BA25B1310EB3180EB61C0EB438013831201EA03033802070012041208EA3FC7
EA403E38800FF038000E00A25BA45BA31330152B7EA019>I<EB4004EB7038EBFFF014E0
EBBF80EB800048C7FCA41202A2133E13C338050180000613C01204000013E0A6387003C0
12F0A238E00780008013005B130EEA401C5BEA30E0EA0F8016227BA019>I<1207EA0F80
A21300120EC7FCAB127012F8A25A5A09157A940F>58 D<1403A25CA25CA25C142FA2EC4F
80A21487A2EB01071302A21304A21308131813101320A290387FFFC0EB40031380120113
001202A25AA2120C003CEB07E0B4EB3FFC1E237DA224>65 D<027F138090390380810090
380E00630138132749131F49130E485A485A48C7FC481404120E121E5A5D4891C7FCA35A
A55A1520A25DA26C5C12704AC7FC6C130200185B001C5B00061330380381C0D800FEC8FC
212479A223>67 D<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB7802
A21406140EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248485B15605D140138
0F0007B65A21227DA121>69 D<90B6FC90380F000F1503A2131EA21502A25BA214011500
EB7802A21406140EEBFFFCEBF00CA33801E008A391C7FC485AA4485AA4120FEAFFF82022
7DA120>I<EBFFFCEB0F8091C7FCA2131EA45BA45BA45BA4485AA21520A248481340A215
80A23807800115005C140F000F133EB512FE1B227DA11F>76 D<14FE903807838090380C
00E0013813704913385B4848131C485A48C7FC48141E121E121C123CA25AA348143CA315
78A25A15F0A2EC01E015C06C1303EC0780007014000078130E00385B6C5B6C13E0380703
80D801FCC7FC1F2479A225>79 D<90B512C090380F0070153C151C011E130EA2150FA249
131EA3153C4913381570EC01E0EC07809038FFFC00EBF00E80EC0380D801E013C0A43903
C00780A43907800F001501A2EC0702120F39FFF0038CC812F020237DA124>82
D<903801F02090380E0C4090381802C0EB3001136001E0138013C01201A200031400A291
C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB03FCEB007C143C80A30020131CA314180060
1338143000705B5C38C80180D8C607C7FCEA81FC1B247DA21B>I<3BFFE07FF00FF83B1F
000F8003C0001E913800018017001602A2001F5DA26C495BA2022F5BA291384F80200247
5B14875EEB010701030181C7FC130201041382A201081384158C011013881590132001A0
13A013C0D8078013C0A201005BA2000691C8FC140212042D2376A131>87
D<EBF8C0EA0185EA0705380E0380A2121C123C383807001278A3EAF00EA31410EB1C2012
70133C38305C40138C380F078014157B9419>97 D<EA03C0EA1F801203A3EA0700A4120E
A45A13F8EA1D0CEA1E0EEA3C06EA3807A2130F1270A4EAE01EA3133C1338A2EA607013E0
EA31C0EA1F0010237BA216>I<137EEA01C138030180EA0703EA0E07121C003CC7FC1238
1278A35AA45B12701302EA300CEA1830EA0FC011157B9416>I<143CEB03F8EB0038A314
70A414E0A4EB01C013F9EA0185EA0705380E0380A2121C123C383807001278A3EAF00EA3
1410EB1C201270133C38305C40138C380F078016237BA219>I<13F8EA0384EA0E02121C
123C1238EA7804EAF018EAFFE0EAF000A25AA41302A2EA6004EA7018EA3060EA0F800F15
7A9416>I<143E144714CFEB018F1486EB0380A3EB0700A5130EEBFFF0EB0E00A35BA55B
A55BA55BA45B1201A2EA718012F100F3C7FC1262123C182D82A20F>I<EB1F18EB30B813
E03801C070A2EA03801207EB00E05AA3381E01C0A4EB0380120E1307EA060BEB1700EA01
E7EA0007A2130EA3EA701CEAF0185BEA60E0EA3F80151F7E9416>I<13F0EA0FE01200A3
485AA4485AA448C7FC131FEB2180EBC0C0380F00E0A2120EA2381C01C0A438380380A3EB
070400701308130E1410130600E01320386003C016237DA219>I<13C0EA01E013C0A2C7
FCA8121E12231243A25AA3120EA25AA35AA21340EA7080A3EA71001232121C0B217BA00F
>I<14E01301A2EB00C01400A8131E1323EB43801383A2EA0103A238000700A4130EA45B
A45BA45BA3EA70E0EAF0C0EAF1800063C7FC123C132B82A00F>I<EA01E0EA0FC01201A3
EA0380A4EA0700A4120EA45AA45AA45AA3127112E2A4126412380B237CA20C>108
D<391C0F80F8392610C10C39476066063987807807A2EB0070A2000EEBE00EA44848485A
A3ED38202638038013401570168015303A7007003100D83003131E23157B9428>I<3838
0F80384C30C0384E4060388E8070EA8F00128EA24813E0A4383801C0A3EB038400701388
14081307EB031012E0386001E016157B941B>I<137EEA01C338038180380701C0120E00
1C13E0123C12381278A338F003C0A21480130700701300130E130CEA3018EA1870EA07C0
13157B9419>I<3801C1F0380262183804741C3808780CEB700EA2141EEA00E0A43801C0
3CA3147838038070A2EBC0E0EBC1C038072380EB1E0090C7FCA2120EA45AA3EAFFC0171F
7F9419>I<EA1C1F38262080384741C0EA87831303EB018090C7FC120EA45AA45AA45A12
3012157B9415>114 D<13FCEA018338020080EA0401EA0C03140090C7FC120F13F0EA07
FC6C7EEA003E130F7F1270EAF006A2EAE004EA4008EA2030EA1FC011157D9414>I<13C0
1201A4EA0380A4EA0700EAFFF8EA0700A2120EA45AA45AA31310EA7020A213401380EA31
00121E0D1F7C9E10>I<001E1360002313E0EA4380EB81C01283EA8701A238070380120E
A3381C0700A31408EB0E101218121CEB1E20EA0C263807C3C015157B941A>I<381C0180
382603C0EA47071303EA8701EA8E00A2000E13805AA338380100A31302A25B5B1218EA0C
30EA07C012157B9416>I<001EEB60E00023EBE0F0384380E1EB81C000831470D8870113
30A23907038020120EA3391C070040A31580A2EC0100130F380C0B02380613843803E0F8
1C157B9420>I<3803C1E0380462103808347038103CF0EA203814601400C65AA45BA314
203861C04012F1148038E2C100EA4462EA383C14157D9416>I<001E133000231370EA43
8014E01283EA8700A2380701C0120EA3381C0380A4EB0700A35BEA0C3EEA03CEEA000EA2
5B1260EAF0381330485AEA80C0EA4380003EC7FC141F7B9418>I<3801E0203803F06038
07F8C038041F80380801001302C65A5B5B5B5B5B48C7FC120248138038080100485AEA3F
06EA61FEEA40FCEA807013157D9414>I E /Fr 81 125 df<1460A214F0A2497E1478EB
027C143CEB043E141EEB081F8001107F140701207F140301407F140101807F140048C77E
15780002147C153C48143E151E48141F8148158015074815C01503007FB612E0A2B712F0
24237EA229>1 D<B612E038780007007C1300003C14607E001F14206C14306D13106C7E
12037F6C6C130012007F13787F133E131E131C13085B5B4913105BA248C7FC000214305A
4814605A15E0481307007FB5FCB6FC1C227DA123>6 D<90381FC1F090387037189038C0
3E3C3801807C000313783907003800A9B612C03907003800B2143C397FE1FFC01E2380A2
1C>11 D<EB1FC0EB7020EBC0103801803800031378EA0700143091C7FCA7B512F8380700
781438B2397FE1FF80192380A21B>I<EB1FD8EB7038EBC078EA0180120338070038A9B5
12F838070038B3397FF3FF80192380A21B>I<90380FC07F90397031C0809039E00B0040
2601801E13E00003EB3E013807003C91381C00C01600A7B712E03907001C011500B23A7F
F1FFCFFE272380A229>I<B5128011017D9C18>22 D<EA7038EAF87CEAFC7EA2EA743AEA
0402A4EA0804A2EA1008A2EA2010EA40200F0F7EA218>34 D<133C136213C2EA0181A212
03A41382A213841388EA01C813D09039E001FF809039C0007C006C6C1338000114300170
132000025CEA0478D808385BEA181C003049C7FC38700E02130F38F00704EB038814C890
3801F001EB00E000781370ECB802393C031C06390E0C070C3903F001F021257EA326>38
D<127012F812FCA212741204A41208A21210A212201240060F7CA20E>I<132013401380
EA01005A12061204120CA25AA25AA312701260A312E0AE1260A312701230A37EA27EA212
0412067E7EEA0080134013200B327CA413>I<7E12407E7E12187E12041206A27EA2EA01
80A313C01200A313E0AE13C0A312011380A3EA0300A21206A21204120C5A12105A5A5A0B
327DA413>I<497EB0B612FEA23900018000B01F227D9C26>43 D<127012F812FCA21274
1204A41208A21210A212201240060F7C840E>I<EAFFF8A20D02808B10>I<127012F8A312
7005057C840E>I<EA01F0EA071CEA0C06487E00381380A2387001C0A400F013E0AE0070
13C0A3EA780300381380A2381C0700EA0C06EA071CEA01F013227EA018>48
D<13801203120F12F31203B3A9EA07C0EAFFFE0F217CA018>I<EA03F0EA0C1CEA100700
201380384003C0A2008013E012F0EAF801A3EA2003120014C0A2EB07801400130E5B1318
5B5B5B485A90C7FC000213205A5A00181360481340383FFFC05AB5FC13217EA018>I<EA
03F8EA0C1EEA100F38200780004013C0127813031307123800001380A214005B130C1338
EA03F0EA001C130FEB0780A2EB03C0A214E01220127012F8A200F013C01240EB07801220
38100F00EA0C1CEA03F013227EA018>I<1303A25BA25B1317A213271367134713871201
13071202120612041208A212101220A2124012C0B512F838000700A7EB0F80EB7FF01521
7FA018>I<00101380381E0700EA1FFF5B13F8EA17E00010C7FCA6EA11F8EA120CEA1C07
381803801210380001C0A214E0A4127012F0A200E013C01280EA4003148038200700EA10
06EA0C1CEA03F013227EA018>I<137EEA01C138030080380601C0EA0C03121C38180180
0038C7FCA212781270A2EAF0F8EAF30CEAF4067F00F81380EB01C012F014E0A51270A300
3813C0A238180380001C1300EA0C06EA070CEA01F013227EA018>I<12401260387FFFE0
14C0A23840008038C0010012801302A2485A5BA25B5BA21360134013C0A21201A25B1203
A41207A76CC7FC13237DA118>I<EA01F8EA060EEA0803381001801220386000C0A31270
A238780180003E1300EA3F02EA1FC4EA0FF812036C7EEA067EEA083F38100F80383007C0
EA6003EB00E05A1460A40060134014C06C138038180300EA0E0EEA03F013227EA018>I<
EA01F0EA060C487EEA1807383803801270A238F001C0A314E0A5127013031238EA180512
0CEA0619EA03E1380001C0A3EB0380A21230387807001306EA700CEA20186C5AEA0FC013
227EA018>I<127012F8A312701200AB127012F8A3127005157C940E>I<127012F8A31270
1200AB127012F8A312781208A41210A312201240A2051F7C940E>I<B612FEA2C9FCA8B6
12FEA21F0C7D9126>61 D<497EA3497EA3EB05E0A2EB09F01308A2EB1078A3497EA3497E
A2EBC01F497EA248B51280EB0007A20002EB03C0A348EB01E0A348EB00F0121C003EEB01
F839FF800FFF20237EA225>65 D<B512F8380F800E0007EB0780EC03C015E0140115F0A5
15E01403EC07C0EC0F80EC3E00EBFFFE9038800780EC03C0EC01E015F0140015F8A6EC01
F0A2EC03E0EC07C0000FEB0F00B512FC1D227EA123>I<903807E0109038381830EBE006
3901C0017039038000F048C7FC000E1470121E001C1430123CA2007C14101278A200F814
00A812781510127C123CA2001C1420121E000E14407E6C6C13803901C001003800E002EB
381CEB07E01C247DA223>I<B512F0380F801E00071307EC0380EC01C0EC00E015F01578
A2157C153CA3153EA9153CA2157C1578A215F015E01401EC03C0EC0700000F131EB512F0
1F227EA125>I<B612C0380F80070007130114001540A215601520A314201500A3146014
E013FF138014601420A315081400A21510A31530A2157015E0000F1303B6FC1D227EA121
>I<B612C0380F80070007130114001540A215601520A314201500A3146014E013FF1380
14601420A491C7FCA9487EEAFFFE1B227EA120>I<903807F00890383C0C18EBE0023901
C001B839038000F848C71278481438121E15185AA2007C14081278A200F81400A7EC1FFF
0078EB00F81578127C123CA27EA27E7E6C6C13B86C7E3900E0031890383C0C08903807F0
0020247DA226>I<39FFFC3FFF390FC003F039078001E0AE90B5FCEB8001AF390FC003F0
39FFFC3FFF20227EA125>I<EAFFFCEA0FC0EA0780B3ACEA0FC0EAFFFC0E227EA112>I<38
03FFE038001F007FB3A6127012F8A2130EEAF01EEA401C6C5AEA1870EA07C013237EA119
>I<D8FFFCEBFF80D80FC0EB7C006C48133015205D5D4AC7FC14025C5C5C5C5C5CEB81C0
EB83E01385EB88F01390EBA078EBC03C13808080A26E7E8114036E7EA26E7E81486C7F3A
FFFC07FF8021227EA126>I<EAFFFCEA1F806CC7FCB3A21401A41403A214021406A2141E
48137EB512FE18227DA11E>I<D8FFC0EB03FF000F15F0000715E0D805E01305A2D804F0
1309A301781311A36D1321A36D1341A26D1381A39038078101A3EB03C2A2EB01E4A3EB00
F8A31470120E001FEC03F03AFFE0203FFF28227EA12D>I<39FF8007FF3907C000F81570
D805E01320EA04F0A21378137C133C7F131F7FEB0780A2EB03C0EB01E0A2EB00F014F814
78143C143E141E140FA2EC07A0EC03E0A21401A21400000E1460121FD8FFE0132020227E
A125>I<EB0FE0EB783CEBE00E3903C0078039078003C0390F0001E0000E1300001E14F0
481478A2007C147CA20078143CA200F8143EA90078143C007C147CA2003C1478003E14F8
001E14F06CEB01E0A239078003C03903C007803900E00E00EB783CEB0FE01F247DA226>
I<B512F0380F803C0007130FEC078015C0140315E0A615C014071580EC0F00143CEBFFF0
0180C7FCAE487EEAFFFC1B227EA121>I<B512E0380F803C0007130E6E7E81140381A55D
14075D020EC7FC143CEBFFE0EB80708080141E140E140FA481A3168015C014073A0FC003
C10039FFFC01E2C8127C21237EA124>82 D<3803F020380C0C60EA1802383001E0EA7000
0060136012E0A21420A36C1300A21278127FEA3FF0EA1FFE6C7E0003138038003FC0EB07
E01301EB00F0A214707EA46C1360A26C13C07E38C8018038C60700EA81FC14247DA21B>
I<007FB512F839780780780060141800401408A300C0140C00801404A400001400B3A349
7E3801FFFE1E227EA123>I<39FFFC07FF390FC000F86C4813701520B3A5000314407FA2
000114806C7E9038600100EB3006EB1C08EB03F020237EA125>I<3BFFF03FFC03FE3B1F
8007E000F86C486C48137017206E7ED807801540A24A7E2603C0021480A39039E0047801
00011600A2EC083CD800F01402A2EC101E01785CA2EC200F013C5CA20260138890391E40
0790A216D090391F8003F0010F5CA2EC00016D5CA20106130001025C2F237FA132>87
D<12FEA212C0B3B3A912FEA207317BA40E>91 D<EA0804EA1008EA2010A2EA4020A2EA80
40A4EAB85CEAFC7EA2EA7C3EEA381C0F0F7AA218>I<12FEA21206B3B3A912FEA207317F
A40E>I<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7EA1E07123C1278127000
F01308A3130FEA7817383C2390380FC1E015157E9418>97 D<120E12FE121E120EAB131F
EB61C0EB8060380F0030000E1338143C141C141EA7141C143C1438000F1370380C8060EB
41C038083F0017237FA21B>I<EA01FEEA0703380C0780121C383803000078C7FC127012
F0A712700078134012386C1380380C0100EA0706EA01F812157E9416>I<14E0130F1301
1300ABEA01F8EA0704EA0C02EA1C01EA38001278127012F0A7127012781238EA1801EA0C
0238070CF03801F0FE17237EA21B>I<EA01FCEA0707380C0380381C01C01238007813E0
EA700012F0B5FC00F0C7FCA512700078132012386C13406C138038070300EA00FC13157F
9416>I<133E13E33801C780EA0387130748C7FCA9EAFFF80007C7FCB27FEA7FF0112380
A20F>I<14703803F198380E1E18EA1C0E38380700A200781380A400381300A2EA1C0EEA
1E1CEA33F00020C7FCA212301238EA3FFE381FFFC06C13E0383000F0481330481318A400
601330A2003813E0380E03803803FE0015217F9518>I<120E12FE121E120EABEB1F80EB
60C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B>I<121C123EA3121CC7FCA8120E
127E121E120EB1EAFFC00A227FA10E>I<13E0EA01F0A3EA00E01300A81370EA07F01200
1370B3A51260EAF0E013C0EA6180EA3F000C2C83A10F>I<120E12FE121E120EABEB03FC
EB01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E130E7F1480EB03C0130114E0EB
00F014F838FFE3FE17237FA21A>I<120E12FE121E120EB3ADEAFFE00B237FA20E>I<390E
1FC07F3AFE60E183803A1E807201C03A0F003C00E0A2000E1338AF3AFFE3FF8FFE27157F
942A>I<380E1F8038FE60C0381E80E0380F0070A2120EAF38FFE7FF18157F941B>I<EA01
FCEA0707380C0180381800C0003813E0481370A200F01378A700701370007813F0003813
E0381C01C0380E038038070700EA01FC15157F9418>I<EA0E1F38FE61C0380E8060380F
0070000E1338143CA2141EA7143CA21438000F1370380E80E0EB41C0EB3F0090C7FCA9EA
FFE0171F7F941B>I<3801F82038070460EA0E02EA1C01003813E0EA7800A25AA71278A2
EA3801121CEA0C02EA070CEA01F0C7FCA9EB0FFE171F7E941A>I<EA0E3CEAFE46EA1E8F
EA0F0F13061300120EAD120FEAFFF010157F9413>I<EA0F88EA3078EA601812C01308A2
12E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA801C130CA212C01308EAE018EAD030EA
8FC00E157E9413>I<1202A41206A3120E121E123EEAFFFCEA0E00AB1304A6EA07081203
EA01F00E1F7F9E13>I<000E137038FE07F0EA1E00000E1370AD14F0A238060170380382
783800FC7F18157F941B>I<38FF80FE381E00781430000E1320A26C1340A2EB80C00003
1380A23801C100A2EA00E2A31374A21338A3131017157F941A>I<39FF8FF87F393E01E0
3C001CEBC01814E0000E1410EB0260147000071420EB04301438D803841340EB8818141C
D801C81380EBD00C140E3900F00F00497EA2EB6006EB400220157F9423>I<38FF83FE38
1F00F0000E13C06C1380EB8100EA0383EA01C2EA00E41378A21338133C134E138FEA0187
EB0380380201C0000413E0EA0C00383E01F038FF03FE17157F941A>I<38FF80FE381E00
781430000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A313
10A25BA35B12F05B12F10043C7FC123C171F7F941A>I<383FFFC038380380EA30070020
1300EA600EEA401C133C1338C65A5B12015B38038040EA07005A000E13C04813805AEA78
01EA7007B5FC12157F9416>I<B512FE1701808C18>I<B9FC3001808C31>I
E /Fs 38 120 df<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>49
D<EA03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0
A2EB07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFF
F05A5A5AB5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F
0314F0120014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE12
7EB4FCA314FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E01301
1303A21307130F131FA21337137713E7EA01C71387EA03071207120E120C121812381270
12E0B6FCA2380007E0A790B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014
005B13F8EA33C00030C7FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8
A21238127C12FEA200FC13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F
1C>I<EB1F80EBFFE03803E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EA
FC08EB7FC0EBFFE038FD80F038FF00F848137CA248137EA4127CA3003C137C123E001E13
F86C13F0380783E03803FFC0C6130017207E9F1C>I<1238127C12FEA3127C12381200A8
1238127C12FEA3127C123807167C9510>58 D<1470A214F8A3497EA2497EA3EB067FA201
0C7F143FA2496C7EA201307F140F01707FEB6007A201C07F90B5FC4880EB8001A2D80300
7F14004880000680A23AFFE007FFF8A225227EA12A>65 D<D903FE138090381FFF819038
FF01E33901F8003FD803E0131F4848130F48481307121F48C71203A2481401127EA200FE
91C7FCA8127EED0180127F7E15036C6C1400120F6C6C1306D803F05B6C6C13386CB413F0
90381FFFC0D903FEC7FC21227DA128>67 D<B67E15F03907F003FCEC007E81ED1F80ED0F
C0ED07E0A216F01503A316F8A916F0A3ED07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612
F0158025227EA12B>I<B612FCA23807F000153C151C150C150EA21506140CA31500141C
143CEBFFFCA2EBF03C141C140CA21503A214001506A3150EA2151E153EEC01FCB6FCA220
227EA125>I<B612F8A23807F001EC007815381518151CA2150CA21418A21500A2143814
78EBFFF8A2EBF07814381418A491C7FCA8B512C0A21E227EA123>I<B51280A23807F000
B3ACB51280A211227EA115>73 D<B512C0A2D807F0C7FCB31518A41538A21570A215F014
011407B6FCA21D227EA122>76 D<D8FFF0EC0FFF6D5C000716E0D806FC1437A3017E1467
A26D14C7A290391F800187A290390FC00307A3903807E006A2903803F00CA2903801F818
A3903800FC30A2EC7E60A2EC3FC0A2EC1F80A3EC0F00D8FFF091B5FC140630227EA135>
I<B512FEECFFC03907F007F0EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C05D90
38F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82
D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F81306A27E1400B4FC
13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F143FA200C0131FA3
6C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<EA0FFC383FFF80387E
07C0EB03E0130114F0123C1200A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8
381FF87F3807E03F18167E951B>97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497E
EC0F80A215C0A81580141F01801300EBC03E381EE07C381C3FF838180FC01A237EA21F>
I<EBFF80000713E0380F83F0EA1F03123E127E387C01E090C7FC12FCA6127C127EA2003E
13186C1330380FC0603807FFC0C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807
FFBE380F81FE381F007E003E133E127E127C12FCA8127CA26C137E6C13FE380F83BE3907
FF3FC0EA01FC1A237EA21F>I<13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F8
12FCA2B5FCA200FCC7FCA3127CA2127E003E13186C1330380FC0703803FFC0C613001516
7E951A>I<EB1FC0EB7FE0EBF1F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0
B2EA3FFCA2142380A211>I<3801FE0F3907FFBF80380F87C7381F03E7391E01E000003E
7FA5001E5BEA1F03380F87C0EBFF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13
FE001F7F383C003F48EB0F80481307A40078EB0F006C131E001F137C6CB45A000113C019
217F951C>I<B4FCA2121FABEB07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0
A21A237EA21F>I<121C123E127FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA3
10>I<B4FCA2121FB3ADEAFFE0A20B237EA210>108 D<3AFF07F007F090391FFC1FFC3A1F
303E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0A22B167E9530>I<38FF07
E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A167E951F>I<13FE3807FF
C0380F83E0381E00F0003E13F848137CA300FC137EA7007C137CA26C13F8381F01F0380F
83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF8381FE07CEB803E497E1580A2
EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E
951F>I<EBFE033807FF87380FC1C7381F006F48133F127E80127C12FCA7127EA2003E5B
6C5B380FC1DF3807FF9F3801FC1FC7FCA8ECFFE0A21B207E951E>I<EAFE1FEB3FC0381E
67E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>I<EA0FF3EA3FFFEA781FEA
6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0
A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487EA41203A21207A2120F123FB5FC
A2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F00
3EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2391F800700
000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7
FCA2130EA21B167F951E>I<3AFFE3FF07F8A23A1F007800C09038807C01000F1580A23A
07C07E030014DE5D3903E1DF06148FD801F1138CEBF307A2D800FF13D8EBFE0315F89038
7C01F0A2013C5BEB3800A225167F9528>I E /Ft 12 59 df<120112021204120C1218A2
1230A212701260A312E0AA1260A312701230A21218A2120C12041202120108227D980E>
40 D<12801240122012301218A2120CA2120E1206A31207AA1206A3120E120CA21218A2
123012201240128008227E980E>I<1330ABB512FCA238003000AB16187E931B>43
D<EA07C0EA1830EA3018EA701CEA600CA2EAE00EA9EA600CA2EA701CEA3018EA1C70EA07
C00F157F9412>48 D<1206120E12FE120EB1EAFFE00B157D9412>I<EA0F80EA30E0EA40
70EA8030EAC03812E0124012001370A2136013C0EA0180EA03001206EA0C081208EA1018
EA3FF0127F12FF0D157E9412>I<EA0FE0EA3030EA6018EA701CA21200131813381360EA
07E0EA00301318130C130EA212E0A2EAC00CEA4018EA3030EA0FE00F157F9412>I<1330
A2137013F012011370120212041208121812101220124012C0EAFFFEEA0070A5EA03FE0F
157F9412>I<EA6030EA7FE013C0EA44001240A4EA4F80EA70E0EA4070EA00301338A212
4012E0A2EA8030EA4060EA20C0EA1F000D157E9412>I<EA01F0EA0608EA080CEA181C12
30EA7000126012E0EAE3E0EAEC30EAF018130CEAE00EA31260A2EA300C1318EA1830EA07
C00F157F9412>I<1240EA7FFE13FC13F8EAC008EA80101320EA00401380A2EA01005AA2
12021206A2120EA512040F167E9512>I<126012F0A212601200A6126012F0A21260040E
7D8D0A>58 D E /Fu 80 128 df<80497EA2497EA2EB05F01304497E1478EB107C143CEB
203E141EEB401F8001807F1407D801007F14030002801401488014004880157848147C15
3C48143E151E007FB6FCA2B7128021207E9F26>1 D<90381F83E09038F06E303901C078
78380380F8903800F03048EB7000A7B612803907007000B2383FE3FF1D20809F1B>11
D<133FEBE0C0EA01C0380381E0EA0701A290C7FCA6B512E0EA0700B2383FC3FC1620809F
19>I<90381F81F89038F04F043901C07C06390380F80FEB00F05A0270C7FCA6B7FC3907
007007B23A3FE3FE3FE02320809F26>14 D<1207A2120F121C12381230126012C0080877
9F17>19 D<B5FC10017D9A17>22 D<137813841201EA03021207A45BA25BA2EA03909038
A00FFC9038C001E0EC00C000011480EC0100EA02E000041302EA08703818780438303808
EA703CEB1C10EAF00EEB0F20EB07C09038038004387001C0397802E0083938047018391C
183C303907E00FC01E227EA023>38 D<13401380EA01005A12061204120C5AA212381230
A212701260A412E0AC1260A412701230A212381218A27E120412067E7EEA008013400A2E
7BA112>40 D<7E12407E12307E1208120C7EA212077EA213801201A413C0AC1380A41203
1300A25A1206A25A120812185A12205A5A0A2E7EA112>I<1303AFB612FCA2D80003C7FC
AF1E207E9A23>43 D<127012F012F8A212781208A31210A31220A21240050E7C840D>I<
EAFFF0A20C02808A0F>I<127012F8A3127005057C840D>I<EA03F0EA0E1C487EEA1806EA
380738700380A400F013C0AD00701380A3EA780700381300EA1806EA1C0E6C5AEA03F012
1F7E9D17>48 D<13801203120F12F31203B3A6EA07C0EAFFFE0F1E7C9D17>I<EA03F0EA
0C1CEA100E487E00401380128000F013C0EAF803A3EA200712001480A2EB0F00130E5B5B
5B13605B485A48C7FC000613405A5A00101380EA3FFF5AB5FC121E7E9D17>I<EA03F0EA
0C1CEA100EEA200F007813801307A2EA380F12001400A2131E131C1370EA07F0EA003C13
0E130FEB0780A214C0122012F8A300F013801240EB0F00EA200EEA183CEA07F0121F7E9D
17>I<1306A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220A212
4012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B5B13E00010C7FCA6
EA11F0EA161CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB0700EA
20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C0712183838
030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A21480
1238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<1240387FFFE014C0A23840008038
800100A21302485AA25B5BA25BA21360A213E05B1201A41203A76C5A131F7E9D17>I<EA
03F0EA0C0CEA1006EA3003382001801260A3127038780300123EEA3F06EA1FC8EA0FF0EA
03F8487EEA0C7EEA103F38300F80EA6007EB01C012C01300A31480EA600100201300EA10
02EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E487E13071270EB038012F0A214C0
A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07001230EA7806130EEA700CEA20
18EA1070EA0FC0121F7E9D17>I<127012F8A312701200AA127012F8A3127005147C930D>
I<127012F8A312701200AA127012F012F8A212781208A31210A31220A21240051D7C930D
>I<EB1FE0EB6018380180063802000148EB008048144039100F80203920386010EB7010
3940E00808EBC0071241D8818013041283A61281EA41C012409038E00F08382070179038
38631039100F81E06CC8FC7E6C141C6C6C13F03900600F8090381FF8001E207E9F23>64
D<5B497EA3497EA3EB09E0A3EB10F0A3EB2078A3497EA2EBC03EEB801EA248B5FCEB000F
A20002EB0780A348EB03C0A2120C001E14E039FF801FFE1F207F9F22>I<B512E0380F00
78141EA2801580A515005C141E147CEBFFF0EB007C141FEC0F80EC07C0140315E0A515C0
14071580EC0F00143EB512F01B1F7E9E20>I<90380FE0109038381C309038E002703803
C00139078000F048C71270121E15305A1510127C127800F81400A91278007C1410123CA2
6C1420A27E6C6C13406C6C13803900E00300EB380CEB0FF01C217E9F21>I<B512F83807
801EEC0780EC03C0EC01E0EC00F015701578A2153CA3153EA8153CA2157C1578A215F0EC
01E0EC03C0EC0780EC1E00B512F81F1F7F9E23>I<B61280380F000F14031401140015C0
1540A314401500A214C0130113FF130113001440A3EC0020A31540A315C01401EC038014
0FB6FC1B1F7E9E1F>I<B61280380780071401A2140015C01540A4EC2000A3146014E013
FF138014601420A391C7FCA87FEAFFFE1A1F7F9E1E>I<90380FE0109038381C309038E0
02703803C00139078000F048C71270121E15305A1510127C127800F81400A7EC3FFEEC01
F000781300127C123CA27EA27E6C7E3903C001703900E002309038380C1090380FF0001F
217E9F24>I<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F7E9E22>I<EA
FFF0EA0F00B3ABEAFFF00C1F7E9E10>I<3807FFC038003E00131EB3A3122012F8A3EAF0
1CEA403CEA6038EA1070EA0FC012207F9E17>I<39FFF007FC390F0003E0EC0180150014
025C5C5C5C5C5C49C7FC5B497E130FEB13C0EB21E01341EB80F0EB0078A28080A280EC07
80A2EC03C015E015F039FFF01FFE1F1F7E9E23>I<EAFFF8EA0F8090C7FCB21402A41406
1404A2140C141C147CB512FC171F7E9E1C>I<B46CEB07FE000715C0A2D805C0130BA2D8
04E01313A301701323A26D1343A36D1383A290380E0103A3EB0702A3EB0384A2EB01C8A3
EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>I<B4EB0FF8390F8003E0EC0080EA0BC0
EA09E0A2EA08F01378A27F7FA27FEB0780A2EB03C0EB01E0A2EB00F01478A2143C141EA2
140F1407A214031401123E38FF80001D1F7E9E22>I<EB1FE0EB70383801C00E48487E39
070003804814C0001EEB01E048EB00F0A2007C14F8A20078147800F8147CA90078147800
7C14F8A2003C14F0003E1301001E14E06CEB03C06C148039038007003801E01E38007038
EB1FE01E217E9F23>I<B512E0380F007C141E80EC0780A215C0A41580A2EC0F00141E14
7CEBFFE090C8FCAEEAFFF01A1F7E9E1F>I<B57E380F00F0143C8080A21580A41500A214
1E5C14F0EBFF80EB01C0EB0070A280143CA3143EA31504143F141FEC0F0839FFF00788C7
EA01F01E207E9E21>82 D<3803F040380C0CC0EA1803EA3001EA6000A212E01440A36C13
007E127CEA7F80EA3FF86CB4FC00071380C613C0EB1FE013031301EB00F014707EA46C13
6014E06C13C038F8018038C60300EA81FC14217E9F19>I<007FB512E038780F010060EB
006000401420A200C0143000801410A400001400B3497E3803FFFC1C1F7E9E21>I<39FF
F00FF8390F0003E0EC0080B3A46CEB01001380120314026C6C5A6C6C5AEB3830EB0FC01D
207E9E22>I<39FFF003FE391F8000F86CC7126015206C6C1340A36C6C1380A2EBE00100
011400A23800F002A213F8EB7804A26D5AA36D5AA2131F6D5AA2EB07C0A36D5AA36DC7FC
1F207F9E22>I<3BFFF07FF81FF03B1F000FC007C06C903907800180170015C001805C00
071502EC09E013C000035DEC19F01410D801E05CA2EC2078D800F05CA2EC403C01785CA2
EC801E017C1460013C144090383D000F133F6D5CA2011E1307010E91C7FCA2010C7F0104
13022C207F9E2F>I<39FFF001FF391F800078000F146012076D1340000314807F3901F0
01001200EBF802EB7C06EB3C04EB3E08131EEB1F10EB0FB0EB07A014E06D5AACEB3FFC20
1F7F9E22>89 D<387FFFFE387E003C127800701378006013F814F0384001E0130314C0EB
07801200EB0F00131EA25B137C13785B1201EBE002EA03C0A2EA0780000F13061300001E
1304003E130C123C48133C14FCB5FC171F7E9E1C>I<12FFA212C0B3B3A512FFA2082D7C
A10D>I<12FFA21203B3B3A512FFA2082D80A10D>93 D<EA1FE0EA3030EA7818131CEA30
0E1200A313FEEA078EEA1E0E1238127800F01310A3131E127838386720380F83C014147E
9317>97 D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A21478A61470
14F014E0001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA0706EA1C0F12
3813060078C7FC127012F0A61270127800381380A2381C0100EA0706EA01F811147F9314
>I<EB01C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A61270A21238
EA1803120CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA21270EB038012
F0A2B5FC00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314>I<137CEA
01C6EA030F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<14E03803E330
EA0E3CEA1C1C38380E00EA780FA5EA380E6C5AEA1E38EA33E00020C7FCA21230A2EA3FFE
381FFF8014C0383001E038600070481330A4006013606C13C0381C03803803FC00141F7F
9417>I<121C12FC121CAA137C1386EA1D03001E1380A2121CAE38FF8FF014207E9F19>I<
1238127CA31238C7FCA6121C12FC121CB1EAFF80091F7F9E0C>I<13E0EA01F0A3EA00E0
1300A61370EA07F012001370B3A31260EAF06013C0EA6180EA3F000C28829E0E>I<121C
12FC121CAAEB1FE0EB0780EB060013045B5B5B136013E0EA1DF0EA1E70EA1C38133C131C
7F130F7F148014C038FF9FF014207E9F18>I<121C12FC121CB3ABEAFF8009207F9F0C>I<
391C3E03E039FCC30C30391D039038391E01E01CA2001C13C0AE3AFF8FF8FF8021147E93
26>I<EA1C7CEAFC86EA1D03001E1380A2121CAE38FF8FF014147E9319>I<EA01F8EA070E
381C0380383801C0A2387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E
00EA01F814147F9317>I<EA1C7CEAFD87381E018014C0381C00E014F014701478A61470
14F014E0381E01C0EB0380381D8700EA1C7C90C7FCA8B47E151D7E9319>I<3801F04038
070CC0EA0E02EA1C03EA38011278127012F0A6127012781238EA1C03EA0C05EA0709EA01
F1EA0001A8EB0FF8151D7F9318>I<EA1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E14
7E9312>I<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA
800E130612C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2120EA2123E
EAFFF8EA0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE
1307120CEA061B3803E3F014147E9319>I<38FF83F8383E00E0001C13C06C1380A33807
0100A21383EA0382A2EA01C4A213E4EA00E8A21370A3132015147F9318>I<39FF9FE1FC
393C078070391C030060EC8020000E1440A214C0D80704138014E0A239038861001471A2
3801D032143A143E3800E01CA2EB6018EB40081E147F9321>I<38FF87F8381E03C0380E
0180EB0300EA0702EA0384EA01C813D8EA00F01370137813F8139CEA010E1202EA060738
040380000C13C0003C13E038FE07FC16147F9318>I<38FF83F8383E00E0001C13C06C13
80A338070100A21383EA0382A2EA01C4A213E4EA00E8A21370A31320A25BA3EAF080A200
F1C7FC1262123C151D7F9318>I<EA7FFFEA700E1260EA401C133813781370EA00E01201
13C0EA038012071301120E121EEA1C03EA3802EA7006130EEAFFFE10147F9314>I<B512
FC1601808C17>I<EA7038EAF87CA3EA70380E057C9E17>127 D E
/Fv 7 117 df<14E0A2497EA3497EA2EB06FCA2EB0EFEEB0C7EA2497EA201307F141F01
707FEB600FA2496C7E90B5FC4880EB8003000380EB0001A200066D7EA2000E803AFFE00F
FFE0A2231F7E9E28>65 D<EA07FC381FFF80383F07C0EB03E0EB01F0A2120C1200133FEA
07FDEA1F81EA3E01127C12F8A3EAFC02EA7E0C383FF87E380FE03E17147F9319>97
D<B4FCA2121FAAEB1FC0EB7FF0EBE0F8EB807CEB007E143EA2143FA6143EA2147C138038
1EC1F8381C7FE038181F8018207E9F1D>I<EA01FE3807FF80381F0FC0123EA2127CEB03
0000FCC7FCA6127C127E003E1360003F13C0EA1F813807FF00EA01FC13147E9317>I<EA
FE3EEB7F80381ECFC0138FA2121FEB030090C7FCABEAFFF0A212147E9316>114
D<EA0FE6EA3FFEEA701EEA600EEAE006A2EAF800EAFFC0EA7FF8EA3FFCEA1FFE1203EA00
1FEAC007A212E0EAF006EAF81EEAFFFCEAC7F010147E9315>I<1203A45AA25AA2123FEA
FFFCA2EA1F00AA1306A5EA0F8CEA07F8EA03F00F1D7F9C14>I E
/Fw 70 125 df<EC3FE0ECE010903801803801031378A290380700301500A3130EA390B5
12E0EB0E0090381C01C0A4EC03801338A3EC0700A2137801701310EC0E20A313609038E0
0640EC038091C7FC5BA21201EA3180127948C8FC1262123C1D29829F1A>12
D<12C012E0A212701230121812081204A20609739F17>18 D<EA0180EA03C0EA0780EA0F
00121C5A12605A5A0A09719F17>I<12035A1380EA01C0EA00E0A2EA01C0EA0780EAFE00
0B097C7F15>24 D<130F903830800C903860401E9038C0203C0001141C903880E004D803
811308EB03C0390701801090C7122015400006EB018090387802403807C40C9038041020
00061320000FEB4010EA1D08383CF0583838007C0078137814301400481420A21540A200
701480EC01006C5B00181304000E1318380780E0C6B4C7FC1F227BA023>38
D<121C123E127EA2123A12021204A21208A21210122012401280070E769F0E>I<130113
021304130813101320136013C0EA0180A2EA03005A1206120E120C121C12181238A21230
1270A21260A212E0A25AAD12401260A212207EA27E102E79A113>I<13107F7F13061302
1303A37F1480A71303A31400A35BA21306A2130E130CA2131C1318133813301370136013
E05B485A90C7FC5A12065A5A5A5A1280112E80A113>I<121C123CA41204A21208A21210
1220A212401280060E7D840E>44 D<EA7FF0EAFFE0127F0C037D8A10>I<127012F8A212
F012E005057B840E>I<154015C0EC0180A2EC0300A21406A25C5CA25CA25C5CA2495AA2
49C7FCA213065BA25BA25BA25B5BA2485AA248C8FCA212065AA25AA25AA25A5AA25A1A2D
7FA117>I<EB0F80EB30E0EBE070EA01C0380380301438EA0700481378A2120E121E1470
4813F0A4387801E0A314C0EA700312F01480130714001270130E5BEA30386C5AEA0FC015
1F7C9D17>I<1302A21306130E133C13DCEA031C12001338A41370A413E0A4EA01C0A4EA
0380A41207EAFFF80F1E7B9D17>I<131FEB61C0EB80E0EA010000021370134012041320
380840F0A3EB80E0EA0901000613C038000380EB0700130C5B13605B0003C7FC12044813
405A1480EA2001EA7E033847FF00EA41FEEA80FC1378141F7C9D17>I<EB1F80EB60E0EB
80703801003000021338EA0440A21320EB407013C038038060C712E0EB01C0EB030013FE
131C130613071480A312301278A238F00F001280EA401E131C5BEA30E0EA0F80151F7C9D
17>I<146014E0A3EB01C0A3EB0380A214005BA21306130E130C5BA25BA213635B1387EA
01071203EA060E12041208EA3F8EEA607C38801FC038001C00A25BA45BA2136013277E9D
17>I<EB07C0EB18201330EBE0E0EA01C11381380380C048C7FC5A120E121E1378EA1D84
EA3E061307123C007C13801278A338700F00A212F0130E131EEA701C1260EA7038EA3070
EA10C0EA0F80131F7B9D17>54 D<3804E010EA0BF0000F1320001F1340381E19C038380E
80EA3001386003001240EA8006EA000E130C131C131813385BA213F05B1201A2485AA348
5AA3120F90C7FCA21206141F799D17>I<EB0F80EB30C0EB4060EB80301201EA0300A348
1360EB8040EBC0C03803E180EBF600EA01FC1200487EEA033F38041F80EA180FEA100312
30EA6001A338C00300A2EA60061304EA2018EA1830EA0FC0141F7C9D17>I<131FEB7180
EBC0C0EA0180000313E0EA07005A1301121EA314C0EA1C03A31307EB0F80120CEA063738
03C700EA000F130EA25B1260EAF0385BEAE060EA80C0EA4380003EC7FC131F7B9D17>I<
1207120F121FA2120E1200AA127012F8A212F012E008147B930E>I<14021406A2140E14
1EA2143F142F144F14CF148FEB010FA21302A213041308A20110138014071320EB3FFFEB
40071380A2EA0100A2120212061204001E14C039FF807FF81D207E9F22>65
D<48B512C039001E00F015781538153C5BA4491378A215F0EC01E09038F007809038FFFE
009038F00F80EC03C03801E00115E0A3EA03C0A315C038078003EC0780EC0F00141E380F
007CB512E01E1F7D9E20>I<ECFE02903807818690381C004C49133C136049131C000114
18485A48C7FC5A001E1410A2481400A25AA45AA415801270A2EC01007E140200185B6C13
186C1320380381C0D800FEC7FC1F217A9F21>I<90B5128090381E00E015701538151C5B
150EA35BA449131EA44848133CA3157848481370A215E0EC01C0380780031580EC0E005C
380F0070B512C01F1F7D9E22>I<48B512FE39001E001C150C1504A25BA4903878040815
00A2140C495AEBFFF8EBF018A23801E010A3EC001048481320A21540A248481380140115
001407380F001FB512FE1F1F7D9E1F>I<48B512FC39001E003815181508A25BA4491310
EC0800A3495A1430EBFFF0EBF0303801E020A44848C7FCA4485AA4120FEAFFF81E1F7D9E
1E>I<ECFC04903807030C90381C00980130137813E04848133848481330A248C7FC120E
001E1420A2481400A25AA45AECFFF0EC0780A2EC0F001270A3141E7E0018133E001C132E
6C13CC38038304D800FCC7FC1E217A9F23>I<9039FFF1FFE090391F003E00011E133CA3
495BA4495BA449485A90B5FCEBF001A24848485AA44848485AA4484848C7FCA4000F5B39
FFF1FFE0231F7D9E22>I<3801FFF038001F00131EA35BA45BA45BA4485AA4485AA4485A
A4120FEAFFF0141F7D9E12>I<90380FFF809038007C001478A35CA4495AA4495AA4495A
A449C7FCA212301278EAF81EA2485AEA8038EA40706C5AEA1F8019207D9E18>I<9039FF
F01FE090391F000F80011EEB0E0015085D495B5D4AC7FC1402495A5C5C1430EBF0F0EBF1
F8EBF27813F448487E13F013E080EA03C0A280A2EA07806E7EA3000F8039FFF03FF8231F
7D9E23>I<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C00100A25C14
0238078006A25C141C380F0078B512F8191F7D9E1D>I<D801FEEC7FC0D8001EECFC005E
0117EB0178A20127EB02F01504A215080147EB09E015111521A20187495AEB83801583A2
3A01038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C1380001C14
3E3AFF8103FFC02A1F7D9E29>I<01FFEB3FE0011FEB0F001504EB1780A201275BEB23C0
A3903841E010A214F0134001805B1478A348486C5AA3141E00025CA2140FA24891C7FC80
A2120C001C1302EAFF80231F7D9E22>I<EB01FCEB070790381C01C090383000E001E013
6048481370485A0007143890C7FC120E121E121C123CA2481478A44814F0A215E0140115
C0140300701480EC070000785B0038131E5C6C13706C5B38078380D801FCC7FC1D217A9F
23>I<48B5128039001E00E015701538153C5BA4491378A215F015E09038F003C0EC0F00
EBFFFC01F0C7FC485AA4485AA4485AA4120FEAFFF01E1F7D9E1F>I<90B5FC90381E03C0
EC00E0157015785BA44913F0A2EC01E015C09038F00700141EEBFFF0EBF01C48487E140F
8015803903C00F00A43807801E1508A21510000F130ED8FFF01320C7EA03C01D207D9E21
>82 D<903807E04090381C18C09038300580EB600313C000011301018013001203A391C7
FC7FA213F86CB47E14E06C6C7E131FEB01F8EB0078A21438A21220A21430006013701460
14E000705B38E80380D8C606C7FCEA81F81A217D9F1A>I<000FB512FC391E03C0380018
1418001014081220EB078012601240A239800F001000001400A3131EA45BA45BA45BA412
01387FFF801E1F799E21>I<393FFC0FF83907C003C09038800100A3380F0002A4001E5B
A4485BA4485BA4485BA35CA200705B49C7FCEA3002EA3804EA0C18EA07E01D20779E22>
I<3BFFE1FFC07F803B1F003E001C00001E013C13181610143E021E5B121F6C013E5BA202
5E5B149E4BC7FC9038011E02A201025BA201045BA201085BA201105B13205D01405BA2D9
801FC8FC80EB000E7E0006130CA2000413082920779E2D>87 D<9039FFF07FE090391F80
1F0090380F000C6E5A010713105D6E5A01035B02C1C7FC14E2EB01E614EC14F86D5AA280
A2EB017CEB023C1306EB043EEB081E1310EB201F497E1380D801007F4813071206001F49
7E39FFC03FF8231F7E9E22>I<EBF180380389C038070780EA0E03121C123C3838070012
78A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070013147C9317>97
D<EA0780123FEA0700A4120EA45AA213F0EA1D0CEA3A0E123CEA380FA21270A4EAE01EA3
131C133C1338EA607013E0EA31C0EA1F0010207B9F15>I<137EEA01C138030080EA0E07
121E001C1300EA3C0248C7FCA35AA5EA70011302EA3004EA1838EA07C011147C9315>I<
1478EB03F8EB0070A414E0A4EB01C0A213F1EA038938070780EA0E03121C123C38380700
1278A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070015207C9F17>I<137CEA
01C2EA0701120E121C123CEA3802EA780CEA7BF0EA7C0012F0A4127013011302EA3804EA
1838EA07C010147C9315>I<1478EB019CEB033CA2EB07181400A2130EA5EBFFE0EB1C00
A45BA55BA55BA5485AA35B1231007BC7FC12F31266123C1629829F0E>I<EB1E30EB7138
EBE0F03801C070EA03801207EB00E05AA3381E01C0A4EB0380A2EA0E07130B38061700EA
01E7EA0007A2130EA21230EA781C485AEA6070EA3FC0151D7F9315>I<EA01E0120FEA01
C0A4485AA448C7FCA2131E1363380E8180380F01C0120EA2381C0380A438380700A3EB0E
1000701320A2131CEB0C4000E013803860070014207D9F17>I<13C0EA01E0A213C0C7FC
A7120E12131223EA4380EA4700A21287120EA35AA3EA38401380A21270EA31001232121C
0B1F7C9E0E>I<EA01E0120FEA01C0A4485AA448C7FCA2EB03C0EB0420380E08E0131113
21EB40C0381C8000001DC7FC121EEA1FC0EA38E01370A2EB384038707080A3EB310012E0
EA601E13207D9F15>107 D<EA03C0121FEA0380A4EA0700A4120EA45AA45AA45AA31271
12E2A4126412380A207C9F0C>I<391C0F80F0392630C318394740640C903880680EEB00
70A2008E495A120EA34848485AA3ED70803A3803807100A215E115623970070064D83003
133821147C9325>I<381C0F80382630C0384740601380EB0070A2008E13E0120EA3381C
01C0A3EB038400381388A2EB0708EB031000701330383001C016147C931A>I<137CEA01
C338030180000E13C0121E001C13E0123C1278A338F003C0A3EB07801400EA700F130EEA
3018EA1870EA07C013147C9317>I<3801C1E0380262183804741C1378EB701EA2EA08E0
1200A33801C03CA3143838038078147014E0EBC1C038072380EB1E0090C7FCA2120EA45A
A2B47E171D809317>I<EBF040380388C038070580EA0E03121C123C383807001278A3EA
F00EA45BA2EA703C135CEA30B8EA0F381200A25BA45BA2EA0FFE121D7C9315>I<EA1C1E
EA266138278380EA47871307EB0300008EC7FC120EA35AA45AA45A123011147C9313>I<
13FCEA0302EA0601EA0C03130713061300EA0F8013F0EA07F8EA03FCEA003E130E1270EA
F00CA2EAE008EA4010EA2060EA1F8010147D9313>I<EA018013C0EA0380A4EA0700A2EA
FFF0EA0700120EA45AA45AA31320EA7040A21380A2EA3100121E0C1C7C9B0F>I<000E13
C0001313E0382301C0EA4381EA4701A238870380120EA3381C0700A31410EB0E201218A2
381C1E40EA0C263807C38014147C9318>I<380E0380EA1307002313C0EA4383EA470113
0000871380120EA3381C0100A31302A25BA25BEA0E30EA03C012147C9315>I<000EEBC1
C0001313E3392301C3E0384381C1384701C015603987038040120EA3391C070080A3EC01
00A21306EB0F02000C5B380E13083803E1F01B147C931E>I<38038380380CC440381068
E013711220EB70C03840E0001200A3485AA314403863808012F3EB810012E5EA84C6EA78
7813147D9315>I<000E13C0001313E0382301C0EA4381EA4701A238870380120EA3381C
0700A4130E1218A2EA1C1EEA0C3CEA07DCEA001CA25B12F05BEAE060485AEA4380003EC7
FC131D7C9316>I<3801C0403803E080EA07F1380C1F00EA0802C65A5B5B5B5B5B48C7FC
1202485AEA08021210EA3E0CEA63FCEA41F8EA80E012147D9313>I<B8128029017B8C2E>
124 D E /Fx 1 50 df<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>49
D E /Fy 16 122 df<127812FCA212FEA2127A1202A41204A31208A21210122012400712
7B8510>44 D<B612FCA2380FC0000007141C150E1506A21502A415011404A21500A3140C
141CEBFFFCA2EBC01C140C1404A591C7FCAA487EB57EA220297DA826>70
D<D8FFE0913807FF80A20007EEF000D802F0EC0BE0A201781413A36D1423A36D1443A26D
1483A3903907800103A3903803C002A2903801E004A3903800F008A2EC7810A3EC3C20A3
EC1E40A2EC0F80A30007EB0700D80F804A7ED8FFF891B51280140231297EA836>77
D<B6FC15E03907E001F80003EB007C81811680150F16C0A61680151F1600153E5DEC01F0
90B512C001E0C8FCB1487EB57EA222297EA828>80 D<B512FCECFFC03907E007F00003EB
00F8157C81153F811680A61600153EA215784A5AEC07C0D9FFFEC7FCEBE007EC03C06E7E
6E7E811578157CA4157EA41601157F153F486CEB1F02B538800F82ED0784C8EA01F8282A
7EA82B>82 D<EA03FCEA0C0738100380383C01C0003E7F6D7E121C1208C7FCA3137FEA03
E0EA0F80EA1E005A127C0078144012F8A31301127C393C027880381E0C7F3907F01E001A
1A7E991D>97 D<137F3801C0E038070010000E1378001E13F85A1470007C132000781300
12F8A81278127C003C1308A26C1310000E13206C13603801C18038007E00151A7E991A>
99 D<140F14FFA2141F80AC133F3801C0CF3803802F380F001F121E001C7F123C127C12
78A212F8A71278A27EA26C5B000E132F6CEB4F803901C18FF038007E0F1C2A7EA921>I<
13FC38038780380701C0000E13E0EA1C00003C13F0A2481378A212F8A2B512F800F8C7FC
A51278A26C1308A26C1310000E13206C13403801C18038007E00151A7E991A>I<120FB4
FCA2121F7EACEB07F0EB1838EB201C497E140F1380A21300B139FFF0FFF0A21C2A7EA921
>104 D<121E123FA4121EC7FCA9120FB4FCA2121F7EB3A2EAFFF0A20C297EA811>I<120F
B4FCA2121F7EB3B2EAFFF0A20C2A7EA911>108 D<380F07F038FF1838EB201C381F400E
000F130F1380A21300B139FFF0FFF0A21C1A7E9921>110 D<137E3803C3C0380700E000
0E1370481338003C133CA248131EA200F8131FA80078131EA26C133CA2001C13386C1370
6C13E03803C3C038007E00181A7E991D>I<380F0F8038FF11C0EB23E0EA1F43EA0F83EB
81C0EB800090C7FCB07FEAFFFCA2131A7E9917>114 D<39FFF01FF0A2390F8007800007
EB03001402A26C6C5AA2EBE00C00011308A26C6C5AA2EBF830EB7820A26D5AA2EB3EC0EB
1E80A26DC7FCA31306A21304A2130C1308A2EA701012F85BA2485AEA6180001FC8FC1C26
7F991F>121 D E /Fz 26 122 df<B512F8A715077F921B>45 D<B712F016FF17C0C6D9
800013F0EE0FF8EE03FE707E701380EF7FC0173FEF1FE018F0170F18F8A2EF07FCA418FE
AB18FCA4EF0FF8A218F0171F18E0173FEF7FC01880933801FF004C5AEE0FFCEE7FF0B812
C094C7FC16F037317EB03E>68 D<B812E0A3C6903880007FEE0FF016031601A21600A217
70A31738A21507A21700A35D5D5D91B5FCA3EC803F818181A592C8FCACB612C0A32D317E
B033>70 D<B67EA3000190C9FCB3A9EE0380A416071700A25EA35E5E5E5E4B5A150FB7FC
A329317DB030>76 D<B712E016FEEEFF80C6D9800013E0EE3FF0EE0FF8EE07FCA2EE03FE
A217FFA717FEA2EE07FC17F8160FEE3FE0EEFFC091B6120016F80280C8FCB3A2B67EA330
317EB037>80 D<90391FF8018090B51203000314C73907F007EF390F8000FF48C7127F00
3E141F150F5A150712FCA215037EA26C91C7FC13C0EA7FF0EBFF806C13F8ECFF806C14F0
6C806C806C14FFC6FC013F1480010114C0D9001F13E01401EC003FED1FF0150F15071260
00E01403A316E07EA26CEC07C07EB4EC0F8001C0EB1F00D8FBFC13FE00F1B512F8D8E03F
5BD8C003138024317CB02D>83 D<007FB8FCA39039C00FF801D87E00EC003F007C820078
82A200708200F01780A3481603A5C792C7FCB3AA017FB6FCA331307DAF38>I<B5D8FC03
B539F003FFFCA3D803FEC7D80FF8C7EA0F80F207006D6F5C6C0307150EA26C6D6E5CA26E
80017F4A5DA26E496D1378013F021C1570A26E013C6D13F0011FDA387F5CA26D6C496C6C
485AA26EEDF0030107DAE01F5CA2DAFE01ECF8070103DAC00F91C7FCA2902601FF03ECFC
0EEE800715836D903A870003FE1CA203CFECFF3CDA7FCE6D1338A203FE15F86E486D5BA2
6E486E5AA36E486E5AA36E486E5AA36E486EC8FCA24E317EB053>87
D<EBFFF0000313FF390F803F809038C00FE0486C6C7EA26E7ED80FC07FEA0780C7FCA414
FF131FEBFFE33803FC03EA0FF0EA1FC0123FEA7F80A2EAFF00A31407A2387F800D393FC0
1DFE3A1FE078FFF03907FFE07FC6EB803F24207E9F27>97 D<EA01F812FFA3120F1207AD
EC3FE0ECFFFC9038FBE07F9039FF001F8049EB0FC04914E049EB07F016F8A2ED03FCA316
FEA816FCA3ED07F8A216F06DEB0FE06D14C001E7EB3F809039C3C0FE00903880FFF89038
003FC027327EB12D>I<EB0FFF017F13C03901FC01F03803F0033907E007F8120FEA1FC0
003FEB03F0EC01E04848C7FCA312FFA8127FA36C6C131CA2001F14386C7E000714703903
F001E03901FC07C039007FFF00EB0FF81E207D9F24>I<ED0FC0EC07FFA3EC007F153FAD
EB07F8EB3FFF9038FE07BF3903F801FF3907E0007F120F4848133F123FA2485AA312FFA8
127FA36C7EA2121F6C6C137F000714FF2603F00313E03A01FC0F3FFE38007FFEEB0FF027
327DB12D>I<EB0FFC90387FFF803901FC0FC03903F003E03907E001F0000F14F8391FC0
00FC003F14FEA24848137E157FA212FFA290B6FCA20180C7FCA4127FA36C6C1307121F15
0E6C7E6C6C131C6C6C13783900FE03E090383FFFC0903807FE0020207E9F25>I<EB01FE
90380FFF8090381FC3C090387F07E09038FE0FF0120113FC1203EC07E0EC018091C7FCA8
B512FCA3D803FCC7FCB3A8387FFFF0A31C327EB119>I<90391FF007C09039FFFE3FE03A
01F83F79F03907E00FC3000F14E19039C007E0E0001FECF000A2003F80A5001F5CA2000F
5CEBE00F00075C2603F83FC7FC3806FFFE380E1FF090C9FC121EA2121F7F90B57E6C14F0
15FC6C806C801680000F15C0003FC7127F007EEC1FE0007C140F00FC1407A4007EEC0FC0
003E1580003F141FD80FC0EB7E003907F803FC0001B512F0D8001F90C7FC242F7E9F28>
I<EA01F812FFA3120F1207ADEC07F8EC3FFEEC783F02C013809039F9801FC0EBFB0001FE
14E05BA35BB3B500C3B5FCA328327DB12D>I<EA03C0487E487E487EA46C5A6C5A6C5AC8
FCA9EA01F8127FA31207B3A7B51280A311337DB217>I<EA01F812FFA3120F1207B3B3A6
B512C0A312327DB117>108 D<3903F007F800FFEB3FFEEC783F02C013803A0FF1801FC0
3807F30001F614E013FCA35BB3B500C3B5FCA328207D9F2D>110
D<EB07FC90387FFFC03901FC07F03903F001F848486C7E4848137E001F147F003F158049
133F007F15C0A300FF15E0A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00075C3903
F803F83901FE0FF039007FFFC0D907FCC7FC23207E9F28>I<3901F83FE000FFEBFFFC90
38FBE07F9039FF003F80D807FEEB1FC049EB0FE04914F0ED07F8A216FC1503A216FEA816
FC1507A216F8A2ED0FF06D14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8EC3FC091
C8FCABB512C0A3272E7E9F2D>I<3803F03F00FFEB7FC09038F1C3E01487390FF30FF0EA
07F6A29038FC07E0EC03C091C7FCA25BB2B512E0A31C207E9F21>114
D<3801FF86000713FEEA1F00003C133E48131E140E12F8A36C90C7FCB47E13FC387FFFC0
6C13F0806C7F00077F00017FEA003F01001380143F0060131F00E0130FA27E15007E6C13
1E6C131C38FF807838F3FFF038C07F8019207D9F20>I<131CA5133CA3137CA213FC1201
12031207381FFFFEB5FCA2D803FCC7FCB0EC0380A71201EC0700EA00FEEB7F0EEB3FFCEB
07F0192E7FAD1F>I<D801F8EB07E000FFEB03FFA3000FEB003F0007141FB3153FA20003
147FA26C6CEBDFF03A00FE039FFF90387FFF1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80F
F8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC803C017F1338ECC078013F
1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7FCA26D5AA26D5AA21478
A21470A214F05C1301007C5BEAFE035C49C8FC5BEAFC1EEA787CEA3FF0EA0FC0262E7E9F
2B>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 257 158 a Fz(The)27 b(Design)f(Principles)e(of)j(a)g(W)-7
b(eigh)n(ted)332 249 y(Finite-State)26 b(T)-7 b(ransducer)27
b(Library)205 474 y Fy(Mehry)n(ar)18 b(Mohri)624 453
y Fx(1)647 474 y Fy(,)i(F)-5 b(ernando)18 b(P)n(ereira)h(and)g(Mic)n
(hael)f(Riley)152 573 y Fw(A)m(T&T)c(L)n(abs)h(|)i(R)n(ese)n(ar)n(ch,)e
(180)i(Park)g(A)o(venue,)e(Florham)i(Park,)f(NJ)g(07932-0971)p
83 710 1644 2 v 83 775 a Fv(Abstract)83 878 y Fu(W)l(e)k(describ)q(e)i
(the)e(algorithmic)g(and)h(soft)o(w)o(are)d(design)j(principles)h(of)e
(an)g(ob)s(ject-orien)o(ted)83 934 y(library)e(for)e(w)o(eigh)o(ted)h
(\014nite-state)g(transducers.)f(By)h(taking)g(adv)m(an)o(tage)f(of)h
(the)g(theory)f(of)83 991 y(rational)h(p)q(o)o(w)o(er)e(series,)i(w)o
(e)f(w)o(ere)g(able)i(to)d(ac)o(hiev)o(e)i(high)h(degrees)e(of)g
(generalit)o(y)l(,)h(mo)q(dular-)83 1047 y(it)o(y)i(and)g(irredundancy)
l(,)h(while)g(attaining)f(comp)q(etitiv)o(e)h(e\016ciency)g(in)g
(demanding)g(sp)q(eec)o(h)83 1104 y(pro)q(cessing)f(applications)h(in)o
(v)o(olving)f(w)o(eigh)o(ted)f(automata)f(of)h(more)f(than)h(10)1484
1087 y Ft(7)1521 1104 y Fu(states)g(and)83 1160 y(transitions.)13
b(Besides)h(its)e(mathematical)h(foundation,)g(the)g(design)h(also)e
(dra)o(ws)g(from)g(imp)q(or-)83 1217 y(tan)o(t)i(ideas)h(in)h
(algorithm)f(design)g(and)g(programming)f(languages:)h(dynamic)g
(programming)83 1273 y(and)d(shortest-paths)f(algorithms)h(o)o(v)o(er)e
(general)j(semirings,)f(ob)s(ject-orien)o(ted)g(programming,)83
1330 y(lazy)k(ev)m(aluation)g(and)g(memoization.)83 1462
y Fw(Key)g(wor)n(ds:)33 b Fu(W)l(eigh)o(ted)16 b(automata;)d
(\014nite-state)i(transducers;)g(rational)g(p)q(o)o(w)o(er)g(series;)83
1518 y(sp)q(eec)o(h)h(recognition.)p 83 1570 V 83 1822
a Fs(1)56 b(In)n(tro)r(duction)83 1992 y Fr(Finite-state)16
b(tec)o(hniques)g(ha)o(v)o(e)h(pro)o(v)o(en)f(v)m(aluable)h(in)g(a)g(v)
m(ariet)o(y)g(of)g(natural-language)83 2052 y(pro)q(cessing)j
(applications)f([5{11,14,16,18,19,29,33,34,37)q(,39,40].)j(Ho)o(w)o(ev)
o(er,)16 b(sp)q(eec)o(h)83 2112 y(pro)q(cessing)d(imp)q(oses)f
(requiremen)o(ts)e(that)j(w)o(ere)f(not)h(met)e(b)o(y)h(an)o(y)h
(existing)f(\014nite-state)83 2173 y(library)l(.)j(In)g(particular,)g
(sp)q(eec)o(h)h(recognition)g(requires)e(a)j(general)e(means)g(for)i
(manag-)83 2233 y(ing)g Fq(unc)n(ertainty)p Fr(:)h(all)e(lev)o(els)f
(of)j(represen)o(tation,)e(and)i(all)e(mappings)h(b)q(et)o(w)o(een)f
(lev)o(els,)83 2293 y(in)o(v)o(olv)o(e)h(alternativ)o(es)h(with)h
(di\013eren)o(t)g(probabilities,)f(since)g(there)h(is)g(uncertain)o(t)o
(y)f(in)83 2353 y(the)12 b(in)o(terpretation)f(of)i(the)e(sp)q(eec)o(h)
h(signal)g(at)h(all)f(lev)o(els.)d(Previous)j(sp)q(eec)o(h)g
(recognition)83 2413 y(algorithms)i(and)h(systems)f(relied)f(on)i(\\ad)
h(ho)q(c")g(metho)q(ds)e(for)h(com)o(bining)e(\014nite-state)83
2473 y(represen)o(tations)21 b(with)g(uncertain)o(t)o(y)l(.)e(Ho)o(w)o
(ev)o(er,)g(b)o(y)i(taking)g(adv)m(an)o(tage)h(of)g(the)f(the-)83
2534 y(ory)g(of)h(rational)f(p)q(o)o(w)o(er)h(series,)e(w)o(e)h(w)o
(ere)f(able)h(to)h(dev)o(elop)e(a)h(library)g(for)g(building)p
83 2584 150 2 v 83 2617 a Ft(1)128 2633 y Fu(Corresp)q(onding)16
b(author.)e(T)l(el:)i(+1-973-360-8536;)d(fax:)h(+1-973-360-8092.)83
2690 y(E-mail)i(address:)f(mohri@researc)o(h.att.com)f(\(M.)g(Mohri\))
98 2856 y Fp(Preprin)o(t)i(submitted)g(to)e(Elsevier)j(Preprin)o(t)604
b(3)15 b(Ma)o(y)f(1999)p eop
%%Page: 2 2
2 1 bop 83 42 a Fr(and)16 b(applying)f(w)o(eigh)o(ted)g(\014nite-state)
g(transducers)h(that)g(can)f(represen)o(t)g(together)g(all)83
102 y(the)g(\014nite-state)g(and)h(uncertain)o(t)o(y)e(managemen)o(t)e
(op)q(erations)17 b(in)d(sp)q(eec)o(h)h(recognition)83
162 y(while)20 b(creating)h(the)g(opp)q(ortunit)o(y)h(for)f(hitherto)g
(unrecognized)g(optimizations)e(and)83 222 y(ac)o(hieving)j(comp)q
(etitiv)o(e)f(or)j(sup)q(erior)g(p)q(erformance)e(in)h(man)o(y)f(sp)q
(eec)o(h)h(recognition)83 282 y(tasks)17 b([24,25,31].)83
393 y(This)e(pap)q(er)h(fo)q(cuses)f(on)g(the)g(o)o(v)o(erall)f(design)
h(of)g(the)f(library)h(starting)g(from)f(its)h(math-)83
453 y(ematical)d(foundation,)j(rather)g(than)g(on)g(sp)q(eci\014c)e
(algorithms)h(or)h(applications,)f(whic)o(h)83 513 y(ha)o(v)o(e)19
b(b)q(een)h(describ)q(ed)g(elsewhere)f([18,21,24{26,28,31].)j(Although)
e(our)h(initial)e(mo-)83 573 y(tiv)m(ation)g(w)o(as)g(to)g(impro)o(v)o
(e)d(the)j(to)q(ols)h(a)o(v)m(ailable)e(for)h(sp)q(eec)o(h)f
(recognition,)g(w)o(e)h(aimed)83 633 y(alw)o(a)o(ys)h(for)g(the)g
(highest)g(degree)g(of)g(generalit)o(y)f(compatible)f(with)h(the)h
(mathemati-)83 694 y(cal)c(foundation)h(and)g(with)g(the)f(e\016ciency)
e(demands)i(of)g(the)h(application.)e(By)h(basing)83
754 y(our)e(datat)o(yp)q(es)h(on)g(the)e(least)h(restrictiv)o(e)e
(algebraic)h(structures)h(compatible)e(with)i(the)83
814 y(desired)k(algorithms,)f(w)o(e)h(w)o(ere)g(able)g(to)h(a)o(v)o
(oid)f(redundan)o(t)h(implem)o(e)o(n)o(tations)d(of)j(the)83
874 y(same)c(generic)h(algorithm)f(on)i(related)e(but)i(distinct)e
(datat)o(yp)q(es,)i(th)o(us)f(creating)g(a)h(de-)83 934
y(sign)f(with)f(a)g(minimal,)c(highly)k(mo)q(dular)g(core)g(of)g
(algorithms.)f(In)h(addition,)g(b)o(y)f(using)83 995
y(mathematically)o(-de\014ned)c(datat)o(yp)q(es,)i(w)o(e)g(can)h
(abstract)g(a)o(w)o(a)o(y)f(from)f(implem)o(en)o(t)o(ation)83
1055 y(details)j(in)g(most)g(of)h(the)f(user-visible)f(parts)i(of)g
(the)f(library)l(,)g(while)f(b)q(eing)i(able)f(to)h(sup-)83
1115 y(p)q(ort)20 b(a)g(v)m(ariet)o(y)f(of)h(implem)o(en)n(tations)e
(with)h(di\013eren)o(t)g(p)q(erformance)f(c)o(haracteristics)83
1175 y(for)f(datat)o(yp)q(es)f(and)h(op)q(erations.)83
1285 y(One)h(of)g(the)g(cen)o(tral)f(steps)h(of)g(program)g(design)g
(is)g(to)g(factor)h(the)e(task)i(under)f(study)83 1346
y(in)o(to)c(algorithm)f(and)i(data)g(structures.)f(W)l(e)g(suggest)h
(here)f(a)h(mathematical)c(analogue)83 1406 y(of)i(that)h(principle:)c
(the)j(separation)h(of)f(algebra)g(and)h(algorithms.)e(In)g(other)h(w)o
(ords,)g(our)83 1466 y(algorithms)i(should)h(b)q(e)g(designed)f(to)h(w)
o(ork)g(in)g(as)g(general)f(an)h(algebraic)g(structure)f(as)83
1526 y(p)q(ossible.)83 1637 y(W)l(e)d(start)h(b)o(y)e(outlining)h(the)g
(mathematical)d(foundation)14 b(for)e(the)g(library)f(in)h(Section)g
(2.)83 1697 y(Op)q(erating)j(at)f(the)h(higher)f(lev)o(el)e(of)i
(generalit)o(y)f(of)i(w)o(eigh)o(ted)e(\014nite-state)h(transducers)83
1757 y(requires)g(new)h(algorithms)f(that)i(are)f(not)g(alw)o(a)o(ys)g
(straigh)o(tforw)o(ard)h(extensions)f(of)g(the)83 1817
y(corresp)q(onding)20 b(classical)f(algorithms)g(for)g(un)o(w)o(eigh)o
(ted)g(automata,)g(as)h(discussed)f(in)83 1877 y(Section)f(3.1.)g(In)g
(particular,)g(w)o(e)g(use)g(the)g(example)f(of)h Fo(\017)p
Fr(-remo)o(v)m(al)f(in)h(Section)g(3.2)h(to)83 1938 y(illustrate)j(ho)o
(w)h(that)g(higher)f(lev)o(el)f(of)i(generalit)o(y)e(can)i(b)q(e)g
(attained)f(e\016cien)o(tly)e(b)o(y)83 1998 y(using)d(general)f
(shortest-paths)i(computations)d(o)o(v)o(er)h(semirings.)83
2108 y(The)c(e\016ciency)e(of)j(the)f(library)f(in)h(some)g
(applications)g(dep)q(ends)g(crucially)f(on)i(dela)o(ying)83
2168 y(the)21 b(full)g(computation)g(of)g(op)q(eration)i(results)e(un)o
(til)g(they)g(are)g(needed.)g(While)f(this)83 2228 y(idea)d(had)g(b)q
(een)g(used)g(in)g(previous)g(\014nite-state)g(to)q(ols,)g(for)h
(instance)e(the)h(on-demand)83 2289 y(determinization)10
b(in)j Fn(egrep)e Fr([2],)h(our)h(library)g(uses)g(lazy)f(ev)m
(aluation)h(for)g(all)g(op)q(erations)83 2349 y(satisfying)j(certain)g
(lo)q(calit)o(y)f(constrain)o(ts,)h(as)h(explained)e(in)h(Section)g
(3.3.)83 2459 y(These)e(mathematical)e(and)j(algorithmic)e
(considerations)h(led)g(to)h(a)g(set)f(of)h(general)f(op-)83
2519 y(erations)h(on)g(a)f(simple)f(and)h(general)h(automaton)f(datat)o
(yp)q(e)h(with)f(a)h(range)g(of)g(p)q(ossible)83 2580
y(implem)o(en)o(tati)o(ons,)f(whic)o(h)i(are)g(discussed)g(in)g
(Section)g(4.)83 2690 y(Finally)l(,)f(in)i(Section)f(5,)h(w)o(e)g
(presen)o(t)f(in)h(more)e(detail)i(the)f(requiremen)o(ts)e(and)k
(curren)o(t)885 2856 y(2)p eop
%%Page: 3 3
3 2 bop 83 42 a Fr(status)17 b(of)g(our)g(main)e(application,)h(sp)q
(eec)o(h)g(recognition,)f(and)j(illustrate)d(with)h(an)h(ap-)83
102 y(plication)h(of)i(the)e(library)h(to)g(a)g(simpli\014ed)e(v)o
(ersion)h(of)h(a)h(t)o(ypical)d(sp)q(eec)o(h-pro)q(cessing)83
162 y(task.)83 376 y Fs(2)56 b(Mathematical)17 b(F)-5
b(oundations)83 548 y Fr(The)19 b(generalit)o(y)f(of)i(our)f(library)g
(deriv)o(es)f(from)g(the)h(algebraic)g(concepts)g(of)g
Fq(r)n(ational)83 608 y(p)n(ower)c(series)f Fr(and)g
Fq(semiring)p Fr(.)g(A)g(semiring)e(\()p Fo(K)q(;)c Fm(\010)p
Fo(;)g Fm(\012)p Fo(;)1106 598 y Fr(\026)1106 608 y(0)o
Fo(;)1151 598 y Fr(\026)1151 608 y(1)q(\))13 b(is)h(a)g(set)g
Fo(K)k Fr(equipp)q(ed)13 b(with)83 668 y(t)o(w)o(o)i(binary)g(op)q
(erations)h Fm(\010)f Fr(and)g Fm(\012)g Fr(suc)o(h)g(that)h(\()p
Fo(K)q(;)8 b Fm(\010)p Fo(;)1121 658 y Fr(\026)1121 668
y(0\))15 b(is)g(a)g(comm)o(utativ)n(e)d(monoid,)83 729
y(\()p Fo(K)q(;)c Fm(\012)p Fo(;)227 718 y Fr(\026)227
729 y(1\))17 b(is)f(a)h(\(p)q(ossibly)g(non-comm)o(utativ)o(e\))d
(monoid,)h Fm(\012)h Fr(distributes)h(o)o(v)o(er)e Fm(\010)p
Fr(,)h(and)83 778 y(\026)83 789 y(0)d Fm(\012)f Fo(x)17
b Fr(=)g Fo(x)12 b Fm(\012)363 778 y Fr(\026)363 789
y(0)17 b(=)459 778 y(\026)459 789 y(0)i(for)g(an)o(y)f
Fo(x)f Fm(2)g Fo(K)t Fr(.)h(Informally)l(,)e(a)i(semiring)f(is)h(a)g
(ring)h(that)f(ma)o(y)83 849 y(lac)o(k)i(negation.)h(In)f(the)h(follo)o
(wing,)f(w)o(e)g(will)f(often)i(call)f Fq(weights)i Fr(the)f(elemen)n
(ts)d(of)j(a)83 909 y(semiring.)83 1021 y(A)g(formal)f(p)q(o)o(w)o(er)h
(series)g Fo(S)k Fr(:)d Fo(x)g Fm(7!)g Fr(\()p Fo(S;)8
b(x)p Fr(\))21 b(is)g(a)g(function)g(from)f(a)i(free)f(monoid)f(\006)
1707 1003 y Fl(\003)83 1081 y Fr(to)j(a)g(semiring)e
Fo(K)t Fr(.)h(Rational)h(p)q(o)o(w)o(er)g(series)f(are)h(those)g
(formal)f(p)q(o)o(w)o(er)g(series)g(that)83 1142 y(can)c(b)q(e)g(built)
g(b)o(y)f(rational)h(op)q(erations)h(\(concatenation,)f(sum)f(and)i
(Kleene)d(closure\))83 1202 y(from)j(the)h Fq(singleton)26
b Fr(p)q(o)o(w)o(er)20 b(series)f(giv)o(en)g(b)o(y)h(\()p
Fo(S;)8 b(x)p Fr(\))19 b(=)i Fo(k)r(;)8 b Fr(\()p Fo(S;)g(y)r
Fr(\))19 b(=)1424 1191 y(\026)1424 1202 y(0)h(if)g Fo(x)g
Fm(6)p Fr(=)g Fo(y)i Fr(for)83 1262 y Fo(x)14 b Fm(2)g
Fr(\006)207 1241 y Fl(\003)227 1262 y Fo(;)8 b(k)15 b
Fm(2)f Fo(K)t Fr(.)g(The)f(rational)h(p)q(o)o(w)o(er)g(series)f(are)h
(exactly)e(those)i(formal)f(p)q(o)o(w)o(er)h(series)83
1322 y(that)j(can)f(b)q(e)h(represen)o(ted)e(b)o(y)g(w)o(eigh)o(ted)h
(automata)g([36].)83 1434 y(W)l(eigh)o(ted)23 b(automata)h(are)g(a)g
(generalization)f(of)h(the)f(notion)i(of)f(automaton:)f(eac)o(h)83
1494 y(transition)f(of)f(a)h(w)o(eigh)o(ted)e(automaton)i(is)f
(assigned)h(a)g(w)o(eigh)o(t)f(in)g(addition)g(to)h(the)83
1555 y(usual)g(lab)q(el\(s\).)e(More)h(formally)l(,)e(a)i(w)o(eigh)o
(ted)f Fq(ac)n(c)n(eptor)27 b Fr(o)o(v)o(er)20 b(a)h(\014nite)g(alphab)
q(et)h(\006)83 1615 y(and)f(a)g(w)o(eigh)o(t)f(semiring)e
Fo(K)25 b Fr(is)20 b(a)h(\014nite)f(directed)f(graph)i(with)f(no)q(des)
i(represen)o(ting)83 1675 y(states)e(and)f(arcs)h(represen)o(ting)e
(transitions)h(in)g(whic)o(h)f(eac)o(h)h(transition)g
Fo(t)g Fr(is)f(lab)q(eled)83 1735 y(with)j(an)g(input)g
Fo(i)p Fr(\()p Fo(t)p Fr(\))g Fm(2)h Fr(\006)g(and)f(a)g(w)o(eigh)o(t)g
Fo(w)q Fr(\()p Fo(t)p Fr(\))g Fm(2)h Fo(K)t Fr(.)f(F)l(urthermore,)e
(eac)o(h)h(state)h Fo(q)83 1795 y Fr(has)g(an)f Fq(initial)i(weight)k
Fo(\025)p Fr(\()p Fo(q)r Fr(\))20 b Fm(2)g Fo(K)k Fr(and)d(a)f
Fq(\014nal)i(weight)k Fo(\032)p Fr(\()p Fo(q)r Fr(\))20
b Fm(2)g Fo(K)t Fr(.)g(In)g(a)g(w)o(eigh)o(ted)83 1855
y(transducer,)f(eac)o(h)g(transition)g Fo(t)g Fr(has)h(also)g(an)f
(output)h(lab)q(el)f Fo(o)p Fr(\()p Fo(t)p Fr(\))g Fm(2)g
Fr(\001)1452 1837 y Fl(\003)1490 1855 y Fr(where)g(\001)g(is)83
1916 y(the)e(transducer's)g(output)g(alphab)q(et.)g(A)g(state)g
Fo(q)h Fr(is)f Fq(initial)23 b Fr(if)16 b Fo(\025)p Fr(\()p
Fo(q)r Fr(\))f Fm(6)p Fr(=)1434 1905 y(\026)1434 1916
y(0,)i(and)g Fq(\014nal)23 b Fr(if)83 1976 y Fo(\032)p
Fr(\()p Fo(q)r Fr(\))13 b Fm(6)p Fr(=)235 1965 y(\026)235
1976 y(0)q(.)297 1958 y Ft(1)83 2088 y Fr(A)f(w)o(eigh)o(ted)f
(acceptor)h Fo(A)g Fr(de\014nes)g(a)g(rational)h(p)q(o)o(w)o(er)f
(series)f Fo(S)s Fr(\()p Fo(A)p Fr(\))h(as)h(follo)o(ws.)e(F)l(or)h
(eac)o(h)83 2148 y(input)19 b(string)g Fo(x)p Fr(,)f(let)h
Fo(P)7 b Fr(\()p Fo(x)p Fr(\))18 b(b)q(e)i(the)e(set)h(of)h(transition)
f(paths)h Fo(p)f Fr(=)f Fo(t)1385 2155 y Ft(1)1413 2148
y Fm(\001)8 b(\001)g(\001)g Fo(t)1497 2155 y Fk(n)1518
2159 y Fj(p)1557 2148 y Fr(from)18 b(an)83 2208 y(initial)c(state)j
Fo(i)360 2215 y Fk(p)395 2208 y Fr(to)f(a)g(\014nal)g(state)g
Fo(f)745 2215 y Fk(p)781 2208 y Fr(suc)o(h)g(that)g Fo(x)d
Fr(=)h Fo(i)p Fr(\()p Fo(t)1143 2215 y Ft(1)1162 2208
y Fr(\))8 b Fm(\001)g(\001)g(\001)h Fo(i)p Fr(\()p Fo(t)1310
2215 y Fk(n)1331 2219 y Fj(p)1351 2208 y Fr(\).)15 b(Eac)o(h)h(suc)o(h)
f(path)83 2279 y(assigns)k Fo(x)f Fr(the)g(w)o(eigh)o(t)g
Fo(w)q Fr(\()p Fo(p)p Fr(\))g(=)f Fo(\025)p Fr(\()p Fo(i)772
2286 y Fk(p)792 2279 y Fr(\))12 b Fm(\012)875 2231 y
Fi(\020)899 2245 y(N)946 2289 y Fk(j)972 2279 y Fo(w)q
Fr(\()p Fo(t)1045 2286 y Fk(j)1063 2279 y Fr(\))1082
2231 y Fi(\021)1119 2279 y Fm(\012)h Fo(\032)p Fr(\()p
Fo(f)1239 2286 y Fk(p)1259 2279 y Fr(\).)k(A)h(similar)e(de\014nition)p
83 2359 150 2 v 83 2391 a Ft(1)128 2407 y Fu(F)l(or)d(con)o(v)o
(enience)h(of)f(implemen)o(tation,)h(and)f(without)g(loss)g(of)g
(generalit)o(y)g(\(initial)i(w)o(eigh)o(ts)83 2464 y(can)i(b)q(e)h(sim)
o(ulated)g(with)g Fh(\017)f Fu(transitions\),)g(the)g(automata)f(supp)q
(orted)i(b)o(y)f(the)g(library)h(ha)o(v)o(e)83 2520 y(a)k(single)i
(initial)h(state,)c(with)i(initial)i(w)o(eigh)o(t)934
2510 y(\026)934 2520 y(1)o(.)d(Also,)h(w)o(e)f(allo)o(w)h(the)g(input)h
(lab)q(el)g(of)e(a)83 2577 y(transition)15 b(to)f(b)q(e)h
Fh(\017)g Fu(and)f(restrict)g(output)h(lab)q(els)h(to)e(\001)8
b Fg([)h(f)p Fh(\017)p Fg(g)14 b Fu(for)g(practical)h(reasons)f
(related)83 2633 y(to)j(the)h(e\016cien)o(t)h(implemen)o(tation)g(of)f
(rational)g(op)q(erations)g(and)g(comp)q(osition.)g(As)g(is)h(w)o(ell)
83 2690 y(kno)o(wn,)c(the)g(theory)g(can)g(b)q(e)h(extended)g(to)f(co)o
(v)o(er)f(those)h(cases.)885 2856 y Fr(3)p eop
%%Page: 4 4
4 3 bop 430 509 a @beginspecial 180 @llx 253 @lly 433
@urx 539 @ury 1080 @rwi @setspecial
%%BeginDocument: aut1.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
179 252 254 287 boxprim clip newpath
180 253 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
126 25 moveto () 0 14.00 -0.50 alignedtext
126 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 146 18 18 ellipse_path
stroke
gsave 10 dict begin
18 147 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
122 211 18 18 ellipse_path
stroke
gsave 10 dict begin
122 212 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 27 162 moveto
34 174 44 189 54 195 curveto
64 201 81 205 95 208 curveto
stroke
104 209 -173.66 10.00 5.00 arrowhead
gsave 10 dict begin
70 213 moveto (a/1) 17 14.00 -0.50 alignedtext
end grestore

%	0 -> 1
newpath 35 151 moveto
51 156 74 164 86 172 curveto
93 176 101 184 107 191 curveto
stroke
111 196 -128.66 10.00 5.00 arrowhead
gsave 10 dict begin
70 181 moveto (c/4) 17 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
122 94 18 18 ellipse_path
stroke
gsave 10 dict begin
122 95 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
newpath 34 138 moveto
51 129 79 116 99 106 curveto
stroke
106 102 150.26 10.00 5.00 arrowhead
gsave 10 dict begin
70 137 moveto (a/5) 17 14.00 -0.50 alignedtext
end grestore

%	0 -> 2
newpath 26 130 moveto
33 116 44 97 54 89 curveto
63 81 81 83 96 86 curveto
stroke
105 88 -167.47 10.00 5.00 arrowhead
gsave 10 dict begin
70 98 moveto (c/6) 17 14.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
230 263 18 18 ellipse_path
stroke
230 263 22 22 ellipse_path
stroke
gsave 10 dict begin
230 264 moveto (3) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 3
newpath 138 219 moveto
156 227 183 240 203 249 curveto
stroke
210 253 -150.26 10.00 5.00 arrowhead
gsave 10 dict begin
174 252 moveto (b/1) 17 14.00 -0.50 alignedtext
end grestore

%	4
gsave 10 dict begin
solid
230 173 18 18 ellipse_path
stroke
230 173 22 22 ellipse_path
stroke
gsave 10 dict begin
230 174 moveto (4) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 4
newpath 139 205 moveto
156 199 182 190 201 183 curveto
stroke
209 180 159.44 10.00 5.00 arrowhead
gsave 10 dict begin
174 207 moveto (b/3) 17 14.00 -0.50 alignedtext
end grestore

%	1 -> 4
newpath 131 195 moveto
139 184 149 170 158 164 curveto
168 157 185 159 200 163 curveto
stroke
209 165 -167.47 10.00 5.00 arrowhead
gsave 10 dict begin
174 173 moveto (c/6) 17 14.00 -0.50 alignedtext
end grestore

%	5
gsave 10 dict begin
solid
230 88 18 18 ellipse_path
stroke
230 88 22 22 ellipse_path
stroke
gsave 10 dict begin
230 89 moveto (5) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 5
newpath 140 93 moveto
156 92 181 91 200 89 curveto
stroke
208 89 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
174 101 moveto (c/3) 17 14.00 -0.50 alignedtext
end grestore

%	2 -> 5
newpath 136 82 moveto
143 76 152 69 158 67 curveto
170 63 187 68 202 74 curveto
stroke
210 77 -159.44 10.00 5.00 arrowhead
gsave 10 dict begin
174 78 moveto (b/2) 17 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 500 w @beginspecial 168 @llx 265 @lly 445
@urx 528 @ury 1080 @rwi @setspecial
%%BeginDocument: aut2.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
167 264 278 264 boxprim clip newpath
168 265 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
138 25 moveto () 0 14.00 -0.50 alignedtext
138 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 148 18 18 ellipse_path
stroke
gsave 10 dict begin
18 149 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
128 178 18 18 ellipse_path
stroke
gsave 10 dict begin
128 179 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 153 moveto
54 157 82 165 102 171 curveto
stroke
110 173 -165.96 10.00 5.00 arrowhead
gsave 10 dict begin
73 177 moveto (a/6) 17 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
128 116 18 18 ellipse_path
stroke
gsave 10 dict begin
128 117 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
newpath 35 141 moveto
41 138 49 135 54 134 curveto
67 130 86 125 102 122 curveto
stroke
110 120 165.96 10.00 5.00 arrowhead
gsave 10 dict begin
73 143 moveto (c/10) 24 14.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
254 240 18 18 ellipse_path
stroke
254 240 22 22 ellipse_path
stroke
gsave 10 dict begin
254 241 moveto (3) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 3
newpath 143 188 moveto
153 194 164 201 164 201 curveto
181 209 206 220 225 228 curveto
stroke
233 231 -159.44 10.00 5.00 arrowhead
gsave 10 dict begin
189 232 moveto (b/2.33) 35 14.00 -0.50 alignedtext
end grestore

%	4
gsave 10 dict begin
solid
254 178 18 18 ellipse_path
stroke
254 178 22 22 ellipse_path
stroke
gsave 10 dict begin
254 179 moveto (4) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 4
newpath 146 178 moveto
167 178 199 178 224 178 curveto
stroke
232 178 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
189 187 moveto (c/3.5) 27 14.00 -0.50 alignedtext
end grestore

%	5
gsave 10 dict begin
solid
254 116 18 18 ellipse_path
stroke
254 116 22 22 ellipse_path
stroke
gsave 10 dict begin
254 117 moveto (5) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 5
newpath 146 116 moveto
167 116 199 116 224 116 curveto
stroke
232 116 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
189 125 moveto (b/2.8) 28 14.00 -0.50 alignedtext
end grestore

%	6
gsave 10 dict begin
solid
254 54 18 18 ellipse_path
stroke
254 54 22 22 ellipse_path
stroke
gsave 10 dict begin
254 55 moveto (6) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 6
newpath 143 106 moveto
150 101 158 96 164 93 curveto
181 85 206 74 225 65 curveto
stroke
233 62 159.44 10.00 5.00 arrowhead
gsave 10 dict begin
189 102 moveto (c/4.2) 27 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 489 607 a Fu(Fig.)15 b(1.)g(Determinization)h(o)o(v)o(er)e
(\()p Ff(R)n Fh(;)7 b Fu(+)p Fh(;)h Fg(\001)o Fh(;)g
Fu(0)o Fh(;)f Fu(1\).)83 718 y Fr(can)16 b(b)q(e)h(giv)o(en)e(for)h(a)h
(w)o(eigh)o(ted)e(transducer)h Fo(T)7 b Fr(,)15 b(except)g(that)h
Fo(S)s Fr(\()p Fo(T)7 b Fr(\))16 b(is)g(no)o(w)g(a)h(rational)83
778 y(p)q(o)o(w)o(er)12 b(series)f(o)o(v)o(er)h(a)g(semiring)e(of)j
(rational)f(p)q(o)o(w)o(er)g(series,)f(those)h(mapping)g(transducer)83
839 y(output)17 b(strings)g(to)f(w)o(eigh)o(ts)g([35].)83
955 y(Most)j(of)g(the)g(algorithms)f(of)h(our)h(library)e(w)o(ork)h
(with)g(arbitrary)f(semirings)g(or)h(with)83 1015 y(semirings)d(from)h
(mathematicall)o(y-de\014ned)e(sub)q(classes)j(\(closed)f(semirings,)f
Fo(k)r Fr(-closed)83 1075 y(semirings)d([20]\).)i(T)l(o)g(instan)o
(tiate)g(the)g(library)f(for)h(a)h(particular)e(semiring)f
Fo(K)t Fr(,)i(w)o(e)g(just)83 1135 y(need)g(to)h(giv)o(e)f
(computational)g(represen)o(tations)g(for)h(the)f(semiring)f(elemen)o
(ts)f(and)j(op-)83 1196 y(erations.)c(Library)f(algorithms,)g(for)h
(instance)f(comp)q(osition,)g Fo(\017)p Fr(-remo)o(v)m(al,)e
(determiniza-)83 1256 y(tion)17 b(and)g(minim)o(iz)o(ation,)d(w)o(ork)i
(without)h(c)o(hange)g(o)o(v)o(er)e(di\013eren)o(t)h(semirings)f(b)q
(ecause)83 1316 y(of)i(their)e(foundation)i(in)f(the)g(theory)g(of)h
(rational)f(p)q(o)o(w)o(er)h(series)e([18].)83 1432 y(F)l(or)j
(example,)e(the)h(same)g(p)q(o)o(w)o(er)h(series)g(determinization)d
(algorithm)i(and)i(co)q(de)f([18])83 1492 y(can)h(b)q(e)g(used)g(to)g
(determinize)d(transducers)j([17],)f(w)o(eigh)o(ted)g(transducers,)h(w)
o(eigh)o(ted)83 1553 y(automata)c(encoun)o(tered)e(in)i(sp)q(eec)o(h)f
(pro)q(cessing)h([24])f(and)h(w)o(eigh)o(ted)f(automata)g(using)83
1613 y(the)h(probabilit)o(y)f(op)q(erations.)h(T)l(o)h(do)f(so,)g(one)g
(just)h(needs)e(to)i(use)e(the)h(algorithm)f(with)83
1673 y(the)i(string)g(semiring)e(\(\006)554 1655 y Fl(\003)585
1673 y Fm([)d(f1g)p Fo(;)d Fm(^)p Fo(;)g Fm(\001)p Fo(;)g
Fm(1)p Fo(;)g(\017)p Fr(\))14 b([21])i(in)g(the)g(case)g(of)g
(transducers,)g(with)83 1733 y(the)e(semirings)e(\()p
Fe(R)p Fo(;)c Fr(+)p Fo(;)f Fm(\001)p Fo(;)h Fr(0)p Fo(;)g
Fr(1\))k(and)j(\()p Fe(R)804 1740 y Ft(+)830 1733 y Fo(;)8
b Fr(min)n Fo(;)g Fr(+)p Fo(;)g Fm(1)p Fo(;)g Fr(0\))14
b(in)g(the)f(other)i(cases,)e(and)i(with)83 1793 y(the)f(cross)h(pro)q
(duct)h(of)f(the)f(string)h(semiring)d(and)k(one)e(of)h(these)f
(semirings)f(in)i(the)f(case)83 1854 y(of)g(w)o(eigh)o(ted)e
(transducers.)h(Figure)g(1)h(sho)o(ws)g(a)g(w)o(eigh)o(ted)e(acceptor)i
(o)o(v)o(er)e(\()p Fe(R)p Fo(;)7 b Fr(+)p Fo(;)h Fm(\001)p
Fo(;)g Fr(0)p Fo(;)g Fr(1\))83 1914 y(and)17 b(its)f(determinization.)
83 2156 y Fs(3)56 b(Algorithms)83 2333 y Fq(3.1)50 b(Weighte)n(d)17
b(A)o(utomata)h(A)o(lgorithms)83 2509 y Fr(Although)13
b(algorithms)g(for)g(w)o(eigh)o(ted)f(automata)h(are)h(closely)e
(related)g(to)h(their)g(b)q(etter-)83 2570 y(kno)o(wn)k(un)o(w)o(eigh)o
(ted)f(coun)o(terparts,)g(they)g(di\013er)h(in)f(crucial)g(details.)f
(One)i(of)g(the)f(im-)83 2630 y(p)q(ortan)o(t)c(features)g(of)f(our)h
(\014nite-state)g(library)e(is)h(that)h(most)f(of)h(its)f(algorithms)f
(op)q(erate)83 2690 y(on)17 b(general)f(w)o(eigh)o(ted)f(automata)h
(and)h(transducers.)885 2856 y(4)p eop
%%Page: 5 5
5 4 bop 130 579 a @beginspecial 56 @llx 244 @lly 557
@urx 548 @ury 1800 @rwi @setspecial
%%BeginDocument: aut4.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
55 243 502 305 boxprim clip newpath
56 244 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
250 41 moveto () 0 14.00 -0.50 alignedtext
250 25 moveto () 0 14.00 -0.50 alignedtext
250 9 moveto ( ) 3 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 199 18 18 ellipse_path
stroke
gsave 10 dict begin
18 200 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
134 251 18 18 ellipse_path
stroke
gsave 10 dict begin
134 252 moveto (1) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 35 206 moveto
55 215 88 230 110 241 curveto
stroke
117 244 -156.80 10.00 5.00 arrowhead
gsave 10 dict begin
76 244 moveto (eps/0) 29 14.00 -0.50 alignedtext
end grestore

%	4
gsave 10 dict begin
solid
134 172 18 18 ellipse_path
stroke
gsave 10 dict begin
134 173 moveto (4) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 4
newpath 34 191 moveto
41 188 49 185 54 184 curveto
69 181 90 177 108 175 curveto
stroke
116 174 172.87 10.00 5.00 arrowhead
gsave 10 dict begin
76 193 moveto (eps/0) 29 14.00 -0.50 alignedtext
end grestore

%	1 -> 1
newpath 146 265 moveto
150 276 146 287 134 287 curveto
125 287 121 281 121 273 curveto
stroke
122 265 97.13 10.00 5.00 arrowhead
gsave 10 dict begin
134 296 moveto (red/0.5) 39 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
288 243 18 18 ellipse_path
stroke
gsave 10 dict begin
288 244 moveto (2) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 152 250 moveto
180 249 232 246 264 244 curveto
stroke
270 244 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
203 259 moveto (green/0.3) 52 14.00 -0.50 alignedtext
end grestore

%	4 -> 2
newpath 149 182 moveto
156 186 164 191 170 193 curveto
195 205 237 222 263 233 curveto
stroke
271 236 -159.44 10.00 5.00 arrowhead
gsave 10 dict begin
203 231 moveto (eps/0.5) 40 14.00 -0.50 alignedtext
end grestore

%	5
gsave 10 dict begin
solid
288 160 22 23 ellipse_path
stroke
288 160 26 27 ellipse_path
stroke
gsave 10 dict begin
288 161 moveto (5/0) 17 14.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 5
newpath 152 171 moveto
177 168 223 165 255 162 curveto
stroke
261 162 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
203 179 moveto (green/0.4) 52 14.00 -0.50 alignedtext
end grestore

%	6
gsave 10 dict begin
solid
288 82 30 30 ellipse_path
stroke
288 82 34 34 ellipse_path
stroke
gsave 10 dict begin
288 83 moveto (6/0.3) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 6
newpath 148 160 moveto
158 152 170 142 170 142 curveto
191 130 226 113 252 100 curveto
stroke
257 97 149.04 10.00 5.00 arrowhead
gsave 10 dict begin
203 151 moveto (blue/1.2) 45 14.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
466 243 30 30 ellipse_path
stroke
466 243 34 34 ellipse_path
stroke
gsave 10 dict begin
466 244 moveto (3/0.8) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 306 243 moveto
333 243 386 243 424 243 curveto
stroke
432 243 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
377 252 moveto (blue/0) 35 14.00 -0.50 alignedtext
end grestore

%	2 -> 3
newpath 304 234 moveto
316 229 330 222 340 220 curveto
365 216 390 216 414 220 curveto
418 221 424 223 430 225 curveto
stroke
436 228 -153.43 10.00 5.00 arrowhead
gsave 10 dict begin
377 229 moveto (yellow/0.6) 59 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 800 w @beginspecial 41 @llx 191 @lly 572
@urx 601 @ury 1800 @rwi @setspecial
%%BeginDocument: aut5.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
40 190 532 411 boxprim clip newpath
41 191 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
265 41 moveto () 0 14.00 -0.50 alignedtext
265 25 moveto () 0 14.00 -0.50 alignedtext
265 9 moveto ( ) 3 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 216 18 18 ellipse_path
stroke
gsave 10 dict begin
18 217 moveto (0) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
172 357 18 18 ellipse_path
stroke
gsave 10 dict begin
172 358 moveto (1) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 21 234 moveto
25 259 35 304 54 322 curveto
74 339 117 349 145 354 curveto
stroke
154 355 -173.66 10.00 5.00 arrowhead
gsave 10 dict begin
87 357 moveto (red/0.5) 39 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
334 303 18 18 ellipse_path
stroke
gsave 10 dict begin
334 304 moveto (2) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
newpath 30 230 moveto
39 240 50 253 54 256 curveto
119 291 252 300 309 303 curveto
stroke
316 303 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
172 303 moveto (green/0.3) 52 14.00 -0.50 alignedtext
end grestore

%	4
gsave 10 dict begin
solid
172 243 22 23 ellipse_path
stroke
172 243 26 27 ellipse_path
stroke
gsave 10 dict begin
172 244 moveto (4/0) 17 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 4
newpath 36 219 moveto
61 224 108 232 140 237 curveto
stroke
146 238 -170.54 10.00 5.00 arrowhead
gsave 10 dict begin
87 242 moveto (green/0.4) 52 14.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
496 219 30 30 ellipse_path
stroke
496 219 34 34 ellipse_path
stroke
gsave 10 dict begin
496 220 moveto (3/0.8) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 3
newpath 36 214 moveto
62 211 110 206 138 205 curveto
227 200 382 210 456 216 curveto
stroke
462 216 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
261 217 moveto (blue/0.5) 45 14.00 -0.50 alignedtext
end grestore

%	0 -> 3
newpath 34 207 moveto
40 203 48 200 54 199 curveto
135 186 217 175 298 183 curveto
347 187 396 193 444 202 curveto
448 203 453 204 458 205 curveto
stroke
464 207 -161.57 10.00 5.00 arrowhead
gsave 10 dict begin
261 192 moveto (yellow/1.1) 59 14.00 -0.50 alignedtext
end grestore

%	5
gsave 10 dict begin
solid
172 82 30 30 ellipse_path
stroke
172 82 34 34 ellipse_path
stroke
gsave 10 dict begin
172 83 moveto (5/0.3) 28 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 5
newpath 21 198 moveto
25 172 35 128 54 111 curveto
70 97 103 90 129 86 curveto
stroke
138 85 173.66 10.00 5.00 arrowhead
gsave 10 dict begin
87 120 moveto (blue/1.2) 45 14.00 -0.50 alignedtext
end grestore

%	1 -> 1
newpath 184 371 moveto
188 382 184 393 172 393 curveto
163 393 159 387 159 379 curveto
stroke
160 371 97.13 10.00 5.00 arrowhead
gsave 10 dict begin
172 402 moveto (red/0.5) 39 14.00 -0.50 alignedtext
end grestore

%	1 -> 2
newpath 190 352 moveto
217 345 269 331 298 322 curveto
302 321 306 319 310 317 curveto
stroke
318 312 147.99 10.00 5.00 arrowhead
gsave 10 dict begin
261 352 moveto (green/0.3) 52 14.00 -0.50 alignedtext
end grestore

%	2 -> 3
newpath 351 298 moveto
376 291 420 278 444 266 curveto
451 262 458 257 465 251 curveto
stroke
472 244 135.00 10.00 5.00 arrowhead
gsave 10 dict begin
407 301 moveto (blue/0) 35 14.00 -0.50 alignedtext
end grestore

%	2 -> 3
newpath 340 286 moveto
347 271 358 249 370 243 curveto
391 232 425 226 453 223 curveto
stroke
462 222 173.66 10.00 5.00 arrowhead
gsave 10 dict begin
407 252 moveto (yellow/0.6) 59 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 448 675 a Fu(Fig.)15 b(2.)g(W)l(eigh)o(ted)g(automaton)f
(and)h(its)h Fh(\017)p Fu(-remo)o(v)m(al)83 977 y Fr(W)l(e)j(brie\015y)
f(outlined)h(in)f(the)h(previous)g(section)g(the)g(mathematical)d
(foundation)k(for)83 1037 y(w)o(eigh)o(ted)14 b(automata,)i(and)g(ho)o
(w)f(it)g(allo)o(ws)h(us)g(to)f(write)g(general)g(algorithms)g(that)h
(are)83 1097 y(indep)q(enden)o(t)d(of)h(the)f(underlying)g(algebra.)h
(Thanks)g(to)g(this)g(generalit)o(y)l(,)d(w)o(eigh)o(ts)i(ma)o(y)83
1157 y(b)q(e)j(n)o(um)o(b)q(ers,)f(but)h(also)h(strings,)f(sets,)g(or)h
(ev)o(en)e(regular)h(expressions.)g(Dep)q(ending)g(on)83
1217 y(the)k(algorithms,)f(some)g(restrictions)g(apply)h(to)g(the)g
(semirings)f(used.)g(F)l(or)i(instance,)83 1278 y(some)13
b(algorithms)h(require)f Fq(c)n(ommutative)19 b Fr(semirings,)12
b(meaning)h(that)i Fm(\012)f Fr(is)g(comm)o(uta-)83 1338
y(tiv)o(e;)h(others)h(require)f Fq(close)n(d)22 b Fr(semirings,)15
b(in)h(whic)o(h)f(in\014nite)h(addition)g(is)g(de\014ned)g(and)83
1398 y(b)q(eha)o(v)o(es)g(lik)o(e)e(\014nite)i(addition)g(with)g(resp)q
(ect)g(to)h(m)o(ultiplic)o(ation.)83 1562 y(Shortest-paths)23
b(algorithms)d(pla)o(y)h(an)h(essen)o(tial)e(role)h(in)g(applications,)
g(b)q(eing)h(used)83 1623 y(to)d(\014nd)f(the)g(\\b)q(est")i(solution)e
(in)g(the)g(set)h(of)f(p)q(ossible)h(solutions)f(represen)o(ted)g(b)o
(y)f(an)83 1683 y(automaton)23 b(\(for)g(instance,)e(the)i(b)q(est)g
(string)f(alignmen)o(t)f(or)i(the)f(b)q(est)h(recognition)83
1743 y(h)o(yp)q(othesis\),)e(as)h(w)o(e)g(shall)f(see)g(in)g(Section)h
(5.1.)f(Therefore,)g(w)o(e)g(dev)o(elop)q(ed)f(a)i(gen-)83
1803 y(eral)14 b(framew)o(ork)g(for)h(single-source)f(shortest-paths)j
(algorithms)d(based)h(on)h(semirings)83 1863 y(that)g(leads)f(to)g(a)g
(single)g(generic)f(algorithm)g([20].)h(This)g(generic)f(algorithm)g
(computes)83 1924 y(the)h(single-source)f(shortest)i(distance)f(when)g
(w)o(eigh)o(ts)f(are)h(n)o(um)o(b)q(ers,)e(strings,)i(or)g(sub-)83
1984 y(sets)i(of)g(a)g(set.)f(These)h(di\013eren)o(t)e(cases)i(are)g
(related)f(to)h(the)g(computation)e(of)i(minimal)83 2044
y(deterministic)c(w)o(eigh)o(ted)i(automata)i([21].)83
2208 y(Since)h(the)g(general)g(framew)o(ork)f(for)i(solving)g(all)f
(pairs)h(shortest-paths)h(problems)d(|)83 2269 y(closed)f(semirings)f
(|)h(is)g(compatible)f(with)h(the)g(abstract)i(notion)f(of)f(w)o(eigh)o
(ts)g(w)o(e)g(use,)83 2329 y(w)o(e)f(w)o(ere)h(able)f(to)h(include)f
(an)h(e\016cien)o(t)e(v)o(ersion)i(of)g(the)f(generic)g(algorithm)g(of)
h(Flo)o(yd-)83 2389 y(W)l(arshall)24 b([1,3])f(in)h(our)g(library)l(.)f
(Using)h(the)f(same)g(algorithm)g(and)i(co)q(de,)e(w)o(e)h(can)83
2449 y(pro)o(vide)16 b(the)h(all-pairs)g(shortest)g(distances)g(when)g
(w)o(eigh)o(ts)f(are)h(real)g(n)o(um)o(b)q(ers)e(repre-)83
2509 y(sen)o(ting,)i(for)i(example,)c(probabilities,)i(but)h(also)g
(when)g(they)g(are)g(strings)g(or)h(regular)83 2570 y(expressions.)14
b(This)h(last)f(case)h(is)f(useful)g(to)h(generate)g(e\016cien)o(tly)d
(a)j(regular)f(expression)83 2630 y(equiv)m(alen)o(t)g(to)h(a)h(giv)o
(en)f(automaton.)g(The)g(Flo)o(yd-W)l(arshall)g(algorithm)f(is)h(also)h
(useful)83 2690 y(in)g(the)g(general)g Fo(\017)p Fr(-remo)o(v)m(al)e
(algorithm)i(w)o(e)f(will)h(no)o(w)g(presen)o(t)g(as)h(an)f(example.)
885 2856 y(5)p eop
%%Page: 6 6
6 5 bop 212 63 a Fr(1)50 b Fo(M)333 70 y Fk(\017)364
63 y Fm( )13 b Fo(M)474 70 y Fk(i)488 63 y Fm(j)502 71
y Fl(f)p Fk(\017)p Fl(g)212 153 y Fr(2)50 b Fo(M)333
160 y Fk(o)366 153 y Fm( )14 b Fo(M)477 160 y Fk(i)491
153 y Fm(j)505 172 y Fr(\006)540 147 y Fd(\003)558 172
y Fl(\000f)p Fk(\017)p Fl(g)212 244 y Fr(3)50 b Fo(G)324
251 y Fk(\017)355 244 y Fm( )13 b Fc(Closure)o Fr(\()p
Fo(M)692 251 y Fk(\017)709 244 y Fr(\))212 334 y(4)50
b Fs(for)16 b Fo(p)f Fm( )e Fr(1)k(to)g Fm(j)p Fo(V)11
b Fm(j)212 424 y Fr(5)100 b Fs(do)50 b(for)16 b Fr(eac)o(h)g
Fo(e)d Fm(2)i Fr(T)l(rans)843 431 y Fk(G)870 435 y Fj(\017)888
424 y Fr([)p Fo(p)p Fr(])212 515 y(6)209 b Fs(do)50 b(for)16
b Fr(eac)o(h)g Fo(t)d Fm(2)h Fr(T)l(rans)947 522 y Fk(M)981
527 y Fj(i)996 515 y Fr([Next)o(\()p Fo(e)p Fr(\)])c
Fm(^)h Fo(i)p Fr(\()p Fo(t)p Fr(\))i Fm(6)p Fr(=)h Fo(\017)212
605 y Fr(7)318 b Fs(do)50 b Fo(t)681 587 y Fl(0)706 605
y Fm( )14 b Fc(FindTrans)o Fr(\()p Fo(i)p Fr(\()p Fo(t)p
Fr(\))p Fo(;)8 b Fr(Next)n(\()p Fo(t)p Fr(\))p Fo(;)g
Fr(T)l(rans)1449 612 y Fk(M)1483 616 y Fj(o)1502 605
y Fr([)p Fo(p)p Fr(]\))212 695 y(8)427 b Fo(w)q Fr(\()p
Fo(t)736 677 y Fl(0)747 695 y Fr(\))14 b Fm( )g Fo(w)q
Fr(\()p Fo(t)917 677 y Fl(0)928 695 y Fr(\))d Fm(\010)g
Fo(w)q Fr(\()p Fo(t)p Fr(\))g Fm(\012)g Fo(w)q Fr(\()p
Fo(e)p Fr(\))362 791 y Fu(Fig.)k(3.)f(Pseudo)q(co)q(de)j(of)d(the)i
(general)f Fh(\017)p Fu(-remo)o(v)m(al)h(algorithm.)83
898 y Fq(3.2)50 b(Example:)18 b Fo(\017)p Fq(-R)n(emoval)83
1074 y Fr(Figure)e(3)h(sho)o(ws)g(the)f(pseudo)q(co)q(de)i(of)f(a)g
(generic)e Fo(\017)p Fr(-remo)o(v)m(al)g(algorithm)g(for)i(w)o(eigh)o
(ted)83 1134 y(automata.)e(Giv)o(en)g(a)h(w)o(eigh)o(ted)f(automaton)h
Fo(M)992 1141 y Fk(i)1006 1134 y Fr(,)f(the)h(algorithm)e(returns)i(an)
g(equiv)m(a-)83 1194 y(len)o(t)f(w)o(eigh)o(ted)f(automaton)j
Fo(M)675 1201 y Fk(o)710 1194 y Fr(without)f Fo(\017)p
Fr(-transitions.)f(T)l(rans)1302 1201 y Fk(M)1342 1194
y Fr([)p Fo(s)p Fr(])g(denotes)g(the)h(set)83 1255 y(of)d(transitions)h
(lea)o(ving)e(state)i Fo(s)f Fr(in)f(automaton)i Fo(M)5
b Fr(,)13 b(Next)o(\()p Fo(t)p Fr(\))g(denotes)g(the)g(destination)83
1315 y(state)k(of)h(transition)f Fo(t)p Fr(,)g Fo(i)p
Fr(\()p Fo(t)p Fr(\))f(denotes)h(its)g(input)g(lab)q(el,)g(and)g
Fo(w)q Fr(\()p Fo(t)p Fr(\))g(its)g(w)o(eigh)o(t.)f(Lines)h(1)83
1375 y(and)d(2)g(extract)f(from)f Fo(M)536 1382 y Fk(i)564
1375 y Fr(the)h(subautomaton)i Fo(M)1010 1382 y Fk(\017)1040
1375 y Fr(con)o(taining)e(all)g Fo(\017)g Fr(transitions)h(in)g
Fo(M)1713 1382 y Fk(i)83 1435 y Fr(and)i(the)f(subautomaton)h
Fo(M)626 1442 y Fk(o)661 1435 y Fr(con)o(taining)g(all)f(the)g(non-)p
Fo(\017)h Fr(transitions.)f(Line)g(3)h(applies)83 1495
y(the)e(general)f(all-pairs)h(shortest)g(distance)g(algorithm)f
Fc(Closure)f Fr(to)i Fo(M)1430 1502 y Fk(\017)1461 1495
y Fr(to)g(deriv)o(e)e(the)83 1555 y Fo(\017)p Fr(-closure)i
Fo(G)318 1562 y Fk(\017)335 1555 y Fr(.)g(The)g(nested)g(lo)q(ops)i
(starting)e(in)h(lines)e(4,)h(5)h(and)g(6)g(iterate)e(o)o(v)o(er)h(all)
g(pairs)83 1616 y(of)j(an)g Fo(\017)p Fr(-closure)f(transition)g
Fo(e)g Fr(and)h(a)g(non-)p Fo(\017)g Fr(transition)g
Fo(t)f Fr(suc)o(h)g(that)h(the)f(destination)83 1676
y(of)e Fo(e)f Fr(is)h(the)f(source)h(of)g Fo(t)p Fr(.)f(Line)g(7)h(lo)q
(oks)g(in)g Fo(M)913 1683 y Fk(o)946 1676 y Fr(for)g(a)g(transition)f
Fo(t)1293 1658 y Fl(0)1318 1676 y Fr(with)h(lab)q(el)f
Fo(i)p Fr(\()p Fo(t)p Fr(\))g(from)83 1736 y Fo(e)p Fr('s)19
b(source)g(from)g Fo(t)p Fr('s)g(destination)g(if)g(it)g(exists,)f(or)i
(creates)f(a)h(new)g(one)f(with)h(w)o(eigh)o(t)83 1786
y(\026)83 1796 y(0)d(if)f(it)g(do)q(es)h(not.)f(This)h(transition)g(is)
f(the)g(result)g(of)h(extending)f Fo(t)g Fr(\\bac)o(kw)o(ards")h(with)
83 1856 y(the)22 b Fo(M)220 1863 y Fk(i)256 1856 y Fo(\017)p
Fr(-path)g(represen)o(ted)e(b)o(y)i Fo(\017)p Fr(-closure)f(transition)
h Fo(e)p Fr(.)f(Its)g(w)o(eigh)o(t,)g(up)q(dated)h(in)83
1917 y(line)17 b(8,)h(is)g(the)g(semiring)f(sum)g(of)h(suc)o(h)g
(extended)g(transitions)g(with)g(a)h(giv)o(en)e(source,)83
1977 y(destination)f(and)h(lab)q(el.)83 2093 y(In)f(most)g(sp)q(eec)o
(h-pro)q(cessing)g(applications,)g(the)g(appropriate)h(w)o(eigh)o(t)e
(algebra)i(is)f(the)83 2153 y Fq(tr)n(opic)n(al)e(semiring)k
Fr([38].)12 b(W)l(eigh)o(ts)h(are)g(p)q(ositiv)o(e)f(real)g(n)o(um)o(b)
q(ers)g(represen)o(ting)g(negativ)o(e)83 2213 y(logarithms)e(of)h
(probabilities.)f(W)l(eigh)o(ts)g(along)i(a)f(path)h(are)f(added;)f
(when)h(sev)o(eral)f(paths)83 2273 y(corresp)q(ond)16
b(to)g(the)f(same)f(string,)h(the)g(w)o(eigh)o(t)g(of)h(the)f(string)g
(is)g(the)g(minim)n(um)d(of)j(the)83 2333 y(w)o(eigh)o(ts)22
b(of)h(those)f(paths.)h(Figure)f(2)h(illustrates)f(the)g(application)g
(of)h Fo(\017)p Fr(-remo)o(v)m(al)e(to)83 2394 y(w)o(eigh)o(ted)e
(automata)i(o)o(v)o(er)e(the)h(tropical)g(semiring.)e(The)i(example)e
(sho)o(ws)j(that)g(the)83 2454 y(new)13 b(algorithm)g(generalizes)f
(the)h(classical)g(un)o(w)o(eigh)o(ted)f(algorithm)h(b)o(y)g(ensuring)g
(that)83 2514 y(the)j(w)o(eigh)o(t)g(of)g(an)o(y)g(string)h(accepted)e
(b)o(y)h(the)g(automaton)h(is)f(preserv)o(ed)f(in)h(the)g
Fo(\017)p Fr(-free)83 2574 y(result.)83 2690 y(As)e(noted)h(b)q(efore,)
f(the)g(computation)f(of)i(the)f Fo(\017)p Fr(-closure)g(requires)f
(the)h(computation)g(of)885 2856 y(6)p eop
%%Page: 7 7
7 6 bop 83 42 a Fr(the)13 b(all-pairs)f(shortest)i(distances)f(in)f
Fo(M)835 49 y Fk(\017)852 42 y Fr(.)g(In)g(the)h(case)g(of)g(idemp)q
(oten)o(t)e(semirings)g(suc)o(h)83 102 y(as)22 b(the)f(tropical)g
(semiring,)e(the)h(most)h(e\016cien)o(t)e(algorithm)h(a)o(v)m(ailable)h
(is)g(Johnson's)83 162 y(algorithm)i(whic)o(h)g(is)g(based)h(on)h(the)e
(algorithms)g(of)h(Dijkstra)g(and)g(Bellman-F)l(ord)83
222 y([3].)19 b(The)g(running)h(time)e(complexit)o(y)e(of)k(Johnson's)h
(algorithm)e(is)g Fo(O)q Fr(\()p Fm(j)p Fo(Q)p Fm(j)1510
204 y Ft(2)1538 222 y Fr(log)9 b Fm(j)p Fo(Q)p Fm(j)k
Fr(+)83 282 y Fm(j)p Fo(Q)p Fm(jj)p Fo(E)s Fm(j)p Fr(\))h(when)i(using)
f(Fib)q(onacci)g(heaps,)g(but)h(w)o(e)e(use)i(instead)f(the)g(more)f
(general)h(but)83 342 y(less)22 b(e\016cien)o(t)f(Flo)o(yd-W)l(arshall)
i(algorithm)e(b)q(ecause)i(it)g(supp)q(orts)h(non-idemp)q(oten)o(t)83
403 y(closed)17 b(semirings.)e(When)j Fo(M)648 410 y
Fk(\017)682 403 y Fr(is)f(acyclic,)e(w)o(e)i(use)g(the)h(linear)e(time)
f(top)q(ological-sort)83 463 y(algorithm,)g(whic)o(h)g(also)i(w)o(orks)
g(with)f(non-idemp)q(oten)o(t)f(semirings)g([20].)83
611 y(Our)j(implem)o(en)o(tation)d(of)k(the)f(algorithm)f(is)h(in)g
(fact)g(somewhat)g(more)f(complex:)e(w)o(e)83 671 y(\014rst)24
b(decomp)q(ose)f Fo(M)491 678 y Fk(\017)531 671 y Fr(in)o(to)g
(strongly)h(connected)e(comp)q(onen)o(ts,)h(apply)g(the)g(Flo)o(yd-)83
731 y(W)l(arshall)16 b(algorithm)f(to)i(eac)o(h)e(comp)q(onen)o(t,)g
(and)h(then)g(apply)g(the)g(acyclic)e(algorithm)83 791
y(to)j(the)f(comp)q(onen)o(t)f(graph)i(of)g Fo(M)717
798 y Fk(\017)749 791 y Fr(to)g(compute)e(the)h(\014nal)g(result.)83
939 y(Our)e(c)o(hoice)e(of)i(the)f(most)g(general)h(implem)o(e)o(n)o
(tation)d(w)o(as)j(also)g(guided)g(b)o(y)f(exp)q(erimen-)83
999 y(tation:)i(in)g(practice,)f(eac)o(h)g(strongly)i(connected)e(comp)
q(onen)o(t)g(of)i Fo(M)1364 1006 y Fk(\017)1395 999 y
Fr(is)f(small)f(relativ)o(e)83 1059 y(to)22 b Fo(M)195
1066 y Fk(\017)211 1059 y Fr('s)f(o)o(v)o(erall)f(size,)g(and)i
(therefore)f(the)g(use)g(of)h(the)f(Flo)o(yd-W)l(arshall)g(algorithm)83
1119 y(do)q(es)c(not)g(seriously)e(impact)g(e\016ciency)l(.)83
1492 y Fq(3.3)50 b(L)n(azy)16 b(A)o(lgorithms)83 1699
y Fr(Most)e(of)h(the)e(library's)g(main)g(functions)h(ha)o(v)o(e)f
(lazy)h(implem)o(en)n(tations,)e(meaning)g(that)83 1760
y(their)k(results)h(are)g(computed)e(only)i(as)g(required)f(b)o(y)g
(the)h(op)q(erations)h(using)f(those)g(re-)83 1820 y(sults.)c(Lazy)i
(execution)d(is)i(v)o(ery)e(adv)m(an)o(tageous)k(when)e(a)g(large)g(in)
o(termediate)d(automa-)83 1880 y(ton)19 b(is)f(constructed)g(in)g(an)h
(application)f(but)h(only)f(a)h(small)e(part)i(of)f(the)h(automaton)83
1940 y(needs)f(to)h(b)q(e)f(visited)f(for)h(an)o(y)g(particular)g
(input)g(to)h(the)f(application.)f(F)l(or)i(instance,)83
2000 y(in)g(a)g(sp)q(eec)o(h)g(recognizer,)f(sev)o(eral)g(w)o(eigh)o
(ted)g(transducers)i(|)f(the)f(language)j(mo)q(del,)83
2061 y(the)14 b(dictionary)l(,)f(the)h(con)o(text-dep)q(enden)o(t)g
(acoustic)g(mo)q(dels)f(|)h(are)h(comp)q(osed)f(in)o(to)f(a)83
2121 y(p)q(oten)o(tially)h(h)o(uge)i(transducer,)f(but)h(only)f(a)h(v)o
(ery)e(small)g(part)i(of)g(it)f(is)g(searc)o(hed)g(when)83
2181 y(pro)q(cessing)i(a)g(particular)f(utterance)f([31].)83
2329 y(The)k(main)f(precondition)g(for)h(a)h(function)f(to)g(ha)o(v)o
(e)f(a)h(lazy)g(implem)o(en)n(tation)e(is)h(that)83 2389
y(the)f(function)f(b)q(e)h(expressible)e(as)j(a)f Fq(lo)n(c)n(al)22
b Fr(computation)16 b(rule,)g(in)h(the)f(sense)h(that)g(the)83
2449 y(transitions)c(lea)o(ving)e(a)i(particular)e(state)i(in)f(the)g
(result)f(b)q(e)i(determined)d(solely)h(b)o(y)h(their)83
2509 y(source)i(state)g(and)g(information)f(from)f(the)i(function's)f
(argumen)o(ts)g(asso)q(ciated)h(to)g(that)83 2570 y(state.)j(F)l(or)h
(instance,)e(comp)q(osition)h(has)h(a)g(lazy)e(impleme)o(n)o(tation,)e
(as)k(w)o(e)f(will)f(see)h(in)83 2630 y(Section)g(3.4)g(b)q(elo)o(w.)g
(Similarly)l(,)c(union,)k(concatenation)g(and)h(Kleene)e(closure)g(can)
i(b)q(e)83 2690 y(computed)d(on)i(demand,)d(and)j(so)g(can)g
(determinizati)o(on.)885 2856 y(7)p eop
%%Page: 8 8
8 7 bop 455 140 a @beginspecial 59 @llx 358 @lly 554
@urx 435 @ury 2160 @rwi @setspecial
%%BeginDocument: aut10.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
58 357 496 78 boxprim clip newpath
59 358 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
247 25 moveto () 0 14.00 -0.50 alignedtext
247 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 54 18 18 ellipse_path
stroke
gsave 10 dict begin
18 55 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
120 54 18 18 ellipse_path
stroke
gsave 10 dict begin
120 55 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 54 moveto
52 54 76 54 94 54 curveto
stroke
102 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
69 63 moveto (a:a) 16 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
236 54 18 18 ellipse_path
stroke
gsave 10 dict begin
236 55 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 138 54 moveto
158 54 188 54 210 54 curveto
stroke
218 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
178 63 moveto (b:) 29 14.00 -0.50 alignedtext
14.00 /Symbol set_font
187 63 moveto (e) 29 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	3
gsave 10 dict begin
solid
352 54 18 18 ellipse_path
stroke
gsave 10 dict begin
352 55 moveto (3	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 254 54 moveto
274 54 304 54 326 54 curveto
stroke
334 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
294 63 moveto (c:) 28 14.00 -0.50 alignedtext
14.00 /Symbol set_font
303 63 moveto (e) 28 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	4
gsave 10 dict begin
solid
472 54 18 18 ellipse_path
stroke
472 54 22 22 ellipse_path
stroke
gsave 10 dict begin
472 55 moveto (4	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	3 -> 4
newpath 370 54 moveto
390 54 419 54 442 54 curveto
stroke
450 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
410 63 moveto (d:d) 29 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 148 x @beginspecial 66 @llx 358 @lly 547
@urx 435 @ury 2160 @rwi @setspecial
%%BeginDocument: aut11.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
65 357 482 78 boxprim clip newpath
66 358 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
240 25 moveto () 0 14.00 -0.50 alignedtext
240 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 54 18 18 ellipse_path
stroke
gsave 10 dict begin
18 55 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
122 54 18 18 ellipse_path
stroke
gsave 10 dict begin
122 55 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 54 moveto
52 54 77 54 96 54 curveto
stroke
104 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
70 63 moveto (a:d) 17 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
238 54 18 18 ellipse_path
stroke
gsave 10 dict begin
238 55 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 140 54 moveto
160 54 190 54 212 54 curveto
stroke
220 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
180 63 moveto (:e) 28 14.00 -0.50 alignedtext
14.00 /Symbol set_font
171 63 moveto (e) 28 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	3
gsave 10 dict begin
solid
346 54 18 18 ellipse_path
stroke
346 54 22 22 ellipse_path
stroke
gsave 10 dict begin
346 55 moveto (3	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 256 54 moveto
272 54 296 54 316 54 curveto
stroke
324 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
290 63 moveto (d:a) 17 14.00 -0.50 alignedtext
end grestore

%	4
gsave 10 dict begin
invis
458 54 18 18 ellipse_path
stroke
458 54 22 22 ellipse_path
stroke
gsave 10 dict begin
458 55 moveto (4	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	3 -> 4
gsave 10 dict begin
invis
newpath 368 54 moveto
385 54 409 54 428 54 curveto
stroke
436 54 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
402 63 moveto (d:a) 17 14.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 636 378 a Fu(Fig.)15 b(4.)f(Comp)q(osition)i(Inputs)455
1233 y @beginspecial 72 @llx 357 @lly 406 @urx 647 @ury
2160 @rwi @setspecial
%%BeginDocument: aut13.eps
1 setlinejoin
/M  { moveto } bind def /S { show  } bind def
/R { rmoveto } bind def /L { lineto } bind def
/B { newpath 0 0 M 0 1 L 1 1 L 1 0 L closepath } bind def
/CS { closepath stroke } bind def
/S {
    /fixwidth exch def
    dup length /nchars exch def
    dup stringwidth pop
    fixwidth exch sub nchars div
    exch 0 exch ashow
} def
/bwproc {
	rgbproc
	dup length 3 idiv string 0 3 0
	5 -1 roll {
	add 2 1 roll 1 sub dup 0 eq
	{ pop 3 idiv 3 -1 roll dup 4 -1 roll dup
	  3 1 roll 5 -1 roll put 1 add 3 0 }
	{ 2 1 roll } ifelse
	} forall
	pop pop pop
} def
systemdict /colorimage known not {
	/colorimage {
		pop
		pop
		/rgbproc exch def
		{ bwproc } image
	} def
} if
1 1 scale
0 setlinewidth
/drawtri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
0 setgray
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
stroke
} bind def
/filltri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
fill
} bind def
/cliptri {
/y3 exch def
/x3 exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
0 setgray
newpath
x1 y1 moveto
x2 y2 lineto
x3 y3 lineto
closepath
clip
} bind def
/imgscanrgb {
gsave
translate
/scandy exch def
/scandx exch def
/istr scandx 3 mul string def
scandx scandy scale
scandx scandy 8
[scandx 0 0 scandy neg 0 scandy]
{currentfile istr readhexstring pop}
false 3
colorimage
grestore
} bind def
/imgscanbw {
gsave
translate
/scandy exch def
/scandx exch def
/istr scandx string def
scandx scandy scale
scandx scandy 8
[scandx 0 0 scandy neg 0 scandy]
{currentfile istr readhexstring pop}
image
grestore
} bind def
/showcaseisoencoding [
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign
/dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus
/comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon
/less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft
/backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft
/bar /braceright /asciitilde /guilsinglright
/fraction /florin /quotesingle /quotedblleft
/guilsinglleft /fi /fl /endash
/dagger /daggerdbl /bullet /quotesinglbase
/quotedblbase /quotedblright /ellipsis /trademark
/dotlessi /grave /acute /circumflex
/tilde /macron /breve /dotaccent
/dieresis /perthousand /ring /cedilla
/Ydieresis /hungarumlaut /ogonek /caron
/emdash /exclamdown /cent /sterling
/currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde
/Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis
/Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute
/Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde
/adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis
/igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute
/ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex
/udieresis /yacute /thorn /ydieresis ] def
/showcasedingbatencoding [
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef
/.notdef /a1 /a2 /a202 /a3 /a4 /a5 /a119 /a118 /a117
/a11 /a12 /a13 /a14 /a15 /a16 /a105 /a17 /a18 /a19
/a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a6 /a7
/a8 /a9 /a10 /a29
/a30 /a31 /a32 /a33 /a34 /a35 /a36 /a37 /a38 /a39
/a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59
/a60 /a61 /a62 /a63 /a64 /a65 /a66 /a67 /a68 /a69
/a70 /a71 /a72 /a73 /a74 /a203 /a75 /a204 /a76 /a77 /a78
/a79 /a81 /a82 /a83 /a84 /a97 /a98 /a99 /a100 /.notdef
/a205 /a85 /a206 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93
/a94 /a95 /a96
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /a101 /a102 /a103 /a104 /a106 /a107 /a108
/a112 /a111 /a110 /a109
/a120 /a121 /a122 /a123 /a124 /a125 /a126 /a127 /a128 /a129
/a130 /a131 /a132 /a133 /a134 /a135 /a136 /a137 /a138 /a139
/a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159
/a160 /a161 /a163 /a164 /a196 /a165 /a192 /a166 /a167 /a168
/a169 /a170 /a171 /a172 /a173 /a162 /a174 /a175 /a176 /a177
/a178 /a179 /a193 /a180 /a199 /a181 /a200 /a182 /.notdef
/a201 /a183 /a184 /a197 /a185 /a194 /a198 /a186 /a195 /a187
/a188 /a189 /a190 /a191 /.notdef
] def
/Courier-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding showcaseisoencoding def
  currentdict
end
/Courier-Bold-SHOWISO exch definefont pop
/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding showcaseisoencoding def
  currentdict
end
/Times-Roman-SHOWISO exch definefont pop
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
end
/Symbol-SHOWISO exch definefont pop
/newfont 10 dict def
newfont begin

 /FontType 3 def
 /FontMatrix [1 0 0 1 0 0] def
 /FontBBox [0 0 1 1] def
 /Encoding 256 array def
 0 1 255 {Encoding exch /.notdef put} for

 /CharProcs 1 dict def
 CharProcs begin
 /.notdef {} def

end

 /BuildChar {
  1 0
  0 0 1 1
  setcachedevice
  exch begin
  Encoding exch get
  CharProcs exch get
  end
  exec
 } def
end
/PatternFont newfont definefont pop

/#copies 1 def
gsave
gsave
1.000000 setlinewidth
matrix currentmatrix
[15 0 0 15 87 627] concat
newpath
0 0 1 0 360 arc
0 0 0 setrgbcolor
closepath setmatrix stroke
grestore
gsave
1.000000 setlinewidth
matrix currentmatrix
[15 0 0 15 191 626] concat
newpath
0 0 1 0 360 arc
0 0 0 setrgbcolor
closepath setmatrix stroke
grestore
gsave
0 0 0 setrgbcolor
1.000000 setlinewidth
newpath
309.99 635.5 M
309.492 636.303 L
308.936 637.084 L
308.323 637.838 L
307.655 638.558 L
306.935 639.239 L
306.166 639.874 L
305.352 640.459 L
304.5 640.99 L
303.614 641.463 L
302.7 641.875 L
301.766 642.223 L
300.816 642.506 L
299.859 642.725 L
298.899 642.879 L
297.944 642.97 L
297 643 L
297 643 L
296.056 642.97 L
295.101 642.879 L
294.141 642.725 L
293.184 642.506 L
292.234 642.223 L
291.3 641.875 L
290.386 641.463 L
289.5 640.99 L
288.648 640.459 L
287.834 639.874 L
287.065 639.239 L
286.345 638.558 L
285.677 637.838 L
285.064 637.084 L
284.508 636.303 L
284.01 635.5 L
284.01 635.5 L
283.563 634.667 L
283.165 633.795 L
282.818 632.887 L
282.529 631.948 L
282.3 630.984 L
282.134 630.001 L
282.034 629.004 L
282 628 L
282.034 626.996 L
282.134 625.999 L
282.3 625.016 L
282.529 624.052 L
282.818 623.113 L
283.165 622.205 L
283.563 621.333 L
284.01 620.5 L
284.01 620.5 L
284.508 619.697 L
285.064 618.916 L
285.677 618.162 L
286.345 617.442 L
287.065 616.761 L
287.834 616.126 L
288.648 615.541 L
289.5 615.01 L
290.386 614.537 L
291.3 614.125 L
292.234 613.777 L
293.184 613.494 L
294.141 613.275 L
295.101 613.121 L
296.056 613.03 L
297 613 L
297 613 L
297.944 613.03 L
298.899 613.121 L
299.859 613.275 L
300.816 613.494 L
301.766 613.777 L
302.7 614.125 L
303.614 614.537 L
304.5 615.01 L
305.352 615.541 L
306.166 616.126 L
306.935 616.761 L
307.655 617.442 L
308.323 618.162 L
308.936 618.916 L
309.492 619.697 L
309.99 620.5 L
309.99 620.5 L
310.437 621.333 L
310.835 622.205 L
311.182 623.113 L
311.471 624.052 L
311.7 625.016 L
311.866 625.999 L
311.966 626.996 L
312 628 L
311.966 629.004 L
311.866 630.001 L
311.7 630.984 L
311.471 631.948 L
311.182 632.887 L
310.835 633.795 L
310.437 634.667 L
309.99 635.5 L
closepath
stroke
grestore
gsave
1.000000 setlinewidth
matrix currentmatrix
[15 0 0 15 191 536] concat
newpath
0 0 1 0 360 arc
0 0 0 setrgbcolor
closepath setmatrix stroke
grestore
gsave
0 0 0 setrgbcolor
1.000000 setlinewidth
newpath
309.99 545.5 M
309.492 546.303 L
308.936 547.084 L
308.323 547.838 L
307.655 548.558 L
306.935 549.239 L
306.166 549.874 L
305.352 550.459 L
304.5 550.99 L
303.614 551.463 L
302.7 551.875 L
301.766 552.223 L
300.816 552.506 L
299.859 552.725 L
298.899 552.879 L
297.944 552.97 L
297 553 L
297 553 L
296.056 552.97 L
295.101 552.879 L
294.141 552.725 L
293.184 552.506 L
292.234 552.223 L
291.3 551.875 L
290.386 551.463 L
289.5 550.99 L
288.648 550.459 L
287.834 549.874 L
287.065 549.239 L
286.345 548.558 L
285.677 547.838 L
285.064 547.084 L
284.508 546.303 L
284.01 545.5 L
284.01 545.5 L
283.563 544.667 L
283.165 543.795 L
282.818 542.887 L
282.529 541.948 L
282.3 540.984 L
282.134 540.001 L
282.034 539.004 L
282 538 L
282.034 536.996 L
282.134 535.999 L
282.3 535.016 L
282.529 534.052 L
282.818 533.113 L
283.165 532.205 L
283.563 531.333 L
284.01 530.5 L
284.01 530.5 L
284.508 529.697 L
285.064 528.916 L
285.677 528.162 L
286.345 527.442 L
287.065 526.761 L
287.834 526.126 L
288.648 525.541 L
289.5 525.01 L
290.386 524.537 L
291.3 524.125 L
292.234 523.777 L
293.184 523.494 L
294.141 523.275 L
295.101 523.121 L
296.056 523.03 L
297 523 L
297 523 L
297.944 523.03 L
298.899 523.121 L
299.859 523.275 L
300.816 523.494 L
301.766 523.777 L
302.7 524.125 L
303.614 524.537 L
304.5 525.01 L
305.352 525.541 L
306.166 526.126 L
306.935 526.761 L
307.655 527.442 L
308.323 528.162 L
308.936 528.916 L
309.492 529.697 L
309.99 530.5 L
309.99 530.5 L
310.437 531.333 L
310.835 532.205 L
311.182 533.113 L
311.471 534.052 L
311.7 535.016 L
311.866 535.999 L
311.966 536.996 L
312 538 L
311.966 539.004 L
311.866 540.001 L
311.7 540.984 L
311.471 541.948 L
311.182 542.887 L
310.835 543.795 L
310.437 544.667 L
309.99 545.5 L
closepath
stroke
grestore
gsave
1.000000 setlinewidth
matrix currentmatrix
[15 0 0 15 191 446] concat
newpath
0 0 1 0 360 arc
0 0 0 setrgbcolor
closepath setmatrix stroke
grestore
gsave
0 0 0 setrgbcolor
1.000000 setlinewidth
newpath
309.99 455.5 M
309.492 456.303 L
308.936 457.084 L
308.323 457.838 L
307.655 458.558 L
306.935 459.239 L
306.166 459.874 L
305.352 460.459 L
304.5 460.99 L
303.614 461.463 L
302.7 461.875 L
301.766 462.223 L
300.816 462.507 L
299.859 462.725 L
298.899 462.879 L
297.944 462.97 L
297 463 L
297 463 L
296.056 462.97 L
295.101 462.879 L
294.141 462.725 L
293.184 462.506 L
292.234 462.223 L
291.3 461.875 L
290.386 461.463 L
289.5 460.99 L
288.648 460.459 L
287.834 459.874 L
287.065 459.239 L
286.345 458.558 L
285.677 457.838 L
285.064 457.084 L
284.508 456.303 L
284.01 455.5 L
284.01 455.5 L
283.563 454.667 L
283.165 453.795 L
282.818 452.887 L
282.529 451.948 L
282.3 450.984 L
282.134 450.001 L
282.034 449.004 L
282 448 L
282.034 446.996 L
282.134 445.999 L
282.3 445.016 L
282.529 444.052 L
282.818 443.113 L
283.165 442.205 L
283.563 441.333 L
284.01 440.5 L
284.01 440.5 L
284.508 439.697 L
285.064 438.916 L
285.677 438.162 L
286.345 437.442 L
287.065 436.761 L
287.834 436.126 L
288.648 435.541 L
289.5 435.01 L
290.386 434.537 L
291.3 434.125 L
292.234 433.777 L
293.184 433.494 L
294.141 433.275 L
295.101 433.121 L
296.056 433.03 L
297 433 L
297 433 L
297.944 433.03 L
298.899 433.121 L
299.859 433.275 L
300.816 433.494 L
301.766 433.777 L
302.7 434.125 L
303.614 434.537 L
304.5 435.01 L
305.352 435.541 L
306.166 436.126 L
306.935 436.761 L
307.655 437.442 L
308.323 438.162 L
308.936 438.916 L
309.492 439.697 L
309.99 440.5 L
309.99 440.5 L
310.437 441.333 L
310.835 442.205 L
311.182 443.113 L
311.471 444.052 L
311.7 445.016 L
311.866 445.999 L
311.966 446.996 L
312 448 L
311.966 449.004 L
311.866 450.001 L
311.7 450.984 L
311.471 451.948 L
311.182 452.887 L
310.835 453.795 L
310.437 454.667 L
309.99 455.5 L
closepath
stroke
grestore
gsave
0 0 0 setrgbcolor
1.000000 setlinewidth
newpath
403.99 379.5 M
403.492 380.303 L
402.936 381.084 L
402.323 381.838 L
401.655 382.558 L
400.935 383.239 L
400.166 383.874 L
399.352 384.459 L
398.5 384.99 L
397.614 385.463 L
396.7 385.875 L
395.766 386.223 L
394.816 386.506 L
393.859 386.725 L
392.899 386.879 L
391.944 386.97 L
391 387 L
391 387 L
390.055 386.97 L
389.101 386.879 L
388.141 386.725 L
387.184 386.506 L
386.234 386.223 L
385.3 385.875 L
384.386 385.463 L
383.5 384.99 L
382.648 384.459 L
381.834 383.874 L
381.065 383.239 L
380.345 382.558 L
379.677 381.838 L
379.064 381.084 L
378.508 380.303 L
378.01 379.5 L
378.01 379.5 L
377.563 378.667 L
377.165 377.795 L
376.818 376.887 L
376.529 375.948 L
376.3 374.984 L
376.134 374.001 L
376.034 373.004 L
376 372 L
376.034 370.996 L
376.134 369.999 L
376.3 369.016 L
376.529 368.052 L
376.818 367.113 L
377.164 366.205 L
377.563 365.333 L
378.01 364.5 L
378.01 364.5 L
378.508 363.697 L
379.064 362.916 L
379.677 362.162 L
380.345 361.442 L
381.065 360.762 L
381.834 360.126 L
382.648 359.541 L
383.5 359.01 L
384.386 358.537 L
385.3 358.125 L
386.234 357.777 L
387.184 357.494 L
388.141 357.275 L
389.101 357.121 L
390.056 357.03 L
391 357 L
391 357 L
391.944 357.03 L
392.899 357.121 L
393.859 357.275 L
394.816 357.494 L
395.766 357.777 L
396.7 358.125 L
397.614 358.537 L
398.5 359.01 L
399.352 359.541 L
400.166 360.126 L
400.935 360.761 L
401.655 361.442 L
402.323 362.162 L
402.936 362.916 L
403.492 363.697 L
403.99 364.5 L
403.99 364.5 L
404.437 365.333 L
404.835 366.205 L
405.182 367.113 L
405.471 368.052 L
405.7 369.016 L
405.866 369.999 L
405.966 370.996 L
406 372 L
405.966 373.004 L
405.866 374.001 L
405.7 374.984 L
405.471 375.948 L
405.182 376.887 L
404.835 377.795 L
404.437 378.667 L
403.99 379.5 L
closepath
stroke
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 78 616.5] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
76 614.5 M 76 636.929 L 104.5 636.929 L 104.5 614.5 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 78 616.5] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (0,0) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 179 617] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
177 615 M 177 637.429 L 205.5 637.429 L 205.5 615 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 179 617] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (1,1) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 286 619] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
284 617 M 284 639.429 L 312.5 639.429 L 312.5 617 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 286 619] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (1,2) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 180 527] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
178 525 M 178 547.429 L 206.5 547.429 L 206.5 525 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 180 527] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (2,1) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 286 528] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
284 526 M 284 548.429 L 312.5 548.429 L 312.5 526 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 286 528] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (2,2) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 180 438] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
178 436 M 178 458.429 L 206.5 458.429 L 206.5 436 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 180 438] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (3,1) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 286 439] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
284 437 M 284 459.429 L 312.5 459.429 L 312.5 437 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 286 439] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (3,2) 22.5 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 380 363] concat
newpath
0 0 M 0 18 L 24.5 18 L 24.5 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
378 361 M 378 383.429 L 406.5 383.429 L 406.5 361 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 380 363] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (4) 9 S
9 3.42857 M (,3) 13.5 S
setmatrix
grestore
gsave
0 0 0 setrgbcolor
1.000000 setlinewidth
newpath
400.526 377.5 M
400.161 378.089 L
399.753 378.662 L
399.304 379.215 L
398.814 379.743 L
398.285 380.242 L
397.721 380.708 L
397.125 381.137 L
396.5 381.526 L
395.85 381.873 L
395.18 382.175 L
394.495 382.43 L
393.798 382.638 L
393.096 382.798 L
392.393 382.911 L
391.693 382.978 L
391 383 L
391 383 L
390.307 382.978 L
389.607 382.911 L
388.904 382.798 L
388.202 382.638 L
387.505 382.43 L
386.82 382.175 L
386.15 381.873 L
385.5 381.526 L
384.875 381.137 L
384.279 380.708 L
383.715 380.242 L
383.186 379.743 L
382.696 379.215 L
382.247 378.662 L
381.839 378.089 L
381.474 377.5 L
381.474 377.5 L
381.141 376.894 L
380.835 376.27 L
380.558 375.628 L
380.316 374.971 L
380.112 374.302 L
379.95 373.623 L
379.833 372.938 L
379.763 372.25 L
379.743 371.562 L
379.773 370.877 L
379.854 370.198 L
379.986 369.529 L
380.168 368.872 L
380.399 368.23 L
380.678 367.606 L
381 367 L
381 367 L
381.37 366.406 L
381.792 365.818 L
382.264 365.241 L
382.784 364.682 L
383.349 364.145 L
383.953 363.636 L
384.593 363.161 L
385.263 362.724 L
385.958 362.329 L
386.672 361.982 L
387.398 361.683 L
388.13 361.438 L
388.862 361.246 L
389.588 361.109 L
390.302 361.027 L
391 361 L
391 361 L
391.693 361.022 L
392.393 361.089 L
393.096 361.202 L
393.798 361.362 L
394.495 361.57 L
395.18 361.825 L
395.85 362.127 L
396.5 362.474 L
397.125 362.863 L
397.721 363.292 L
398.285 363.758 L
398.814 364.257 L
399.304 364.785 L
399.753 365.338 L
400.161 365.911 L
400.526 366.5 L
400.526 366.5 L
400.854 367.111 L
401.146 367.75 L
401.4 368.416 L
401.612 369.105 L
401.78 369.812 L
401.902 370.533 L
401.975 371.264 L
402 372 L
401.975 372.736 L
401.902 373.467 L
401.78 374.189 L
401.612 374.895 L
401.4 375.584 L
401.146 376.25 L
400.854 376.889 L
400.526 377.5 L
closepath
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
178 626 translate
0 rotate
1.3 1.3 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
3.000000 setlinewidth
newpath
103 626 M
169 626 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
282 626 translate
0 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
newpath
207 626 M
273 626 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
283 536 translate
0 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
[4] 0 setdash
newpath
208 536 M
274 536 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
285 446 translate
0 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
[4] 0 setdash
newpath
210 446 M
276 446 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
192 551 translate
-90 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
newpath
192 610 M
192 560 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
298 552 translate
-90 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
[4] 0 setdash
newpath
298 611 M
298 561 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
192 461 translate
-90 rotate
1.1 1.1 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
1.000000 setlinewidth
newpath
192 520 M
192 470 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
298 463 translate
-90 rotate
1.3 1.3 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
3.000000 setlinewidth
newpath
298 522 M
298 472 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
286.783 548.378 translate
-38.491 rotate
1.3 1.3 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
3.000000 setlinewidth
newpath
203 615 M
279.738 553.979 L
stroke
grestore
gsave
0 0 0 setrgbcolor
gsave
0 setlinejoin
378.761 381.351 translate
-40.4622 rotate
1.3 1.3 scale
newpath 0 0 M -10 -3 L -10 3 L closepath fill
grestore
3.000000 setlinewidth
newpath
310 440 M
371.913 387.192 L
stroke
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 123 628.57] concat
newpath
0 0 M 0 18 L 23.996 18 L 23.996 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
120.5 626.07 M 120.5 649.07 L 149.496 649.07 L 149.496 626.07 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 123 628.57] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (a:d) 21.996 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 230 627] concat
newpath
0 0 M 0 18 L 22.898 18 L 22.898 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
227.5 623.429 M 227.5 648.429 L 255.398 648.429 L 255.398 623.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 230 627] concat
/Symbol-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (e) 7.902 S
/Times-Roman-SHOWISO findfont 18 scalefont setfont
7.902 3.42857 M (:e) 12.996 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 166 583.57] concat
newpath
0 0 M 0 18 L 23.906 18 L 23.906 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
163.5 579.999 M 163.5 604.999 L 192.406 604.999 L 192.406 579.999 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 166 583.57] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (b:) 14.004 S
/Symbol-SHOWISO findfont 18 scalefont setfont
14.004 3.42857 M (e) 7.902 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 166 493] concat
newpath
0 0 M 0 18 L 22.898 18 L 22.898 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
163.5 489.429 M 163.5 514.429 L 191.398 514.429 L 191.398 489.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 166 493] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (c) 7.992 S
7.992 3.42857 M (:) 5.004 S
/Symbol-SHOWISO findfont 18 scalefont setfont
12.996 3.42857 M (e) 7.902 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 303 582] concat
newpath
0 0 M 0 18 L 23.906 18 L 23.906 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
300.5 578.429 M 300.5 603.429 L 329.406 603.429 L 329.406 578.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 303 582] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (b:) 14.004 S
/Symbol-SHOWISO findfont 18 scalefont setfont
14.004 3.42857 M (e) 7.902 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 306 492] concat
newpath
0 0 M 0 18 L 22.898 18 L 22.898 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
303.5 488.429 M 303.5 513.429 L 331.398 513.429 L 331.398 488.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 306 492] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (c:) 12.996 S
/Symbol-SHOWISO findfont 18 scalefont setfont
12.996 3.42857 M (e) 7.902 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 238 540] concat
newpath
0 0 M 0 18 L 22.898 18 L 22.898 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
235.5 536.429 M 235.5 561.429 L 263.398 561.429 L 263.398 536.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 238 540] concat
/Symbol-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (e) 7.902 S
/Times-Roman-SHOWISO findfont 18 scalefont setfont
7.902 3.42857 M (:e) 12.996 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 235 446] concat
newpath
0 0 M 0 18 L 22.898 18 L 22.898 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
232.5 442.429 M 232.5 467.429 L 260.398 467.429 L 260.398 442.429 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 235 446] concat
/Symbol-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (e) 7.902 S
/Times-Roman-SHOWISO findfont 18 scalefont setfont
7.902 3.42857 M (:e) 12.996 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 350 420] concat
newpath
0 0 M 0 18 L 23.996 18 L 23.996 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
347.5 417.5 M 347.5 440.5 L 376.496 440.5 L 376.496 417.5 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 350 420] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (d:a) 21.996 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 255 582] concat
newpath
0 0 M 0 18 L 23.996 18 L 23.996 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
252.5 579.5 M 252.5 602.5 L 281.496 602.5 L 281.496 579.5 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 255 582] concat
/Times-Roman-SHOWISO findfont 18 scalefont setfont
0 0 0 setrgbcolor
0 3.42857 M (b:) 14.004 S
14.004 3.42857 M (e) 7.992 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 120 608.57] concat
newpath
0 0 M 0 14 L 29.216 14 L 29.216 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
117 605.57 M 117 625.57 L 152.216 625.57 L 152.216 605.57 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 120 608.57] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\(x:x\)) 27.216 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 224 610] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
221 607 M 221 627 L 268.508 627 L 268.508 607 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 224 610] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e1:e1) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 226 519] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
223 516 M 223 536 L 270.508 536 L 270.508 516 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 226 519] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e1:e1) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 226 430] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
223 427 M 223 447 L 270.508 447 L 270.508 427 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 226 430] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e1:e1) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 301 570] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
298 567 M 298 587 L 345.508 587 L 345.508 567 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 301 570] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e2:e2) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 153 572] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
150 569 M 150 589 L 197.508 589 L 197.508 569 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 153 572] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e2:e2) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 150 480] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
147 477 M 147 497 L 194.508 497 L 194.508 477 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 150 480] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e2:e2) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 302 479] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
299 476 M 299 496 L 346.508 496 L 346.508 476 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 302 479] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e2:e2) 30.184 S
/Times-Roman-SHOWISO findfont 14 scalefont setfont
34.846 2.47059 M (\)) 4.662 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 349 407] concat
newpath
0 0 M 0 14 L 29.216 14 L 29.216 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
346 404 M 346 424 L 381.216 424 L 381.216 404 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 349 407] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\(x:x\)) 27.216 S
setmatrix
grestore
gsave
gsave
matrix currentmatrix
[1 0 0 1 254 572] concat
newpath
0 0 M 0 14 L 41.508 14 L 41.508 0 L
closepath setmatrix
0 0 0 setrgbcolor
grestore
newpath
251 569 M 251 589 L 298.508 589 L 298.508 569 L
closepath clip newpath
0 0 0 setrgbcolor
matrix currentmatrix
[1 0 0 1 254 572] concat
/Times-Roman-SHOWISO findfont 14 scalefont setfont
0 0 0 setrgbcolor
0 2.47059 M (\() 4.662 S
/Symbol-SHOWISO findfont 14 scalefont setfont
4.662 2.47059 M (e2:e1\)) 34.846 S
setmatrix
grestore
grestore
showpage
%%EndDocument
 @endspecial 526 1383 a(Fig.)f(5.)g(Redundan)o(t)h(Comp)q(osition)f(P)o
(aths)455 1609 y @beginspecial 36 @llx 347 @lly 619 @urx
446 @ury 2160 @rwi @setspecial
%%BeginDocument: aut12.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 346 584 100 boxprim clip newpath
36 347 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
291 25 moveto () 0 14.00 -0.50 alignedtext
291 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
29 65 29 29 ellipse_path
stroke
gsave 10 dict begin
29 66 moveto (\(0,0\)) 26 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
155 65 29 29 ellipse_path
stroke
gsave 10 dict begin
155 66 moveto (\(1,1\)) 26 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 58 65 moveto
75 65 98 65 117 65 curveto
stroke
126 65 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
92 74 moveto (a:d) 17 14.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
281 65 29 29 ellipse_path
stroke
gsave 10 dict begin
281 66 moveto (\(2,2\)) 26 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 184 65 moveto
201 65 224 65 243 65 curveto
stroke
252 65 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
218 74 moveto (b:e) 17 14.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
419 65 29 29 ellipse_path
stroke
gsave 10 dict begin
419 66 moveto (\(3,2\)) 26 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 310 65 moveto
331 65 359 65 382 65 curveto
stroke
390 65 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
350 74 moveto (c:) 28 14.00 -0.50 alignedtext
14.00 /Symbol set_font
359 74 moveto (e) 28 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	4
gsave 10 dict begin
solid
549 65 29 29 ellipse_path
stroke
549 65 33 33 ellipse_path
stroke
gsave 10 dict begin
549 66 moveto (\(4,3\)) 26 14.00 -0.50 alignedtext
end grestore
end grestore

%	3 -> 4
newpath 448 65 moveto
465 65 488 65 507 65 curveto
stroke
516 65 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
482 74 moveto (d:a) 17 14.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 627 1698 a(Fig.)g(6.)f(Comp)q(osition)i(Output)83
1813 y Fq(3.4)50 b(Example:)18 b(L)n(azy)e(Comp)n(osition)83
1991 y Fr(Comp)q(osition)11 b(generalizes)f(acceptor)h(in)o
(tersection.)f(States)h(in)g(the)g(comp)q(osition)g Fo(T)1633
1998 y Ft(1)1653 1991 y Fm(\016)q Fo(T)1708 1998 y Ft(2)83
2052 y Fr(of)j Fo(T)165 2059 y Ft(1)198 2052 y Fr(and)g
Fo(T)319 2059 y Ft(2)351 2052 y Fr(are)g(iden)o(ti\014ed)e(with)h
(pairs)h(of)f(a)h(state)g(of)g Fo(T)1154 2059 y Ft(1)1186
2052 y Fr(and)g(a)g(state)g(of)g Fo(T)1515 2059 y Ft(2)1534
2052 y Fr(.)f(Lea)o(ving)83 2112 y(aside)k(transitions)h(with)f
Fo(\017)g Fr(inputs)h(or)g(outputs)g(for)f(the)g(momen)o(t,)d(the)k
(follo)o(wing)f(rule)83 2172 y(sp)q(eci\014es)g(ho)o(w)h(to)g(compute)e
(a)i(transition)f(of)h Fo(T)987 2179 y Ft(1)1018 2172
y Fm(\016)12 b Fo(T)1084 2179 y Ft(2)1121 2172 y Fr(from)k(appropriate)
i(transitions)83 2232 y(of)f Fo(T)168 2239 y Ft(1)203
2232 y Fr(and)g Fo(T)327 2239 y Ft(2)323 2370 y Fr(\()p
Fo(q)364 2377 y Ft(1)398 2338 y Fk(a)p Ft(:)p Fk(b=w)485
2343 y Fb(1)409 2370 y Fm(\000)-8 b(!)25 b Fo(q)539 2349
y Fl(0)537 2382 y Ft(1)605 2370 y Fr(and)50 b Fo(q)755
2377 y Ft(2)788 2338 y Fk(b)p Ft(:)p Fk(c=w)871 2343
y Fb(2)798 2370 y Fm(\000)-8 b(!)23 b Fo(q)926 2349 y
Fl(0)924 2382 y Ft(2)944 2370 y Fr(\))13 b(=)-8 b Fm(\))14
b Fr(\()p Fo(q)1111 2377 y Ft(1)1130 2370 y Fo(;)8 b(q)1174
2377 y Ft(2)1193 2370 y Fr(\))1226 2338 y Fk(a)p Ft(:)p
Fk(c=)p Ft(\()p Fk(w)1327 2343 y Fb(1)1344 2338 y Fl(\012)p
Fk(w)1396 2343 y Fb(2)1414 2338 y Ft(\))1287 2370 y Fm(\000)-9
b(!)74 b Fr(\()p Fo(q)1484 2349 y Fl(0)1482 2382 y Ft(1)1502
2370 y Fo(;)8 b(q)1548 2349 y Fl(0)1546 2382 y Ft(2)1565
2370 y Fr(\))83 2570 y(where)16 b Fo(s)262 2538 y Fk(x)p
Ft(:)p Fk(y)q(=w)268 2570 y Fm(\000)-9 b(!)20 b Fo(t)d
Fr(represen)o(ts)f(a)h(transition)f(from)g Fo(s)h Fr(to)g
Fo(t)f Fr(with)g(input)h Fo(x)p Fr(,)f(output)h Fo(y)h
Fr(and)83 2630 y(w)o(eigh)o(t)g Fo(w)q Fr(.)g(Clearly)l(,)g(this)g
(computation)g(is)h(lo)q(cal,)f(and)i(can)e(th)o(us)h(b)q(e)g(used)g
(in)f(a)i(lazy)83 2690 y(implem)o(en)o(tati)o(on)14 b(of)j(comp)q
(osition.)885 2856 y(8)p eop
%%Page: 9 9
9 8 bop 725 452 a @beginspecial 213 @llx 279 @lly 400
@urx 514 @ury 864 @rwi @setspecial
%%BeginDocument: aut14.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
212 278 188 236 boxprim clip newpath
213 279 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
93 25 moveto () 0 14.00 -0.50 alignedtext
93 9 moveto () 0 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
40 128 18 18 ellipse_path
stroke
40 128 22 22 ellipse_path
stroke
gsave 10 dict begin
40 129 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 0
newpath 48 149 moveto
49 159 46 168 40 168 curveto
35 168 33 163 32 156 curveto
stroke
32 149 90.00 10.00 5.00 arrowhead
gsave 10 dict begin
40 177 moveto (x:x) 17 14.00 -0.50 alignedtext
end grestore

%	0 -> 0
newpath 59 140 moveto
82 160 75 186 40 186 curveto
8 186 0 165 15 146 curveto
stroke
21 140 135.00 10.00 5.00 arrowhead
gsave 10 dict begin
14.00 /Symbol set_font
40 195 moveto (e2:e1) 30 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	1
gsave 10 dict begin
solid
164 178 18 18 ellipse_path
stroke
164 178 22 22 ellipse_path
stroke
gsave 10 dict begin
164 179 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 51 147 moveto
59 159 70 173 80 177 curveto
94 182 116 182 133 181 curveto
stroke
142 181 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
14.00 /Symbol set_font
102 189 moveto (e1:e1) 30 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	2
gsave 10 dict begin
solid
164 78 18 18 ellipse_path
stroke
164 78 22 22 ellipse_path
stroke
gsave 10 dict begin
164 79 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
newpath 60 120 moveto
81 112 114 99 137 89 curveto
stroke
144 86 156.80 10.00 5.00 arrowhead
gsave 10 dict begin
14.00 /Symbol set_font
102 120 moveto (e2:e2) 30 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	1 -> 0
newpath 66 135 moveto
85 140 109 148 124 154 curveto
130 156 138 161 146 165 curveto
stroke
61 134 11.31 10.00 5.00 arrowhead
gsave 10 dict begin
102 163 moveto (x:x) 17 14.00 -0.50 alignedtext
end grestore

%	1 -> 1
newpath 179 195 moveto
183 206 178 218 164 218 curveto
153 218 148 211 148 203 curveto
stroke
149 195 97.13 10.00 5.00 arrowhead
gsave 10 dict begin
14.00 /Symbol set_font
164 227 moveto (e1:e1) 30 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore

%	2 -> 0
newpath 53 103 moveto
61 91 70 77 80 71 curveto
95 61 123 66 143 71 curveto
stroke
50 108 -59.04 10.00 5.00 arrowhead
gsave 10 dict begin
102 80 moveto (x:x) 17 14.00 -0.50 alignedtext
end grestore

%	2 -> 2
newpath 179 95 moveto
183 106 178 118 164 118 curveto
153 118 148 111 148 103 curveto
stroke
149 95 97.13 10.00 5.00 arrowhead
gsave 10 dict begin
14.00 /Symbol set_font
164 127 moveto (e2:e2) 30 14.00 -0.50 alignedtext
14.00 /Times-Roman set_font
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 645 542 a Fu(Fig.)14 b(7.)h(Comp)q(osition)h(Filter)83
706 y Fr(T)l(ransitions)k(with)e Fo(\017)h Fr(lab)q(els)g(in)g
Fo(T)721 713 y Ft(1)759 706 y Fr(or)g Fo(T)850 713 y
Ft(2)888 706 y Fr(add)h(some)e(subtleties)g(to)h(comp)q(osition.)f(In)
83 767 y(general,)23 b(output)i(and)f(input)g Fo(\017)p
Fr('s)g(can)g(b)q(e)g(aligned)f(in)h(sev)o(eral)f(di\013eren)o(t)g(w)o
(a)o(ys:)g(an)83 827 y(output)18 b Fo(\017)g Fr(in)f
Fo(T)369 834 y Ft(1)406 827 y Fr(can)h(b)q(e)g(consumed)f(either)f(b)o
(y)i(sta)o(ying)f(in)h(the)f(same)g(state)h(in)f Fo(T)1646
834 y Ft(2)1684 827 y Fr(or)83 887 y(b)o(y)e(pairing)h(it)g(with)g(an)g
(input)g Fo(\017)f Fr(in)h Fo(T)793 894 y Ft(2)812 887
y Fr(;)g(an)g(input)g Fo(\017)f Fr(in)h Fo(T)1160 894
y Ft(2)1195 887 y Fr(can)g(b)q(e)g(handled)g(similarly)l(.)83
947 y(F)l(or)g(instance,)g(the)g(t)o(w)o(o)g(transducers)h(in)f(Figure)
g(4)h(can)f(generate)g(all)g(the)g(alternativ)o(e)83
1007 y(paths)h(in)f(Figure)g(5.)g(Ho)o(w)o(ev)o(er,)e(the)i(single)g(b)
q(old)h(path)g(is)f(su\016cien)o(t)f(to)i(represen)o(t)e(the)83
1068 y(comp)q(osition)c(result,)h(sho)o(wn)g(separately)g(in)g(Figure)f
(6.)h(The)g(problem)f(with)h(redundan)o(t)83 1128 y(paths)20
b(is)e(not)h(only)g(that)g(they)f(increase)g(unnecessarily)g(the)g
(size)g(of)h(the)g(result,)f(but)83 1188 y(also)i(they)f(fail)f(to)i
(preserv)o(e)e Fq(p)n(ath)i(multiplicity)t Fr(:)g(eac)o(h)f(pair)g(of)h
(compatible)d(paths)j(in)83 1248 y Fo(T)112 1255 y Ft(1)152
1248 y Fr(and)i Fo(T)281 1255 y Ft(2)321 1248 y Fr(ma)o(y)d(yield)h
(sev)o(eral)f(paths)j(in)e Fo(T)946 1255 y Ft(1)980 1248
y Fm(\016)14 b Fo(T)1048 1255 y Ft(2)1067 1248 y Fr(.)21
b(If)f(the)h(w)o(eigh)o(t)f(semiring)f(is)h(not)83 1308
y(idemp)q(oten)o(t,)11 b(that)j(leads)f(to)g(a)h(result)f(that)g(do)q
(es)h(not)g(satisfy)f(the)g(algebraic)g(de\014nition)83
1368 y(of)k(comp)q(osition:)448 1519 y([)-8 b([)p Fo(T)497
1526 y Ft(1)526 1519 y Fm(\016)11 b Fo(T)591 1526 y Ft(2)610
1519 y Fr(])-8 b(]\()p Fo(u;)8 b(w)q Fr(\))13 b(=)819
1477 y Fi(M)841 1565 y Fk(v)881 1519 y Fr([)-8 b([)p
Fo(T)930 1526 y Ft(1)948 1519 y Fr(])g(]\()p Fo(u;)8
b(v)r Fr(\))h Fm(\012)i Fr([)-8 b([)p Fo(T)1190 1526
y Ft(2)1208 1519 y Fr(])g(]\()p Fo(v)r(;)8 b(w)q Fr(\))96
b Fo(:)83 1768 y Fr(W)l(e)22 b(solv)o(e)g(the)g(path-m)o(ultiplicit)n
(y)d(problem)i(b)o(y)h(mapping)g(the)g(giv)o(en)g(comp)q(osition)83
1828 y(in)o(to)16 b(a)h(new)f(comp)q(osition)729 1978
y Fo(T)758 1985 y Ft(1)788 1978 y Fm(\016)11 b Fo(T)853
1985 y Ft(2)886 1978 y Fm(!)j Fo(T)986 1958 y Fl(0)979
1991 y Ft(1)1009 1978 y Fm(\016)d Fo(F)18 b Fm(\016)11
b Fo(T)1167 1958 y Fl(0)1160 1991 y Ft(2)83 2199 y Fr(in)18
b(whic)o(h)g Fo(F)25 b Fr(is)19 b(a)g(sp)q(ecial)f Fq(\014lter)j(tr)n
(ansduc)n(er)i Fr(and)c(the)g Fo(T)1180 2180 y Fl(0)1173
2211 y Fk(i)1210 2199 y Fr(are)f(v)o(ersions)g(of)h(the)g
Fo(T)1654 2206 y Fk(i)1686 2199 y Fr(in)83 2259 y(whic)o(h)c(the)g
(relev)m(an)o(t)g Fo(\017)g Fr(lab)q(els)h(are)f(replaced)g(b)o(y)g(sp)
q(ecial)g(\\silen)o(t)g(transition")h(sym)o(b)q(ols)83
2319 y Fo(\017)103 2326 y Fk(i)117 2319 y Fr(.)g(The)g(b)q(old)g(path)h
(in)f(Figure)g(5)g(is)g(the)g(only)g(one)h(allo)o(w)o(ed)e(b)o(y)h(the)
f(\014lter)h(in)g(Figure)f(7)83 2379 y(for)i(the)f(input)g(transducers)
g(in)g(Figure)g(4.)83 2509 y(Clearly)l(,)c(all)h(the)h(op)q(erations)h
(in)o(v)o(olv)o(ed)c(in)i(the)h(\014ltered)e(comp)q(osition)h(are)h(lo)
q(cal,)f(there-)83 2570 y(fore)i(they)f(can)h(b)q(e)g(p)q(erformed)f
(on)h(demand,)e(without)i(needing)g(to)g(p)q(erform)f(explicitly)83
2630 y(the)f(replacemen)o(t)e(of)j Fo(T)516 2637 y Fk(i)543
2630 y Fr(b)o(y)f Fo(T)644 2612 y Fl(0)637 2642 y Fk(i)655
2630 y Fr(.)h(More)f(details)g(on)h(\014ltered)f(comp)q(osition)g(can)h
(b)q(e)f(found)83 2690 y(elsewhere)i([22,28].)885 2856
y(9)p eop
%%Page: 10 10
10 9 bop 83 42 a Fs(4)56 b(Soft)n(w)n(are)20 b(Design)83
217 y Fr(Our)c(library)g(w)o(as)h(designed)f(to)g(meet)e(t)o(w)o(o)j
(imp)q(ortan)o(t)e(requiremen)o(ts:)83 332 y Fm(\017)24
b Fr(Algorithms)17 b(that)i(op)q(erate)h(on)f(automata)g(should)h(do)f
(so)h(only)e(through)i(abstract)132 393 y(accessor)k(and)h(m)o(utator)e
(op)q(erations,)i(whic)o(h)e(in)h(turn)g(op)q(erate)h(on)f(the)g(in)o
(ternal)132 453 y(represen)o(tations)16 b(of)g(those)h(automata.)83
513 y Fm(\017)24 b Fr(Algorithms)19 b(that)i(op)q(erate)g(on)h(w)o
(eigh)o(ts)e(should)h(do)g(so)h(solely)d(through)j(abstract)132
573 y(op)q(erations)17 b(that)g(implem)o(en)n(t)d(the)i(w)o(eigh)o(t)f
(semiring.)83 689 y(W)l(e)22 b(motiv)m(ate)e(and)j(describ)q(e)e(these)
h(t)o(w)o(o)g(requiremen)o(ts)d(b)q(elo)o(w.)i(F)l(urthermore,)f(the)83
749 y(demanding)e(nature)i(of)g(our)g(applications)f(imp)q(oses)g(the)g
(constrain)o(t)g(that)h(these)f(ab-)83 809 y(stractions)g(add)f(little)
e(computational)i(burden)g(compared)f(to)h(more)f(sp)q(ecialized)f(ar-)
83 869 y(c)o(hitectures.)83 1068 y Fq(4.1)50 b(Finite-state)19
b(Obje)n(cts)83 1244 y Fr(Requiring)f(algorithms)g(to)h(op)q(erate)g
(on)h(automata)f(solely)f(through)h(abstract)h(acces-)83
1304 y(sors)f(and)g(m)o(utators)e(has)i(three)f(b)q(ene\014ts:)g(it)g
(allo)o(ws)g(the)g(in)o(ternal)f(represen)o(tation)h(of)83
1364 y(automata)e(to)g(b)q(e)g(hidden,)f(it)g(allo)o(ws)h
Fq(generic)k Fr(algorithms)15 b(that)i(op)q(erate)f(on)g(m)o(ultiple)83
1424 y(\014nite-state)22 b(represen)o(tations)f(and)i(it)e(pro)o(vides)
g(the)h(mec)o(hanism)d(for)j(creating)f(and)83 1484 y(using)c(lazy)e
(implem)o(en)o(tations)f(of)i(algorithms.)f(T)l(o)i(illustrate)e(these)
h(p)q(oin)o(ts,)g(consider)83 1545 y(the)g(core)g(accessors)h(supp)q
(orted)g(b)o(y)f(all)f(automata)i(classes)f(in)g(the)g(library:)83
1660 y Fm(\017)24 b Fq(fsm)s Fr(.)p Fn(start)n Fr(\(\),)16
b(whic)o(h)f(returns)i(the)f(initial)e(state)j(of)f Fq(fsm)t
Fr(;)83 1720 y Fm(\017)24 b Fq(fsm)s Fr(.)p Fn(final)n
Fr(\()p Fq(state)t Fr(\),)16 b(whic)o(h)g(returns)g(the)g(\014nal)g(w)o
(eigh)o(t)g(of)g Fq(state)21 b Fr(in)16 b Fq(fsm)s Fr(;)83
1780 y Fm(\017)24 b Fq(fsm)s Fr(.)p Fn(arcs)n Fr(\()p
Fq(state)5 b Fr(\),)13 b(whic)o(h)g(returns)h(an)h(iterator)e(o)o(v)o
(er)g(the)h(transitions)h(lea)o(ving)e Fq(state)132 1841
y Fr(in)g Fq(fsm)s Fr(.)h(The)f(iterator)h(is)f(itself)f(an)i(ob)s
(ject)f(supp)q(orting)i(the)e Fn(next)g Fr(op)q(eration,)h(whic)o(h)132
1901 y(returns)i(\(a)h(p)q(oin)o(ter)f(to\))g(eac)o(h)g(transition)g
(from)g Fq(state)k Fr(in)c(turn.)83 2016 y(A)e(state)h(is)f(sp)q
(eci\014ed)g(b)o(y)g(an)h(in)o(teger)e(index;)g(a)i(transition)f(is)h
(sp)q(eci\014ed)f(b)o(y)f(a)i(structure)83 2076 y(con)o(taining)h(an)g
(input)g(lab)q(el,)e(an)j(output)f(lab)q(el,)f(a)h(w)o(eigh)o(t)f(and)i
(a)f(next)f(state)h(index.)1700 2058 y Ft(2)83 2192 y
Fr(Clearly)l(,)e(a)j(v)m(ariet)o(y)e(of)h(automata)g(implem)o(en)n
(tations)e(meet)g(this)h(core)h(in)o(terface.)e(As)h(a)83
2252 y(simple)e(example,)g(the)i(transitions)h(lea)o(ving)e(a)i(state)g
(could)f(b)q(e)h(stored)g(in)f(arra)o(ys)g(or)h(in)83
2312 y(link)o(ed)f(lists.)g(By)h(hiding)g(the)g(automaton's)h(implem)o
(e)o(n)o(tation)d(from)h(its)h(user)h(w)o(e)e(gain)83
2372 y(the)20 b(usual)g(adv)m(an)o(tages)h(of)f(separating)h(in)o
(terfaces)e(from)g(implem)o(e)o(n)o(tations:)e(w)o(e)j(can)83
2433 y(c)o(hange)g(the)f(represen)o(tation)g(as)h(w)o(e)g(wish)f(and,)h
(so)h(long)f(as)g(w)o(e)f(do)h(not)g(c)o(hange)g(the)83
2493 y(ob)s(ject)c(in)o(terface,)e(the)i(co)q(de)h(that)f(uses)h(it)e
(still)h(runs.)p 83 2584 150 2 v 83 2617 a Ft(2)128 2633
y Fu(Using)i(in)o(teger)e(indices)j(allo)o(ws)e(referring)g(to)f
(states)f(that)h(ma)o(y)g(not)g(ha)o(v)o(e)h(y)o(et)f(b)q(een)i(con-)83
2690 y(structed)d(in)h(automata)e(b)q(eing)i(created)f(b)o(y)h(lazy)f
(algorithms.)872 2856 y Fr(10)p eop
%%Page: 11 11
11 10 bop 83 42 a Fr(In)19 b(fact,)g(it)g(pro)o(v)o(es)g(v)o(ery)g
(useful)g(to)h(ha)o(v)o(e)e(m)o(ultiple)f(automata)i(impleme)o(n)o
(tations)e(in)83 102 y(the)h(same)f(library)l(.)g(F)l(or)h(example,)e
(one)i(class)g(of)h(automata)f(in)g(the)g(library)f(pro)o(vides)83
162 y(m)o(utating)i(op)q(erations)j(suc)o(h)e(as)h(adding)g(states)g
(and)g(arcs,)f(b)o(y)g(using)h(an)g(extensible)83 222
y(v)o(ector)12 b(represen)o(tation)h(of)h(states)g(and)g(transitions)f
(that)h(supp)q(orts)h(e\016cien)o(t)c(app)q(ends.)83
282 y(Another)17 b(class,)h(for)f(read-only)h(automata,)g(uses)f
(\014xed)h(state)g(and)g(transition)g(arra)o(ys)83 342
y(that)k(can)f(b)q(e)g(e\016cien)o(tly)d(memory-m)o(app)q(ed)h(from)h
(\014les.)h(A)f(third)h(class,)g(also)g(read-)83 403
y(only)l(,)f(stores)i(states)f(and)h(transitions)f(in)f(a)i(compressed)
d(form)h(to)h(sa)o(v)o(e)g(space,)f(and)83 463 y(uncompresses)15
b(them)g(on)i(demand)e(when)h(they)g(are)g(accessed.)83
575 y(Our)21 b(algorithms)f(are)i(written)e(generically)l(,)f(in)i
(that)g(they)g(assume)f(that)i(automata)83 635 y(supp)q(ort)e(the)f
(core)g(op)q(erations)i(ab)q(o)o(v)o(e)e(and)h(as)g(little)d(else)h(as)
i(necessary)l(.)f(F)l(or)g(exam-)83 695 y(ple,)i(some)g(classes)g(of)i
(automata)f(supp)q(ort)h(the)e Fq(fsm)t Fr(.)p Fn(numstate)o(s)m
Fr(\(\))h(op)q(eration)g(that)83 756 y(returns)d Fq(fsm)s
Fr('s)f(n)o(um)o(b)q(er)f(of)i(states,)g(while)e(others)i(do)g(not)g
(\(w)o(e)f(will)g(see)g(an)h(example)83 816 y(in)j(a)h(momen)o(t\).)c
(Where)j(p)q(ossible)h(and)g(reasonably)g(e\016cien)o(t,)d(w)o(e)i
(write)g(our)h(algo-)83 876 y(rithms)c(to)i(a)o(v)o(oid)f(using)h(suc)o
(h)g(optional)g(op)q(erations.)g(In)g(this)f(w)o(a)o(y)l(,)g(they)g
(will)g(w)o(ork)83 936 y(on)h(an)o(y)g(automaton)g(class.)f(On)g(the)h
(other)g(hand,)f(if)g(it)h(is)f(really)g(necessary)g(to)h(use)83
996 y Fq(fsm)s Fr(.)p Fn(numstates)m Fr(\(\),)15 b(then)i(at)f(least)g
(all)g(automata)h(classes)f(that)h(supp)q(ort)g(that)g(op)q(era-)83
1057 y(tion)f(will)f(w)o(ork.)400 1039 y Ft(3)j(4)83
1169 y Fr(The)23 b(restricted)f(set)i(of)f(core)g(op)q(erations)i(ab)q
(o)o(v)o(e)e(w)o(as)h(motiv)m(ated)e(b)o(y)h(the)g(need)g(to)83
1229 y(supp)q(ort)17 b(lazy)f(implem)o(e)o(n)o(tations)e(of)i
(algorithms.)f(In)h(particular,)f(the)h(op)q(erations)h(are)83
1289 y(lo)q(cal)f(if)g(w)o(e)g(accept)f(the)h(con)o(v)o(en)o(tion)f
(that)i(no)f(state)h(should)f(b)q(e)h(visited)e(that)h(has)h(not)83
1349 y(b)q(een)23 b(disco)o(v)o(ered)d(from)i(the)g(start)h(state.)g
(Th)o(us)g(the)f(automaton)h(ob)s(ject)f(that)h(lies)83
1410 y(b)q(ehind)18 b(this)h(in)o(terface)e(need)g(not)i(ha)o(v)o(e)f
(a)h(static)f(represen)o(tation.)f(F)l(or)i(example,)c(w)o(e)83
1470 y(can)j(impleme)o(n)o(t)d(the)j(result)g(of)g(the)g(comp)q
(osition)g(of)h(t)o(w)o(o)f(automata)g Fo(A)g Fr(and)h
Fo(B)i Fr(as)d(a)83 1530 y(dela)o(y)o(ed)f(comp)q(osition)g(automaton)h
Fo(C)j Fr(=)c Fn(FSMCompos)o(e)m Fr(\()p Fo(A;)8 b(B)s
Fr(\).)17 b(When)h Fo(C)q(:)p Fn(start)m Fr(\(\))g(is)83
1590 y(called,)12 b(the)g(start)i(state)f(can)h(b)q(e)f(constructed)g
(on)g(demand)f(b)o(y)h(\014rst)g(calling)g Fo(A:)p Fn(start)m
Fr(\(\))83 1650 y(and)20 b Fo(B)s(:)p Fn(start)m Fr(\(\))f(and)h(then)e
(pairing)h(these)g(states)h(and)f(hashing)h(the)f(pair)g(to)g(a)h(new)
83 1711 y(constructed)h(state)g(index,)e(whic)o(h)h Fo(C)q(:)p
Fn(start)n Fr(\(\))g(returns.)h(Similarly)l(,)c Fo(C)q(:)p
Fn(final)n Fr(\(\))j(and)83 1771 y Fo(C)q(:)p Fn(arcs)n
Fr(\(\))d(can)h(b)q(e)g(computed)f(on-demand)g(b)o(y)g(\014rst)h
(calling)f(these)g(op)q(erations)i(on)f Fo(A)83 1831
y Fr(and)d Fo(B)i Fr(and)e(then)f(constructing)h(the)f(appropriate)h
(result)f(for)h Fo(C)j Fr(to)d(return.)e(If)h(w)o(e)g(had)83
1891 y(included)19 b Fn(numstates)e Fr(as)k(a)g(core)f(op)q(eration,)h
(the)f(comp)q(osition)g(w)o(ould)g(ha)o(v)o(e)g(to)h(b)q(e)83
1951 y(fully)15 b(expanded)g(immediatel)o(y)e(to)j(coun)o(t)g(its)f(n)o
(um)o(b)q(er)f(of)j(states.)f(Since)e(a)j(user)f(migh)o(t)83
2012 y(do)h(this)g(inadv)o(erten)o(tly)l(,)d(w)o(e)i(do)h(not)h(pro)o
(vide)d(that)j(op)q(eration)f(for)g(automata)g(ob)s(jects)83
2072 y(resulting)i(from)f(comp)q(osition.)684 2054 y
Ft(5)730 2072 y Fr(The)h(core)g(op)q(erations,)h(in)f(fact,)g(can)g
(supp)q(ort)i(lazy)83 2132 y(automata)15 b(with)h(an)f(in\014nite)g(n)o
(um)o(b)q(er)e(of)j(states,)f(so)h(long)f(as)h(only)f(a)h(\014nite)f(p)
q(ortion)h(of)83 2192 y(suc)o(h)g(automata)h(is)f(tra)o(v)o(ersed.)p
83 2249 150 2 v 83 2281 a Ft(3)128 2298 y Fu(F)l(or)f(those)g(that)g
(do)g(not,)g(our)g(curren)o(t)g(C)h(implemen)o(tation)g(will)h(issue)g
(a)e(run-time)h(error,)83 2354 y(while)21 b(run-time)g(t)o(yp)q(e-c)o
(hec)o(king)g(can)f(b)q(e)g(used)h(to)e(circum)o(v)o(en)o(t)h(suc)o(h)g
(errors.)f(In)h(our)g(new)83 2411 y(C++)c(v)o(ersion,)f(w)o(e)g(will)i
(use)e(compile-time)i(t)o(yp)q(e-c)o(hec)o(king)g(where)e(p)q(ossible.)
83 2449 y Ft(4)128 2465 y Fu(This)h(design)h(philosoph)o(y)f(has)f
(some)g(similarities)j(with)e(that)e(of)h(other)g(mo)q(dern)h(soft)o(w)
o(are)83 2522 y(to)q(olkits)f(suc)o(h)h(as)f(the)g(C++)h(Standard)f(T)l
(emplate)h(Library)f([27].)83 2560 y Ft(5)128 2577 y
Fu(The)20 b(user)f(can)g(alw)o(a)o(ys)f(cop)o(y)h(this)g(lazy)g
(automaton)f(in)o(to)h(an)f(instance)i(of)e(a)h(static)g(au-)83
2633 y(tomata)c(class)h(that)g(supp)q(orts)g(the)h Fa(numstates)e
Fu(op)q(eration.)h(In)h(other)f(w)o(ords,)f(w)o(e)h(fa)o(v)o(or)f(ex-)
83 2690 y(plicit)i(con)o(v)o(ersions)e(to)g(implicit)j(ones.)872
2856 y Fr(11)p eop
%%Page: 12 12
12 11 bop 83 42 a Fr(T)l(o)16 b(ac)o(hiev)o(e)d(the)i(required)f
(e\016ciency)f(for)i(the)g(ab)q(o)o(v)o(e)g(in)o(terface,)e(w)o(e)i
(ensure)g(that)g(eac)o(h)83 102 y(call)g(to)h(the)g(transition)g
(iterator)g(in)o(v)o(olv)o(es)e(nothing)i(more)f(than)h(a)g(p)q(oin)o
(ter)g(incremen)o(t)83 162 y(in)i(the)h(automata)g(classes)g(in)o
(tended)f(for)h(demanding)f(applications)g(suc)o(h)h(as)g(sp)q(eec)o(h)
83 222 y(recognition.)j(Since)g(most)f(of)i(the)g(time)d(used)j(for)g
(automata)g(op)q(erations)g(in)f(those)83 282 y(applications)15
b(is)h(sp)q(en)o(t)f(iterating)g(o)o(v)o(er)g(the)g(transitions)h(lea)o
(ving)e(v)m(arious)i(states,)f(that)83 342 y(represen)o(tation)h(is)g
(usually)g(e\013ectiv)o(e.)83 533 y Fq(4.2)50 b(Weight)18
b(Obje)n(cts)83 707 y Fr(As)f(men)o(tioned)e(earlier,)g(man)o(y)g(of)j
(the)e(algorithms)h(in)f(our)i(library)e(will)g(w)o(ork)h(with)f(a)83
767 y(v)m(ariet)o(y)c(of)h(w)o(eigh)o(t)f(semirings.)f(Our)i(design)g
(encourages)g(writing)g(algorithms)f(o)o(v)o(er)g(the)83
827 y(most)17 b(general)h(semiring)e(b)o(y)i(making)f(the)g(w)o(eigh)o
(ts)h(an)g(abstract)h(t)o(yp)q(e)e(with)h(suitable)83
887 y(addition)e(and)h(m)o(ultiplic)o(ation)d(op)q(erations)j(and)g
(iden)o(tit)o(y)d(elemen)o(ts.)e(In)k(this)g(w)o(a)o(y)l(,)f(w)o(e)83
948 y(can)f(switc)o(h)g(b)q(et)o(w)o(een,)e(sa)o(y)l(,)i(the)f
(tropical)h(semiring)e(and)j(the)e(probabilit)o(y)g(semiring)f(b)o(y)83
1008 y(just)17 b(using)h(a)g(di\013eren)o(t)e(implem)o(en)o(tation)e
(of)k(the)f(abstract)h(t)o(yp)q(e.)e(F)l(or)i(e\016ciency)l(,)c(the)83
1068 y(w)o(eigh)o(t)19 b(op)q(erations)h(are)g(represen)o(ted)e(b)o(y)h
(macros)g(in)g(our)h(C)g(v)o(ersion)e(and)i(b)o(y)f(inline)83
1128 y(mem)o(b)q(er)13 b(functions)j(in)g(the)g(C++)h(v)o(ersion)e
(under)h(dev)o(elopmen)o(t.)83 1319 y Fq(4.3)50 b(Cover)n(age)83
1493 y Fr(The)19 b(library)f(op)q(erates)h(on)g(w)o(eigh)o(ted)f
(transducers;)h(w)o(eigh)o(ted)f(acceptors)g(are)h(repre-)83
1553 y(sen)o(ted)13 b(as)g(restrictions)g(of)h(the)e(iden)o(tit)o(y)g
(transducer)h(to)h(the)f(supp)q(ort)h(of)g(the)e(acceptor.)83
1613 y(In)20 b(our)g(c)o(hosen)g(represen)o(tation,)f(w)o(eigh)o(ted)h
(automata)g(ha)o(v)o(e)f(a)i(single)e(initial)g(state;)83
1673 y(whether)e(a)h(state)g(is)f(accepting)g(or)h(not)g(is)g
(determined)d(b)o(y)i(the)g(state's)g(\014nal)h(w)o(eigh)o(t.)83
1733 y(The)e(library)g(includes:)83 1847 y Fs(Rational)i(op)r
(erations:)23 b Fr(union,)16 b(concatenation,)f(Kleene)g(closure,)g
(rev)o(ersal,)f(in)o(v)o(er-)132 1907 y(sion)i(and)h(pro)s(jection;)83
1968 y Fs(Comp)r(osition:)22 b Fr(transducer)12 b(comp)q(osition)e
([22],)h(and)h(acceptor)g(in)o(tersection,)d(as)j(w)o(ell)132
2028 y(as)22 b(taking)g(the)f(di\013erence)f(b)q(et)o(w)o(een)h(a)h(w)o
(eigh)o(ted)e(acceptor)i(and)g(an)g(un)o(w)o(eigh)o(ted)132
2088 y(DF)-5 b(A;)83 2148 y Fs(Equiv)m(alence)16 b(transformations:)23
b Fo(\017)p Fr(-elimination,)e(determinization)g([17,18])j(and)132
2208 y(minim)o(izati)o(on)9 b(for)j(un)o(w)o(eigh)o(ted)e(\(b)q(oth)j
(the)e(general)g(case)h([1])f(and)h(the)f(more)f(e\016cien)o(t)132
2269 y(acyclic)17 b(case)h([29]\))h(and)g(w)o(eigh)o(ted)e(acceptors)i
(and)g(transducers)g([15,18],)g(remo)o(v)m(al)132 2329
y(of)d(inaccessible)f(states)i(and)g(transitions;)83
2389 y Fs(Searc)n(h:)24 b Fr(b)q(est)18 b(path)h([20],)e
Fo(n)p Fr(-b)q(est)h(paths,)g(pruning)g(\(remo)o(v)o(e)e(all)h(states)h
(and)g(transi-)132 2449 y(tions)f(that)g(o)q(ccur)g(only)g(on)g(paths)h
(of)f(w)o(eigh)o(t)f(greater)h(b)o(y)f(a)h(giv)o(en)f(threshold)h(than)
132 2509 y(the)f(b)q(est)g(path\);)83 2570 y Fs(Represen)n(tation)h
(and)j(storage)e(managemen)n(t:)j Fr(create)11 b(and)g(con)o(v)o(ert)f
(among)g(au-)132 2630 y(tomata)22 b(represen)o(tations)f(with)h
(di\013eren)o(t)f(p)q(erformance)g(tradeo\013s;)i(also,)f(as)h(dis-)132
2690 y(cussed)c(in)f(Section)h(3.3,)f(man)o(y)g(of)h(the)g(library)f
(functions)h(can)g(ha)o(v)o(e)f(their)g(e\013ects)872
2856 y(12)p eop
%%Page: 13 13
13 12 bop 132 42 a Fr(dela)o(y)o(ed)18 b(for)i(lazy)f(execution,)f(and)
j(functions)e(are)h(pro)o(vided)f(to)h(cac)o(he)f(and)h(force)132
102 y(dela)o(y)o(ed)10 b(ob)s(jects,)h(inspired)g(b)o(y)g(similar)e
(features)j(in)f(lazy)g(functional)h(programming.)83
215 y(In)f(addition,)f(a)h(comprehensiv)o(e)d(set)j(of)g(supp)q(ort)h
(functions)f(is)g(pro)o(vided)f(to)h(manipulate)83 275
y(the)h(in)o(ternal)g(represen)o(tations)h(of)g(automata)f(\(for)h
(instance,)f(top)q(ological)i(sorting\),)f(for)83 335
y(con)o(v)o(erting)20 b(b)q(et)o(w)o(een)h(in)o(ternal)f(and)i
(external)f(represen)o(tations,)f(and)i(for)g(accessing)83
396 y(and)i(m)o(utating)e(the)i(comp)q(onen)o(ts)e(of)i(an)g(automaton)
g(\(states,)g(transitions,)f(initial)83 456 y(state)17
b(and)f(accepting)g(w)o(eigh)o(ts\).)83 569 y(F)l(or)22
b(con)o(v)o(enien)o(t)e(exp)q(erimen)o(tation,)f(eac)o(h)i(of)h(the)g
(library's)f(main)f(functions)i(has)g(a)83 629 y(Unix)17
b(shell-lev)o(el)f(coun)o(terpart)i(that)h(op)q(erates)h(b)q(et)o(w)o
(een)d(external)h(automata)g(repre-)83 690 y(sen)o(tations,)13
b(allo)o(wing)f(the)h(expression)f(of)h(complex)d(op)q(erations)k(on)f
(automata)g(as)h(shell)83 750 y(pip)q(elines.)j(The)i(concrete)f
(example)f(in)h(the)h(next)f(section)h(is)g(presen)o(ted)f(in)g(terms)g
(of)83 810 y(those)f(commands)d(for)j(simplici)o(t)o(y)l(.)83
923 y(These)i(Unix)f(shell-lev)o(el)e(commands)h(are)i(a)o(v)m(ailable)
f(for)h(do)o(wnload)h(for)f(a)h(v)m(ariet)o(y)e(of)83
983 y(computer)f(arc)o(hitectures)g(from)g(the)h(A)l(T&T)h(Labs)g({)g
(Researc)o(h)f(w)o(eb)g(site)g([23])g(along)83 1044 y(with)e(do)q
(cumen)o(tation,)f(tutorials,)h(and)h(exercises.)83 1266
y Fs(5)56 b(Language)19 b(pro)r(cessing)e(applications)83
1440 y Fr(As)h(noted)h(in)f(Section)g(1,)g(\014nite-state)g(metho)q(ds)
g(ha)o(v)o(e)f(b)q(een)i(used)f(v)o(ery)f(successfully)83
1500 y(in)f(a)g(v)m(ariet)o(y)g(of)g(language-pro)q(cessing)i
(applications.)e(Ho)o(w)o(ev)o(er,)e(un)o(til)h(w)o(e)h(dev)o(elop)q
(ed)83 1560 y(our)h(library)l(,)e(those)h(applications)h(had)f(not)h
(included)e(sp)q(eec)o(h)h(sp)q(eec)o(h)g(recognition.)83
1674 y(Curren)o(t)21 b(sp)q(eec)o(h-recognition)g(systems)g(rely)f(on)i
(a)g(v)m(ariet)o(y)f(of)h(probabilistic)e(\014nite-)83
1734 y(state)11 b(mo)q(dels,)e(for)j(instance)e Fo(n)p
Fr(-gram)h(language)g(mo)q(dels)f([30],)h(m)o(ultiple)o(-pron)o
(unciation)83 1794 y(dictionaries)16 b([13],)g(and)h(con)o(text-dep)q
(enden)o(t)f(acoustic)g(mo)q(dels)g([12].)g(Ho)o(w)o(ev)o(er,)f(most)83
1854 y(sp)q(eec)o(h)e(recognizers)g(do)i(not)f(tak)o(e)f(adv)m(an)o
(tage)i(of)f(the)g(shared)g(prop)q(erties)g(of)g(the)g(infor-)83
1914 y(mation)h(sources)i(they)f(use.)g(Instead,)g(they)g(rely)f(on)i
(sp)q(ecial-purp)q(ose)g(algorithms)f(for)83 1975 y(sp)q(eci\014c)i
(represen)o(tations.)g(That)h(means)f(that)h(the)f(recognizer)g(has)h
(to)g(b)q(e)g(rewritten)83 2035 y(if)c(represen)o(tations)g(are)h(c)o
(hanged)g(for)f(a)h(new)g(application)f(or)h(for)g(increased)f
(accuracy)83 2095 y(or)j(p)q(erformance.)d(Exp)q(erimen)o(ts)h(with)h
(di\013eren)o(t)f(represen)o(tations)h(are)g(therefore)g(dif-)83
2155 y(\014cult,)i(as)i(they)e(require)g(c)o(hanging)h(or)h(ev)o(en)e
(completely)e(replacing)i(fairly)g(in)o(tricate)83 2215
y(recognition)d(programs.)83 2329 y(This)e(situation)h(is)f(not)g(to)q
(o)h(di\013eren)o(t)f(from)f(that)h(in)g(programming-language)g
(parsing)83 2389 y(b)q(efore)20 b Fn(lex)f Fr(and)i Fn(yacc)e
Fr([2].)g(F)l(urthermore,)f(sp)q(ecialized)g(represen)o(tations)i(and)h
(algo-)83 2449 y(rithms)11 b(preclude)g(certain)g(global)i
(optimizations)e(based)i(on)f(the)g(general)g(prop)q(erties)h(of)83
2509 y(\014nite-state)h(mo)q(dels.)f(Again,)h(the)g(situation)h(is)f
(similar)e(to)j(the)f(lac)o(k)f(of)i(general)f(meth-)83
2570 y(o)q(ds)21 b(in)f(programming-language)g(parsing)g(b)q(efore)g
(the)g(dev)o(elopmen)o(t)d(of)j(the)g(theory)83 2630
y(of)e(deterministic)c(con)o(text-free)i(languages)j(and)f(of)g
(general)g(grammar)e(optimization)83 2690 y(tec)o(hniques)f(based)i(on)
f(it.)872 2856 y(13)p eop
%%Page: 14 14
14 13 bop 606 63 a Fr(Baseform)48 b(Phone)i(W)l(ord)p
581 92 649 2 v 606 155 a(p)221 b(pr)137 b(purp)q(ose)606
245 y(er)207 b(er)606 336 y(p)221 b(p)q(cl)606 426 y(-)232
b(pr)606 516 y(ax)198 b(ix)606 607 y(s)229 b(s)606 697
y(ae)202 b(eh)134 b(and)606 787 y(n)221 b(n)606 877 y(d)g(-)606
968 y(r)229 b(r)164 b(resp)q(ect)606 1058 y(ih)207 b(ix)606
1148 y(s)229 b(s)606 1239 y(p)221 b(p)q(cl)606 1329 y(-)232
b(pr)606 1419 y(eh)199 b(eh)606 1509 y(k)222 b(k)o(cl)606
1600 y(t)229 b(tr)662 1696 y Fu(Fig.)14 b(8.)h(String)g(Alignmen)o(t)83
1910 y Fr(As)22 b(noted)f(in)h(Section)f(1,)h(in)f(sp)q(eec)o(h)g
(recognition)h(it)f(is)g(essen)o(tial)g(that)h(alternativ)o(e)83
1970 y(w)o(a)o(ys)c(of)g(generating)g(or)h(transforming)e(a)i(string)f
(b)q(e)g(w)o(eigh)o(ted)f(b)o(y)h(the)g(lik)o(eliho)q(o)q(d)f(of)83
2030 y(that)d(generation)f(or)h(transformation.)f(Therefore,)f(the)h
(crucial)f(step)h(in)g(applying)g(gen-)83 2090 y(eral)k(\014nite-state)
h(tec)o(hniques)e(to)h(sp)q(eec)o(h)g(recognition)h(problems)e(w)o(as)i
(to)g(mo)o(v)o(e)d(from)83 2151 y(regular)j(languages)h(to)f(rational)g
(p)q(o)o(w)o(er)g(series,)f(and)h(from)f(un)o(w)o(eigh)o(ted)g(to)h(w)o
(eigh)o(ted)83 2211 y(automata.)308 2193 y Ft(6)356 2211
y Fr(The)i(main)f(c)o(hallenges)g(in)h(this)g(mo)o(v)o(e)d(ha)o(v)o(e)j
(b)q(een)g(the)f(generalization)83 2271 y(of)h(core)g(algorithms)f(to)i
(the)f(w)o(eigh)o(ted)f(case,)g(and)i(their)e(implem)o(en)o(tation)e
(with)j(the)83 2331 y(degree)c(of)g(e\016ciency)e(required)h(in)h(sp)q
(eec)o(h)g(recognition.)p 83 2641 150 2 v 83 2673 a Ft(6)128
2690 y Fu(W)l(eigh)o(ted)g(acceptors)e(and)h(transducers)g(ha)o(v)o(e)f
(also)h(b)q(een)h(used)f(in)h(image)f(pro)q(cessing)g([4].)872
2856 y Fr(14)p eop
%%Page: 15 15
15 14 bop 424 2 962 2 v 423 92 2 91 v 449 65 a Fr(Baseform)p
672 92 V 49 w(Phone)p 855 92 V 53 w(W)l(eigh)o(ts)p 1080
92 V 51 w(T)o(yp)q(e)p 1385 92 V 423 182 V 529 155 a
Fo(a)555 162 y Fk(i)p 672 182 V 745 155 a Fo(b)766 162
y Fk(j)p 855 182 V 881 155 a Fo(w)q Fr(\()p Fo(a)962
162 y Fk(i)976 155 y Fo(;)8 b(b)1019 162 y Fk(j)1037
155 y Fr(\))p 1080 182 V 1385 182 V 424 184 962 2 v 423
274 2 91 v 525 247 a(ae)p 672 274 V 169 w(eh)p 855 274
V 167 w(1)p 1080 274 V 125 w(substitution)p 1385 274
V 423 364 V 535 337 a(d)p 672 364 V 193 w Fo(\017)p 855
364 V 181 w Fr(2)p 1080 364 V 125 w(deletion)p 1385 364
V 423 455 V 539 428 a Fo(\017)p 672 455 V 182 w Fr(pr)p
855 455 V 169 w(1)p 1080 455 V 125 w(insertion)p 1385
455 V 424 456 962 2 v 596 525 a Fu(Fig.)15 b(9.)g(W)l(eigh)o(ted)g
(Edit)h(Distance)83 613 y Fq(5.1)50 b(Simple)18 b(Example:)g(A)o
(lignment)83 784 y Fr(As)g(a)h(simple)d(example)g(of)j(the)f(use)g(of)h
(the)f(library)g(in)g(sp)q(eec)o(h)g(pro)q(cessing,)g(w)o(e)g(sho)o(w)
83 844 y(ho)o(w)23 b(to)g(\014nd)h(the)e(b)q(est)h(alignmen)o(t)e(b)q
(et)o(w)o(een)h(t)o(w)o(o)h(strings)g(using)g(a)h(w)o(eigh)o(ted)e
(edit)83 904 y(distance,)i(whic)o(h)f(can)i(b)q(e)f(applied)g(for)h
(instance)f(to)g(\014nding)h(the)f(b)q(est)h(alignmen)o(t)83
964 y(b)q(et)o(w)o(een)11 b(the)g(dictionary)g(phonetic)f
(transcription)i(of)g(a)f(w)o(ord)h(string)g(and)g(the)f(acoustic)83
1025 y(\(phone\))g(realization)f(of)i(the)e(same)g(w)o(ord)h(string,)g
(as)g(exempli\014ed)d(in)j(Figure)f(8.)h(Figure)f(9)83
1085 y(sho)o(ws)i(a)g(domain-dep)q(enden)o(t)e(table)g(of)i(insertion,)
e(deletion)g(and)i(substitution)f(w)o(eigh)o(ts)83 1145
y(b)q(et)o(w)o(een)16 b(phonemes)f(and)i(phones.)g(In)f(a)h(real)f
(application,)g(those)h(w)o(eigh)o(ts)f(w)o(ould)h(b)q(e)83
1205 y(deriv)o(ed)10 b(automatically)f(from)i(aligned)g(examples)e
(using)j(a)f(suitable)g(mac)o(hine-learning)83 1265 y(metho)q(d)h
([13,32].)g(The)g(minim)o(um)c(edit)k(distance)g(b)q(et)o(w)o(een)f(t)o
(w)o(o)i(strings)g(can)f(b)q(e)h(simply)83 1326 y(de\014ned)j(b)o(y)g
(the)g(recurrences)294 1454 y Fo(d)p Fr(\()p Fs(a)366
1436 y Ft(0)386 1454 y Fo(;)8 b Fs(b)439 1436 y Ft(0)458
1454 y Fr(\))23 b(=)138 b(0)289 1635 y Fo(d)314 1642
y Fk(s)332 1635 y Fr(\()p Fs(a)378 1617 y Fk(i)393 1635
y Fo(;)8 b Fs(b)446 1617 y Fk(j)464 1635 y Fr(\))17 b(=)g
Fo(d)p Fr(\()p Fs(a)626 1617 y Fk(i)p Fl(\000)p Ft(1)686
1635 y Fo(;)8 b Fs(b)739 1617 y Fk(j)r Fl(\000)p Ft(1)802
1635 y Fr(\))17 b(+)138 b Fo(w)q Fr(\()p Fo(a)1095 1642
y Fk(i)1109 1635 y Fo(;)8 b(b)1152 1642 y Fk(j)1169 1635
y Fr(\))139 b(\(substitution\))288 1725 y Fo(d)313 1732
y Fk(d)333 1725 y Fr(\()p Fs(a)379 1707 y Fk(i)394 1725
y Fo(;)8 b Fs(b)447 1707 y Fk(j)465 1725 y Fr(\))16 b(=)39
b Fo(d)p Fr(\()p Fs(a)648 1707 y Fk(i)p Fl(\000)p Ft(1)708
1725 y Fo(;)8 b Fs(b)761 1707 y Fk(j)779 1725 y Fr(\))40
b(+)147 b Fo(w)q Fr(\()p Fo(a)1104 1732 y Fk(i)1118 1725
y Fo(;)8 b(\017)p Fr(\))191 b(\(deletion\))291 1815 y
Fo(d)316 1822 y Fk(i)330 1815 y Fr(\()p Fs(a)376 1797
y Fk(i)390 1815 y Fo(;)8 b Fs(b)443 1797 y Fk(j)462 1815
y Fr(\))19 b(=)39 b Fo(d)p Fr(\()p Fs(a)648 1797 y Fk(i)663
1815 y Fo(;)8 b Fs(b)716 1797 y Fk(j)r Fl(\000)p Ft(1)779
1815 y Fr(\))40 b(+)148 b Fo(w)q Fr(\()p Fo(\017;)8 b(b)1142
1822 y Fk(j)1159 1815 y Fr(\))184 b(\(insertion\))298
1996 y Fo(d)p Fr(\()p Fs(a)369 1978 y Fk(i)383 1996 y
Fo(;)8 b Fs(b)436 1978 y Fk(j)455 1996 y Fr(\))26 b(=)17
b(min)n Fm(f)p Fo(d)686 2003 y Fk(s)705 1996 y Fr(\()p
Fs(a)751 1978 y Fk(i)765 1996 y Fo(;)8 b Fs(b)818 1978
y Fk(j)836 1996 y Fr(\))p Fo(;)g(d)902 2003 y Fk(d)923
1996 y Fr(\()p Fs(a)969 1978 y Fk(i)983 1996 y Fo(;)g
Fs(b)1036 1978 y Fk(j)1054 1996 y Fr(\))p Fo(;)g(d)1120
2003 y Fk(i)1135 1996 y Fr(\()p Fs(a)1181 1978 y Fk(i)1195
1996 y Fo(;)g Fs(b)1248 1978 y Fk(j)1266 1996 y Fr(\))p
Fm(g)83 2167 y Fr(The)19 b(p)q(ossible)g(one)f(sym)o(b)q(ol)g(edits)g
(\(insertion,)g(deletion)f(or)i(substitution\))g(and)h(their)83
2227 y(w)o(eigh)o(ts)c(can)h(b)q(e)f(readily)f(represen)o(ted)h(b)o(y)g
(a)g(one-state)i(w)o(eigh)o(ted)d(transducer.)h(If)g(the)83
2287 y(transducer)k(is)g(in)g(\014le)g Fn(T.fst)e Fr(and)j(the)f
(strings)g(to)h(b)q(e)f(aligned)g(are)g(represen)o(ted)f(b)o(y)83
2348 y(acceptors)i Fn(A.fsa)e Fr(and)j Fn(B.fsa)p Fr(,)c(the)j(b)q(est)
g(alignmen)o(t)e(is)i(computed)f(simply)f(b)o(y)h(the)83
2408 y(shell)15 b(command)132 2519 y Fn(fsmcompos)o(e)23
b(A.fsa)h(T.fst)f(B.fsa)h(|)h(fsmbestpath)d(>C.fst)83
2630 y Fr(Abbreviated)15 b(examples)g(of)h(the)h(inputs)f(and)h
(outputs)g(to)g(this)f(command)f(are)h(sho)o(wn)83 2690
y(in)g(Figure)g(10.)872 2856 y(15)p eop
%%Page: 16 16
16 15 bop 205 158 a @beginspecial 102 @llx 345 @lly 511
@urx 448 @ury 1440 @rwi @setspecial
%%BeginDocument: aut6.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
101 344 410 104 boxprim clip newpath
102 345 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
204 41 moveto () 0 14.00 -0.50 alignedtext
204 25 moveto () 0 14.00 -0.50 alignedtext
204 9 moveto (A.fsa) 29 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 70 18 18 ellipse_path
stroke
gsave 10 dict begin
18 71 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
146 70 18 18 ellipse_path
stroke
gsave 10 dict begin
146 71 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 68 moveto
43 68 49 67 54 67 curveto
72 66 99 68 120 69 curveto
stroke
128 69 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
82 86 moveto (ae) 26 30.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
264 70 18 18 ellipse_path
stroke
gsave 10 dict begin
264 71 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 164 68 moveto
171 68 177 67 182 67 curveto
197 66 220 67 238 69 curveto
stroke
246 69 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
205 86 moveto (n) 15 30.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
386 70 18 18 ellipse_path
stroke
386 70 22 22 ellipse_path
stroke
gsave 10 dict begin
386 71 moveto (3	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 282 68 moveto
289 68 295 67 300 67 curveto
315 66 337 67 356 69 curveto
stroke
364 69 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
323 85 moveto (d) 15 30.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 800 w @beginspecial 160 @llx 345 @lly 453
@urx 448 @ury 1080 @rwi @setspecial
%%BeginDocument: aut7.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
159 344 294 104 boxprim clip newpath
160 345 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
146 41 moveto () 0 14.00 -0.50 alignedtext
146 25 moveto () 0 14.00 -0.50 alignedtext
146 9 moveto (B.fsa) 29 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 70 18 18 ellipse_path
stroke
gsave 10 dict begin
18 71 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
148 70 18 18 ellipse_path
stroke
gsave 10 dict begin
148 71 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 68 moveto
43 68 49 67 54 67 curveto
73 66 101 68 122 69 curveto
stroke
130 69 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
83 86 moveto (eh) 28 30.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
270 70 18 18 ellipse_path
stroke
270 70 22 22 ellipse_path
stroke
gsave 10 dict begin
270 71 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 166 68 moveto
173 68 179 67 184 67 curveto
199 66 221 67 240 69 curveto
stroke
248 69 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
207 85 moveto (n) 15 30.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 355 517 a @beginspecial 173 @llx 289 @lly
440 @urx 504 @ury 720 @rwi @setspecial
%%BeginDocument: aut8.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
172 288 268 216 boxprim clip newpath
173 289 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
133 41 moveto () 0 14.00 -0.50 alignedtext
133 25 moveto () 0 14.00 -0.50 alignedtext
133 9 moveto (T.fst) 26 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
133 74 22 23 ellipse_path
stroke
133 74 26 27 ellipse_path
stroke
gsave 10 dict begin
133 75 moveto (0	/0) 17 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 0
newpath 137 100 moveto
138 110 136 118 133 118 curveto
131 118 129 114 129 108 curveto
stroke
129 100 90.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
133 135 moveto (ae:eh/1) 86 30.00 -0.50 alignedtext
end grestore

%	0 -> 0
newpath 159 80 moveto
254 106 246 150 133 150 curveto
23 150 13 109 99 82 curveto
stroke
107 80 165.96 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
133 167 moveto (n:n/0) 61 30.00 -0.50 alignedtext
end grestore

%	0 -> 0
newpath 158 82 moveto
260 120 252 182 133 182 curveto
18 182 7 124 99 85 curveto
stroke
108 82 161.57 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
133 199 moveto (d:eps/2) 86 30.00 -0.50 alignedtext
end grestore

%	0 -> 0
newpath 158 84 moveto
266 132 258 214 133 214 curveto
10 214 0 135 102 87 curveto
stroke
108 84 153.43 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
133 231 moveto (eps:pr/1) 96 30.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 500 w @beginspecial 36 @llx 343 @lly 633
@urx 450 @ury 1800 @rwi @setspecial
%%BeginDocument: aut9.eps

save
/DotDict 200 dict def
DotDict begin

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
gsave
35 342 598 108 boxprim clip newpath
36 343 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
298 41 moveto () 0 14.00 -0.50 alignedtext
298 25 moveto () 0 14.00 -0.50 alignedtext
298 9 moveto (C.fst) 26 14.00 -0.50 alignedtext
end grestore

%	0
gsave 10 dict begin
bold
18 74 18 18 ellipse_path
stroke
gsave 10 dict begin
18 75 moveto (0	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1
gsave 10 dict begin
solid
206 74 18 18 ellipse_path
stroke
gsave 10 dict begin
206 75 moveto (1	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
newpath 36 72 moveto
43 72 49 71 54 71 curveto
89 70 148 72 181 73 curveto
stroke
188 73 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
112 90 moveto (ae:eh/1) 86 30.00 -0.50 alignedtext
end grestore

%	2
gsave 10 dict begin
solid
370 74 18 18 ellipse_path
stroke
gsave 10 dict begin
370 75 moveto (2	) 7 14.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
newpath 224 72 moveto
231 72 237 71 242 71 curveto
270 70 314 72 343 73 curveto
stroke
352 73 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
288 90 moveto (n:n/0) 61 30.00 -0.50 alignedtext
end grestore

%	3
gsave 10 dict begin
solid
569 74 22 23 ellipse_path
stroke
569 74 26 27 ellipse_path
stroke
gsave 10 dict begin
569 75 moveto (3	/0) 17 14.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 3
newpath 388 73 moveto
420 73 486 71 524 71 curveto
527 71 530 71 533 72 curveto
stroke
542 72 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
30.00 /Times-Roman set_font
465 90 moveto (d:eps/3) 86 30.00 -0.50 alignedtext
end grestore
endpage
grestore
end
restore
%%EndDocument
 @endspecial 610 613 a Fu(Fig.)15 b(10.)f(Alignmen)o(t)j(Automata)p
283 674 1244 2 v 282 764 2 91 v 308 737 a Fr(Baseform\(s\))p
588 764 V 49 w(Phone\(s\))p 829 764 V 53 w(W)l(eigh)o(ts)p
1053 764 V 52 w(T)o(yp)q(e)p 1526 764 V 282 855 V 416
828 a Fo(a)442 835 y Fk(i)p 588 855 V 690 828 a Fo(b)711
835 y Fk(j)p 829 855 V 854 828 a Fo(w)q Fr(\()p Fo(a)935
835 y Fk(i)949 828 y Fo(;)8 b(b)992 835 y Fk(j)1010 828
y Fr(\))p 1053 855 V 1526 855 V 283 856 1244 2 v 282
947 2 91 v 423 920 a(p)p 588 947 V 196 w(p)q(cl)16 b(pr)p
829 947 V 158 w(1)p 1053 947 V 125 w(expansion)p 1526
947 V 282 1037 V 383 1010 a(eh)g(m)p 588 1037 V 188 w(em)p
829 1037 V 188 w(3)p 1053 1037 V 125 w(con)o(traction)p
1526 1037 V 282 1127 V 394 1100 a(r)g(eh)p 588 1127 V
189 w(ax)g(r)p 829 1127 V 178 w(2)p 1053 1127 V 125 w(transp)q(osition)
p 1526 1127 V 282 1218 V 337 1190 a(t)p Fo(=V)420 1172
y Fl(0)p 431 1197 66 2 v 496 1190 a Fo(V)p 588 1218 2
91 v 159 w Fr(dx)p 829 1218 V 194 w(0)p 1053 1218 V 125
w(con)o(text-dep)q(endency)p 1526 1218 V 283 1219 1244
2 v 461 1288 a Fu(Fig.)f(11.)f(Generalized)j(W)l(eigh)o(ted)f(Edit)f
(Distance)83 1389 y Fr(The)k(correctness)f(of)i(this)e(implem)o(en)o
(tation)e(of)j(minim)n(um)c(edit)j(distance)h(alignmen)o(t)83
1449 y(dep)q(ends)i(on)h(the)f(use)g(of)h(suitable)e(w)o(eigh)o(t)h
(com)o(bination)e(rules)i(in)g(automata)g(com-)83 1509
y(p)q(osition,)h(sp)q(eci\014cally)f(those)h(of)g(the)g(tropical)f
(semiring,)f(whic)o(h)h(w)o(as)h(discussed)g(in)83 1570
y(Section)16 b(3.2.)83 1684 y(Alignmen)o(t)9 b(b)o(y)i(transduction)h
(can)g(b)q(e)g(readily)e(extended)h(to)h(situations)g(in)f(whic)o(h)g
(edits)83 1744 y(in)o(v)o(olv)o(e)e(longer)j(strings)g(or)g(are)f(con)o
(text-dep)q(enden)o(t,)f(as)i(those)g(sho)o(wn)g(in)f(Figure)g(11.)h
(In)83 1804 y(suc)o(h)f(cases,)g(states)h(in)f(the)g(edit)g(transducer)
g(enco)q(de)h(appropriate)g(con)o(text)e(conditions.)83
1864 y(F)l(urthermore,)g(a)j(set)g(of)g(w)o(eigh)o(ted)e(edit)h(rules)g
(lik)o(e)f(those)i(in)f(Figure)g(11)h(can)g(b)q(e)g(directly)83
1925 y(compiled)h(in)o(to)i(an)h(appropriate)f(w)o(eigh)o(ted)g
(transducer)g([26].)83 2154 y Fs(6)56 b(Conclusion)83
2329 y Fr(W)l(e)14 b(presen)o(ted)g(a)h(v)o(ery)e(general)h
(\014nite-state)h(library)e(based)i(on)g(the)g(notions)g(of)g(semir-)83
2389 y(ing)20 b(and)g(of)g(rational)g(p)q(o)o(w)o(er)g(series,)e(whic)o
(h)h(allo)o(w)o(ed)g(us)h(to)g(use)g(the)f(same)g(co)q(de)h(for)83
2449 y(a)h(v)m(ariet)o(y)f(of)h(di\013eren)o(t)f(applications)h
(requiring)f(di\013eren)o(t)g(semirings.)f(The)i(curren)o(t)83
2509 y(v)o(ersion)f(of)i(the)f(library)f(is)h(written)g(in)g(C,)g(with)
g(the)g(semiring)e(op)q(erations)j(de\014ned)83 2570
y(as)g(macros.)f(Our)g(new)h(v)o(ersion)e(is)i(b)q(eing)f(written)g(in)
h(C++)f(to)h(tak)o(e)f(adv)m(an)o(tage)i(of)83 2630 y(templates)14
b(to)h(supp)q(ort)i(more)d(general)h(transition)g(lab)q(els)h(and)f(m)o
(ultiple)e(semirings)g(in)83 2690 y(a)k(single)e(application.)872
2856 y(16)p eop
%%Page: 17 17
17 16 bop 83 42 a Fr(Our)18 b(exp)q(erience)f(sho)o(ws)i(that)g(it)f
(is)g(p)q(ossible)h(and)g(in)f(fact)g(sometimes)e(easier)i(to)g(im-)83
102 y(plemen)o(t)11 b(e\016cien)o(t)h(generic)h(algorithms)g(for)i(a)f
(class)g(of)g(semirings)e(than)j(to)f(implem)o(en)o(t)83
162 y(sp)q(ecialized)j(algorithms)g(for)i(particular)f(semirings.)e
(Similarly)l(,)f(lazy)j(v)o(ersions)g(of)h(al-)83 222
y(gorithms)d(are)g(often)g(easier)g(to)g(impleme)o(n)o(t)d(than)k
(their)f(traditional)g(coun)o(terparts.)83 332 y(W)l(e)11
b(tested)f(the)h(e\016ciency)e(of)i(our)h(library)e(b)o(y)g(building)h
(comp)q(etitiv)o(e)d(large-v)o(o)q(cabulary)83 393 y(sp)q(eec)o(h)18
b(recognition)g(applications)g(in)o(v)o(olving)f(v)o(ery)g(large)h
(automata)h(\()p Fo(>)e Fr(10)1552 375 y Ft(6)1591 393
y Fr(states,)83 453 y Fo(>)23 b Fr(10)192 435 y Ft(7)234
453 y Fr(transitions\))g([24,25].)e(The)h(library)f(is)g(b)q(eing)h
(used)g(in)f(a)i(v)m(ariet)o(y)d(of)i(sp)q(eec)o(h)83
513 y(recognition)17 b(and)i(sp)q(eec)o(h)e(syn)o(thesis)g(pro)s(jects)
g(at)h(A)l(T&T)g(Labs)h(and)f(at)g(Lucen)o(t)g(Bell)83
573 y(Lab)q(oratories.)83 770 y Fs(References)106 936
y Fu([1])11 b(A.)22 b(V.)f(Aho,)g(J.)h(E.)f(Hop)q(croft,)g(and)h(J.)g
(D.)f(Ullman.)41 b Fw(The)22 b(design)f(and)i(analysis)e(of)166
993 y(c)n(omputer)c(algorithms)p Fu(.)j(Addison)c(W)l(esley:)g
(Reading,)g(MA,)f(1974.)106 1087 y([2])c(A.)j(V.)h(Aho,)f(R.)h(Sethi,)g
(and)g(J.)f(D.)g(Ullman.)21 b Fw(Compilers:)15 b(Principles,)f(T)m(e)n
(chniques)g(and)166 1144 y(T)m(o)n(ols)p Fu(.)k(Addison)f(W)l(esley:)e
(Reading,)h(MA,)f(1986.)106 1238 y([3])c(T.)j(Cormen,)f(C.)h
(Leiserson,)h(and)g(R.)f(Riv)o(est.)20 b Fw(Intr)n(o)n(duction)15
b(to)g(A)o(lgorithms)p Fu(.)k(The)c(MIT)166 1295 y(Press:)g(Cam)o
(bridge,)g(MA,)f(1992.)106 1389 y([4])d(K.)j(Culik)g(I)q(I)h(and)f(J.)f
(Kari.)20 b(Digital)14 b(images)g(and)g(formal)f(languages.)19
b(In)14 b(G.)f(Rozen)o(b)q(erg)166 1446 y(and)28 b(A.)g(Salomaa,)f
(editors,)g Fw(Handb)n(o)n(ok)h(of)g(F)m(ormal)f(L)n(anguages)p
Fu(,)g(pages)g(599{616.)166 1502 y(Springer,)16 b(1997.)106
1597 y([5])11 b(M.)17 b(Gross.)27 b(The)18 b(use)g(of)g(\014nite)h
(automata)d(in)j(the)f(lexical)h(represen)o(tation)f(of)g(natural)166
1653 y(language.)i Fw(L)n(e)n(ctur)n(e)15 b(Notes)h(in)g(Computer)h
(Scienc)n(e)p Fu(,)c(377,)h(1989.)106 1747 y([6])d(M.)20
b(Gross)f(and)h(D.)g(P)o(errin,)g(editors.)35 b Fw(Ele)n(ctr)n(onic)19
b(Dictionnaries)i(and)f(A)o(utomata)i(in)166 1804 y(Computational)c
(Linguistics)p Fu(,)13 b(v)o(olume)j(377)f(of)h Fw(L)n(e)n(ctur)n(e)g
(Notes)g(in)g(Computer)i(Scienc)n(e)p Fu(.)166 1860 y(Springer)e(V)l
(erlag,)f(1989.)106 1955 y([7])c(R.)24 b(M.)f(Kaplan)h(and)g(M.)f(Ka)o
(y)l(.)44 b(Regular)25 b(mo)q(dels)f(of)f(phonological)i(rule)g
(systems.)166 2011 y Fw(Computational)17 b(Linguistics)p
Fu(,)c(20\(3\):331{378)o(,)f(1994.)106 2106 y([8])f(F.)i(Karlsson,)h
(A.)g(V)l(outilainen,)i(J.)d(Heikkila,)j(and)e(A.)f(An)o(ttila.)20
b Fw(Constr)n(aint)14 b(Gr)n(ammar,)166 2162 y(A)24 b(language-Indep)n
(endent)e(System)h(for)i(Parsing)e(Unr)n(estricte)n(d)f(T)m(ext)p
Fu(.)44 b(Mouton)22 b(de)166 2219 y(Gruyter,)14 b(1995.)106
2313 y([9])d(L.)h(Karttunen.)19 b(The)12 b(replace)h(op)q(erator.)k(In)
c Fw(33r)n(d)g(A)o(nnual)f(Me)n(eting)g(of)i(the)f(Asso)n(ciation)166
2370 y(for)25 b(Computational)g(Linguistics)p Fu(,)e(pages)h(16{23.)e
(Asso)q(ciation)j(for)f(Computational)166 2426 y(Linguistics,)14
b(1995.)k(Distributed)13 b(b)o(y)g(Morgan)e(Kaufmann)i(Publishers,)g
(San)g(F)l(rancisco,)166 2483 y(California.)83 2577 y([10])e(L.)24
b(Karttunen,)f(R.)h(M.)e(Kaplan,)i(and)g(A.)f(Zaenen.)45
b(Tw)o(o-lev)o(el)24 b(morphology)f(with)166 2633 y(comp)q(osition.)60
b(In)30 b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)c(of)i(the)h(\014fte)n(enth)e
(International)h(Confer)n(enc)n(e)e(on)166 2690 y(Computational)17
b(Linguistics)e(\(COLING'92\),)f(Nantes,)h(F)m(r)n(anc)n(e)p
Fu(.)e(COLING,)j(1992.)872 2856 y Fr(17)p eop
%%Page: 18 18
18 17 bop 83 42 a Fu([11])11 b(K.)25 b(Kosk)o(enniemi.)49
b(Finite-state)25 b(parsing)f(and)h(disam)o(biguation.)48
b(In)25 b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)166 98 y(of)35
b(the)f(thirte)n(enth)h(International)e(Confer)n(enc)n(e)f(on)j
(Computational)f(Linguistics)166 154 y(\(COLING'90\),)14
b(Helsinki,)h(Finland)p Fu(.)e(COLING,)j(1990.)83 247
y([12])11 b(K.-F.)16 b(Lee.)23 b(Con)o(text)15 b(dep)q(enden)o(t)j
(phonetic)f(hidden)h(Mark)o(o)o(v)d(mo)q(dels)i(for)e(con)o(tin)o(uous)
166 303 y(sp)q(eec)o(h)h(recognition.)21 b Fw(IEEE)15
b(T)m(r)n(ans.)g(ASSP)p Fu(,)e(38\(4\):599{609)o(,)f(Apr.)j(1990.)83
396 y([13])c(A.)j(Ljolje)h(and)f(M.)f(D.)h(Riley)l(.)21
b(Optimal)15 b(sp)q(eec)o(h)h(recognition)e(using)h(phone)g
(recognition)166 452 y(and)20 b(lexical)i(access.)34
b(In)20 b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)j(ICSLP)p
Fu(,)c(pages)j(313{316,)e(Ban\013,)h(Canada,)166 509
y(Oct.)c(1992.)83 601 y([14])c(M.)f(Mohri.)18 b(Compact)9
b(represen)o(tations)h(b)o(y)g(\014nite-state)h(transducers.)18
b(In)10 b(32)1518 584 y Fk(nd)1571 601 y Fw(Me)n(eting)166
657 y(of)16 b(the)h(Asso)n(ciation)d(for)j(Computational)f(Linguistics)
f(\(A)o(CL)f(94\),)i(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)k(the)166
714 y(Confer)n(enc)n(e,)d(L)n(as)i(Cruc)n(es,)f(New)h(Mexic)n(o)p
Fu(.)e(A)o(CL,)h(1994.)83 806 y([15])c(M.)j(Mohri.)20
b(Minimization)c(of)e(sequen)o(tial)i(transducers.)k
Fw(L)n(e)n(ctur)n(e)15 b(Notes)g(in)g(Computer)166 863
y(Scienc)n(e)p Fu(,)e(807,)h(1994.)83 955 y([16])d(M.)28
b(Mohri.)61 b(Syn)o(tactic)30 b(analysis)g(b)o(y)f(lo)q(cal)h(grammars)
d(automata:)g(an)i(e\016cien)o(t)166 1012 y(algorithm.)j(In)20
b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)i(the)h(International)d(Confer)n
(enc)n(e)g(on)i(Computational)166 1068 y(L)n(exic)n(o)n(gr)n(aphy)k
(\(COMPLEX)f(94\))p Fu(.)i(Linguistic)i(Institute,)e(Hungarian)g
(Academ)o(y)g(of)166 1124 y(Science:)17 b(Budap)q(est,)e(Hungary)l(,)g
(1994.)83 1217 y([17])c(M.)20 b(Mohri.)38 b(On)21 b(some)g
(applications)i(of)d(\014nite-state)h(automata)f(theory)g(to)h(natural)
166 1273 y(language)16 b(pro)q(cessing.)k Fw(Journal)d(of)f(Natur)n(al)
g(L)n(anguage)g(Engine)n(ering)p Fu(,)d(2:1{20,)g(1996.)83
1366 y([18])e(M.)31 b(Mohri.)67 b(Finite-state)31 b(transducers)h(in)g
(language)f(and)g(sp)q(eec)o(h)h(pro)q(cessing.)166 1422
y Fw(Computational)17 b(Linguistics)p Fu(,)c(23:269{311,)f(1997.)83
1515 y([19])f(M.)i(Mohri.)19 b(On)14 b(the)f(use)h(of)f(sequen)o(tial)h
(transducers)f(in)i(natural)e(language)g(pro)q(cessing.)166
1571 y(In)18 b(E.)e(Ro)q(c)o(he)i(and)f(Y.)f(Sc)o(hab)q(es,)h(editors,)
g Fw(Finite-State)g(L)n(anguage)g(Pr)n(o)n(c)n(essing)p
Fu(,)d(pages)166 1627 y(355{382.)f(MIT)i(Press,)g(1997.)83
1720 y([20])c(M.)16 b(Mohri.)26 b(General)17 b(algebraic)h(framew)o
(orks)d(and)i(algorithms)g(for)g(shortest-distance)166
1776 y(problems.)26 b(T)l(ec)o(hnical)19 b(Memorandum)e(981210-10TM,)d
(A)l(T&T)k(Labs)f(-)g(Researc)o(h,)g(62)166 1833 y(pages,)e(1998.)83
1925 y([21])c(M.)21 b(Mohri.)40 b(Minimization)24 b(algorithms)e(for)f
(sequen)o(tial)i(transducers.)40 b Fw(The)n(or)n(etic)n(al)166
1982 y(Computer)17 b(Scienc)n(e)p Fu(,)c(to)i(app)q(ear,)g(1998.)83
2074 y([22])c(M.)20 b(Mohri,)g(F.)g(C.)g(N.)g(P)o(ereira,)g(and)g(M.)g
(Riley)l(.)38 b(W)l(eigh)o(ted)21 b(automata)d(in)k(text)e(and)166
2130 y(sp)q(eec)o(h)c(pro)q(cessing.)21 b(In)16 b Fw(ECAI-96)g
(Workshop,)h(Budap)n(est,)f(Hungary)p Fu(.)f(ECAI,)g(1996.)83
2223 y([23])c(M.)27 b(Mohri,)h(F.)f(C.)g(N.)h(P)o(ereira,)f(and)h(M.)g
(Riley)l(.)59 b(General-purp)q(ose)29 b(\014nite-state)166
2279 y(mac)o(hine)g(soft)o(w)o(are)e(to)q(ols.)59 b Fw(http://www.r)n
(ese)n(ar)n(ch.att.c)n(om/sw/to)n(ols/fsm)p Fu(,)29 b(A)l(T&T)166
2336 y(Labs)16 b({)f(Researc)o(h,)g(1998.)83 2428 y([24])c(M.)k(Mohri)i
(and)f(M.)f(Riley)l(.)25 b(W)l(eigh)o(ted)16 b(determinization)i(and)e
(minimization)i(for)e(large)166 2485 y(v)o(o)q(cabulary)g(sp)q(eec)o(h)
g(recognition.)k(In)c Fw(Eur)n(osp)n(e)n(e)n(ch)g('97)p
Fu(,)f(Rho)q(des,)h(Greece,)f(1997.)83 2577 y([25])c(M.)j(Mohri,)h(M.)f
(Riley)l(,)j(D.)d(Hindle,)i(A.)f(Ljolje,)g(and)g(F.)f(C.)g(N.)h(P)o
(ereira.)20 b(F)l(ull)c(expansion)166 2633 y(of)25 b(con)o(text-dep)q
(enden)o(t)i(net)o(w)o(orks)d(in)i(large)f(v)o(o)q(cabulary)h(sp)q(eec)
o(h)g(recognition.)51 b(In)166 2690 y Fw(Pr)n(o)n(c)n(e)n(e)n(dings)14
b(of)i(ICASSP'98)p Fu(.)d(IEEE,)i(1998.)872 2856 y Fr(18)p
eop
%%Page: 19 19
19 18 bop 83 42 a Fu([26])11 b(M.)22 b(Mohri)h(and)f(R.)h(Sproat.)41
b(An)23 b(e\016cien)o(t)g(compiler)h(for)e(w)o(eigh)o(ted)h(rewrite)f
(rules.)166 98 y(In)c(34)p Fw(th)h(Me)n(eting)e(of)h(the)h(Asso)n
(ciation)e(for)i(Computational)g(Linguistic)e(s)h(\(A)o(CL)f(96\),)166
154 y(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)i(the)h(Confer)n(enc)n(e,)d
(Santa)i(Cruz,)g(California)p Fu(.)e(A)o(CL,)h(1996.)83
248 y([27])c(D.)16 b(Musser)f(and)i(A.)f(Saini.)24 b
Fw(STL)15 b(T)m(utorial)i(and)g(R)n(efer)n(enc)n(e)f(Guide)p
Fu(.)23 b(Addison-W)l(esley)l(,)166 304 y(1996.)83 397
y([28])11 b(F.)f(C.)g(N.)g(P)o(ereira)h(and)g(M.)e(D.)h(Riley)l(.)20
b(Sp)q(eec)o(h)12 b(recognition)g(b)o(y)e(comp)q(osition)h(of)g(w)o
(eigh)o(ted)166 454 y(\014nite)19 b(automata.)28 b(In)18
b(E.)g(Ro)q(c)o(he)h(and)g(Y.)f(Sc)o(hab)q(es,)g(editors,)g
Fw(Finite-State)h(L)n(anguage)166 510 y(Pr)n(o)n(c)n(essing)p
Fu(,)13 b(pages)i(431{453.)d(MIT)k(Press,)e(Cam)o(bridge,)h(Massac)o(h)
o(usetts,)e(1997.)83 603 y([29])e(D.)25 b(Revuz.)50 b(Minimisation)26
b(of)f(acyclic)h(deterministic)h(automata)d(in)i(linear)g(time.)166
660 y Fw(The)n(or)n(etic)n(al)15 b(Computer)i(Scienc)n(e)p
Fu(,)c(92:181{189,)f(1992.)83 753 y([30])f(G.)24 b(Riccardi,)i(E.)d(Bo)
q(cc)o(hieri,)j(and)f(R.)f(Pieraccini.)49 b(Non-deterministic)27
b(sto)q(c)o(hastic)166 809 y(language)e(mo)q(dels)h(for)f(sp)q(eec)o(h)
h(recognition.)50 b(In)26 b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)d(IEE)h
(International)166 866 y(Confer)n(enc)n(e)16 b(on)i(A)n(c)n(oustics,)f
(Sp)n(e)n(e)n(ch)g(and)i(Signal)e(Pr)n(o)n(c)n(essing)p
Fu(,)d(v)o(olume)k(1,)f(pages)g(237{)166 922 y(240.)d(IEEE,)h(1995.)83
1016 y([31])c(M.)23 b(Riley)l(,)j(F.)d(P)o(ereira,)h(and)g(M.)f(Mohri.)
47 b(T)l(ransducer)24 b(comp)q(osition)h(for)e(con)o(text-)166
1072 y(dep)q(enden)o(t)17 b(net)o(w)o(ork)d(expansion.)21
b(In)16 b Fw(Eur)n(osp)n(e)n(e)n(ch)f('97)p Fu(,)g(Rho)q(des,)h
(Greece,)f(1997.)83 1165 y([32])c(E.)i(Ristad)h(and)g(P)l(.)g
(Yianilos.)20 b(Finite)15 b(gro)o(wth)d(mo)q(dels.)20
b(T)l(ec)o(hnical)c(rep)q(ort)d(CS-TR-533-)166 1222 y(96,)h(Departmen)o
(t)h(of)f(Computer)h(Science,)i(Princeton)f(Univ)o(ersit)o(y)l(,)f
(1996.)83 1315 y([33])c(E.)40 b(Ro)q(c)o(he.)97 b Fw(A)o(nalyse)38
b(Syntaxique)i(T)m(r)n(ansformationnel)r(le)d(du)j(F)m(r)n(an\030)-21
b(cais)39 b(p)n(ar)166 1371 y(T)m(r)n(ansducteurs)15
b(et)i(L)n(exique-Gr)n(ammair)n(e)p Fu(.)j(PhD)15 b(thesis,)g(Univ)o
(ersit)o(\023)-21 b(e)15 b(P)o(aris)g(7,)g(1993.)83 1465
y([34])c(E.)30 b(Ro)q(c)o(he.)65 b(Tw)o(o)30 b(parsing)g(metho)q(ds)g
(b)o(y)h(means)f(of)g(\014nite)h(state)e(transducers.)166
1521 y(In)i Fw(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)j(the)g(sixte)n(en)e
(International)g(Confer)n(enc)n(e)f(on)i(Computational)166
1577 y(Linguistics)15 b(\(COLING'94\),)f(Kyoto,)j(Jap)n(an)p
Fu(.)d(COLING,)i(1994.)83 1671 y([35])11 b(A.)21 b(Salomaa)g(and)g(M.)f
(Soittola.)38 b Fw(A)o(utomata-The)n(or)n(etic)22 b(Asp)n(e)n(cts)e(of)
i(F)m(ormal)g(Power)166 1727 y(Series)p Fu(.)d(Springer-V)l(erlag:)d
(New)g(Y)l(ork,)e(1978.)83 1820 y([36])d(M.)k(P)l(.)g(Sc)o(h)q(\177)-24
b(utzen)o(b)q(erger.)22 b(On)16 b(the)g(de\014nition)h(of)e(a)h(family)
g(of)f(automata.)k Fw(Information)166 1877 y(and)d(Contr)n(ol)p
Fu(,)e(4,)h(1961.)83 1970 y([37])c(M.)i(Silb)q(erztein.)23
b Fw(Dictionnair)n(es)13 b(\023)-22 b(ele)n(ctr)n(oniques)14
b(et)h(analyse)f(automatique)j(de)f(textes:)e(le)166
2026 y(syst)o(\022)-22 b(eme)16 b(INTEX)p Fu(.)i(Masson:)c(P)o(aris,)h
(F)l(rance,)f(1993.)83 2120 y([38])d(I.)16 b(Simon.)21
b(Limited)c(subsets)e(of)h(a)f(free)g(monoid.)21 b(In)16
b Fw(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)j(the)g(19th)g(A)o(nnual)166
2176 y(Symp)n(osium)f(on)h(F)m(oundation)e(of)i(Computer)g(Scienc)n(e)p
Fu(,)c(pages)i(143{150,)e(1978.)83 2269 y([39])e(R.)k(Sproat.)20
b Fw(Morpholo)n(gy)c(and)h(Computation)p Fu(.)j(The)15
b(MIT)h(Press,)e(1992.)83 2362 y([40])d(R.)28 b(Sproat.)58
b(A)28 b(\014nite-state)g(arc)o(hitecture)h(for)e(tok)o(enization)i
(and)f(grapheme-to-)166 2419 y(phoneme)19 b(con)o(v)o(ersion)f(in)h(m)o
(ultilingual)i(text)d(analysis.)29 b(In)19 b Fw(Pr)n(o)n(c)n(e)n(e)n
(dings)e(of)i(the)g(A)o(CL)166 2475 y(SIGD)o(A)m(T)c(Workshop,)i
(Dublin,)f(Ir)n(eland)p Fu(.)d(A)o(CL,)i(1995.)872 2856
y Fr(19)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
